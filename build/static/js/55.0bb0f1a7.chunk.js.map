{"version":3,"sources":["components/PaginationAnimeList/PaginationAnime.js"],"names":["AnimeList","loadable","fallback","className","updateNewPageBoxMovie","pageData","updatedAnimeStream","currentState","currentPageBoxMovie","updateData","boxMovie","updateNewPageUpdatedAnime","currentPageUpdatedMovie","updatedMovie","checkWidth","setMaxPageDisplay","lastPage","window","innerWidth","PaginationAnime","currentPage","subNavToggle","isEmpty","useState","maxPageDisplay","useEffect","subscription","fromEvent","subscribe","unsubscribe","pageList","page","Array","from","keys","map","v","Math","floor","narrowPageList","empty","lazy","data","isAllowDelete","searchBy","length","onClick","subNavBar","document","querySelector","scroll","top","offsetTop","index","key","value","onChange","e","target","to"],"mappings":"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","file":"static/js/55.0bb0f1a7.chunk.js","sourcesContent":["import \"./PaginationAnime.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { fromEvent } from \"rxjs\";\r\n\r\nimport loadable from \"@loadable/component\";\r\nimport { updatedAnimeStream } from \"../../epics/updatedAnime\";\r\nimport { Link } from \"react-router-dom\";\r\nconst AnimeList = loadable(() => import(\"../AnimeList/AnimeList\"), {\r\n  fallback: (\r\n    <div>\r\n      <i className=\"fas fa-spinner fa-9x fa-spin\"></i>\r\n    </div>\r\n  ),\r\n});\r\n\r\nconst PaginationAnime = ({\r\n  lastPage = 1,\r\n  updatedMovie,\r\n  currentPage = 1,\r\n  subNavToggle,\r\n  isEmpty = true,\r\n}) => {\r\n  const [maxPageDisplay, setMaxPageDisplay] = useState(\r\n    lastPage < 7 ? lastPage : 7\r\n  );\r\n  useEffect(() => {\r\n    checkWidth(setMaxPageDisplay, lastPage);\r\n    const subscription = fromEvent(window, \"resize\").subscribe(() => {\r\n      checkWidth(setMaxPageDisplay, lastPage);\r\n    });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [lastPage]);\r\n  const pageList = narrowPageList(currentPage, lastPage, maxPageDisplay);\r\n  return (\r\n    <div>\r\n      <AnimeList\r\n        empty={isEmpty}\r\n        lazy={true}\r\n        data={updatedMovie}\r\n        isAllowDelete={subNavToggle === 1 ? true : false}\r\n        searchBy={\"anime\"}\r\n      />\r\n      {pageList.length > 1 && (\r\n        <div className=\"home__page-list\">\r\n          {pageList.length > 0 && (\r\n            <div\r\n              className=\"home__page-item-search\"\r\n              onClick={() => {\r\n                if (subNavToggle === 0) {\r\n                  if (\r\n                    updatedAnimeStream.currentState()\r\n                      .currentPageUpdatedMovie !== 1\r\n                  )\r\n                    updatedAnimeStream.updateData({\r\n                      updatedMovie: [],\r\n                    });\r\n                  updatedAnimeStream.updateData({\r\n                    currentPageUpdatedMovie: 1,\r\n                  });\r\n                } else {\r\n                  if (\r\n                    updatedAnimeStream.currentState().currentPageBoxMovie !== 1\r\n                  ) {\r\n                    updatedAnimeStream.updateData({\r\n                      boxMovie: [],\r\n                    });\r\n                  }\r\n                  updatedAnimeStream.updateData({\r\n                    currentPageBoxMovie: 1,\r\n                  });\r\n                }\r\n                const subNavBar = document.querySelector(\".sub-nav-bar\");\r\n                window.scroll({\r\n                  top: subNavBar.offsetTop - 90,\r\n                });\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n            </div>\r\n          )}\r\n          {pageList &&\r\n            pageList.map((pageData, index) => (\r\n              <div\r\n                key={index}\r\n                className={`home__page-item-search${\r\n                  pageData === currentPage ? \" home__active-page-search\" : \"\"\r\n                }`}\r\n                onClick={() => {\r\n                  if (subNavToggle === 0) {\r\n                    updateNewPageUpdatedAnime(pageData);\r\n                  } else {\r\n                    updateNewPageBoxMovie(pageData);\r\n                  }\r\n                  const subNavBar = document.querySelector(\".sub-nav-bar\");\r\n                  window.scroll({\r\n                    top: subNavBar.offsetTop - 90,\r\n                  });\r\n                }}\r\n              >\r\n                {pageData}\r\n              </div>\r\n            ))}\r\n          <div\r\n            className=\"home__page-item-search\"\r\n            onClick={() => {\r\n              if (subNavToggle === 0) {\r\n                if (\r\n                  updatedAnimeStream.currentState().currentPageUpdatedMovie !==\r\n                  lastPage\r\n                )\r\n                  updatedAnimeStream.updateData({\r\n                    updatedMovie: [],\r\n                  });\r\n                updatedAnimeStream.updateData({\r\n                  currentPageUpdatedMovie: lastPage,\r\n                });\r\n              } else {\r\n                if (\r\n                  updatedAnimeStream.currentState().currentPageBoxMovie !==\r\n                  lastPage\r\n                )\r\n                  updatedAnimeStream.updateData({\r\n                    boxMovie: [],\r\n                  });\r\n                updatedAnimeStream.updateData({\r\n                  currentPageBoxMovie: lastPage,\r\n                });\r\n              }\r\n              const subNavBar = document.querySelector(\".sub-nav-bar\");\r\n              window.scroll({\r\n                top: subNavBar.offsetTop - 90,\r\n              });\r\n            }}\r\n          >\r\n            <i className=\"fas fa-chevron-right\"></i>\r\n            <i className=\"fas fa-chevron-right\"></i>\r\n          </div>\r\n          <select\r\n            className=\"select-page\"\r\n            value={\r\n              subNavToggle === 0\r\n                ? updatedAnimeStream.currentState().currentPageUpdatedMovie\r\n                : updatedAnimeStream.currentState().currentPageBoxMovie\r\n            }\r\n            onChange={(e) => {\r\n              if (subNavToggle === 0) {\r\n                updateNewPageUpdatedAnime(+e.target.value);\r\n              } else {\r\n                updateNewPageBoxMovie(+e.target.value);\r\n              }\r\n              const subNavBar = document.querySelector(\".sub-nav-bar\");\r\n              window.scroll({\r\n                top: subNavBar.offsetTop - 90,\r\n              });\r\n            }}\r\n          >\r\n            {Array.from(Array(lastPage).keys()).map((page, key) => (\r\n              <option key={key}>{page + 1}</option>\r\n            ))}\r\n          </select>\r\n          <Link\r\n            to={`/storage/vertical?page=${\r\n              subNavToggle === 0\r\n                ? updatedAnimeStream.currentState().currentPageUpdatedMovie\r\n                : updatedAnimeStream.currentState().currentPageBoxMovie\r\n            }&${subNavToggle === 0 ? \"latest\" : \"box\"}`}\r\n          >\r\n            <button className=\"button-infinite-scroll\">Change view</button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default PaginationAnime;\r\n\r\nfunction updateNewPageBoxMovie(pageData) {\r\n  if (updatedAnimeStream.currentState().currentPageBoxMovie !== pageData)\r\n    updatedAnimeStream.updateData({\r\n      boxMovie: [],\r\n    });\r\n  updatedAnimeStream.updateData({\r\n    currentPageBoxMovie: pageData,\r\n  });\r\n}\r\n\r\nfunction updateNewPageUpdatedAnime(pageData) {\r\n  if (updatedAnimeStream.currentState().currentPageUpdatedMovie !== pageData)\r\n    updatedAnimeStream.updateData({\r\n      updatedMovie: [],\r\n    });\r\n  updatedAnimeStream.updateData({\r\n    currentPageUpdatedMovie: pageData,\r\n  });\r\n}\r\n\r\nfunction narrowPageList(page, lastPage, maxPageDisplay) {\r\n  return Array.from(Array(maxPageDisplay).keys()).map((v) => {\r\n    if (page <= Math.floor(maxPageDisplay / 2)) {\r\n      return v + 1;\r\n    }\r\n    if (page >= lastPage - Math.floor(maxPageDisplay / 2)) {\r\n      return lastPage - maxPageDisplay + (v + 1);\r\n    }\r\n    return page - Math.floor(maxPageDisplay / 2) + v;\r\n  });\r\n}\r\n\r\nfunction checkWidth(setMaxPageDisplay, lastPage) {\r\n  if (window.innerWidth < 360) {\r\n    setMaxPageDisplay(lastPage < 3 ? lastPage : 3);\r\n  } else if (window.innerWidth < 386) {\r\n    setMaxPageDisplay(lastPage < 4 ? lastPage : 4);\r\n  } else if (window.innerWidth < 430) {\r\n    setMaxPageDisplay(lastPage < 5 ? lastPage : 5);\r\n  } else if (window.innerWidth < 557) {\r\n    setMaxPageDisplay(lastPage < 6 ? lastPage : 6);\r\n  } else if (window.innerWidth > 557) {\r\n    setMaxPageDisplay(lastPage < 7 ? lastPage : 7);\r\n  }\r\n}\r\n"],"sourceRoot":""}