{"version":3,"sources":["util/checkMobileDevice.js","components/AnimeList/AnimeList.js","../../../../src/internal/operators/takeWhile.ts"],"names":["mobileAndTabletCheck","a","check","navigator","userAgent","vendor","window","opera","test","substr","responsiveObject","maxWidth","minWidth","quantityItemPerRow","AnimeItem","loadable","handleResponsiveWidth","animeListRef","lazyLoadState","calculateRowStartEnd","heightItem","rowStart","rowEnd","i","length","innerWidth","lazyLoadAnimeListStream","updateData","trigger","currentState","AnimeList","data","error","isWrap","lazy","empty","virtual","isAllowDelete","searchBy","type","useRef","useEffect","subscription","iif","fromEvent","pipe","takeWhile","debounceTime","subscribe","unsubscribe","widthItem","current","offsetWidth","height","Math","ceil","genreDetailData","width","ref","className","style","position","widthContainerList","map","anime","index","key","slice","display","alignItems","justifyContent","top","parseInt","left","styleAnimeItem","color","size","margin","fontSize","inclusive","TakeWhileOperator","predicate","call","_super","TakeWhileSubscriber","destination","_this","result","value","err","nextOrComplete","prototype"],"mappings":"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","file":"static/js/42.a63e211e.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\r\nexport const mobileAndTabletCheck = () => {\r\n  let check = false;\r\n  (function (a) {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\r\n        a\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n        a.substr(0, 4)\r\n      )\r\n    )\r\n      check = true;\r\n  })(navigator.userAgent || navigator.vendor || window.opera);\r\n  return check;\r\n};\r\n","import \"./AnimeList.css\";\r\n\r\nimport loadable from \"@loadable/component\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { fromEvent, iif } from \"rxjs\";\r\n\r\nimport {\r\n  calculateRowStartEnd,\r\n  lazyLoadAnimeListStream,\r\n} from \"../../epics/lazyLoadAnimeList\";\r\nimport { debounceTime, takeWhile } from \"rxjs/operators\";\r\nimport { mobileAndTabletCheck } from \"../../util/checkMobileDevice\";\r\nconst responsiveObject = [\r\n  {\r\n    maxWidth: 100000,\r\n    minWidth: 1000,\r\n    quantityItemPerRow: 5,\r\n  },\r\n  {\r\n    maxWidth: 1000,\r\n    minWidth: 600,\r\n    quantityItemPerRow: 4,\r\n  },\r\n  {\r\n    maxWidth: 600,\r\n    minWidth: 500,\r\n    quantityItemPerRow: 3,\r\n  },\r\n  {\r\n    maxWidth: 500,\r\n    minWidth: 0,\r\n    quantityItemPerRow: 2,\r\n  },\r\n];\r\nconst AnimeItem = loadable(() => import(\"../AnimeItem/AnimeItem\"));\r\nconst AnimeList = ({\r\n  data,\r\n  error,\r\n  isWrap = true,\r\n  lazy = false,\r\n  empty = false,\r\n  virtual = false,\r\n  isAllowDelete = false,\r\n  searchBy,\r\n  type\r\n}) => {\r\n  const animeListRef = useRef();\r\n  const lazyLoadState = lazyLoadAnimeListStream.currentState();\r\n  useEffect(() => {\r\n    const subscription = iif(\r\n      () => mobileAndTabletCheck(),\r\n      fromEvent(window, \"scroll\").pipe(takeWhile(() => virtual)),\r\n      fromEvent(window, \"scroll\").pipe(\r\n        takeWhile(() => virtual),\r\n        debounceTime(50)\r\n      )\r\n    ).subscribe(() => {\r\n      const { rowStart, rowEnd } = calculateRowStartEnd(\r\n        animeListRef,\r\n        lazyLoadState.heightItem\r\n      );\r\n      if (\r\n        rowStart !== lazyLoadState.rowStart &&\r\n        rowEnd !== lazyLoadState.rowEnd\r\n      ) {\r\n        lazyLoadAnimeListStream.updateData({\r\n          rowStart,\r\n          rowEnd,\r\n        });\r\n      }\r\n    });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [\r\n    lazyLoadState.heightItem,\r\n    lazyLoadState.rowEnd,\r\n    lazyLoadState.rowStart,\r\n    virtual,\r\n  ]);\r\n  useEffect(() => {\r\n    handleResponsiveWidth(animeListRef, lazyLoadState);\r\n    const subscription = fromEvent(window, \"resize\")\r\n      .pipe(debounceTime(500))\r\n      .subscribe(() => {\r\n        handleResponsiveWidth(animeListRef, lazyLoadState);\r\n      });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [lazyLoadState.heightItem, lazyLoadState.rowEnd, lazyLoadState.rowStart]);\r\n  useEffect(() => {\r\n    if (!virtual) return;\r\n    const widthItem =\r\n      animeListRef.current.offsetWidth / lazyLoadState.quantityItemPerRow;\r\n    const heightItem = (widthItem * 340) / 224;\r\n    const height =\r\n      Math.ceil(\r\n        lazyLoadState.genreDetailData.length / lazyLoadState.quantityItemPerRow\r\n      ) * heightItem;\r\n    const { rowStart, rowEnd } = calculateRowStartEnd(animeListRef, heightItem);\r\n    lazyLoadAnimeListStream.updateData({\r\n      width: animeListRef.current.offsetWidth,\r\n      height,\r\n      widthItem,\r\n      heightItem,\r\n      rowStart: rowStart,\r\n      rowEnd: rowEnd,\r\n    });\r\n  }, [\r\n    lazyLoadState.heightItem,\r\n    lazyLoadState.quantityItemPerRow,\r\n    lazyLoadState.genreDetailData.length,\r\n    lazyLoadState.trigger,\r\n    virtual,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      ref={animeListRef}\r\n      className={isWrap ? \"list-anime\" : \"list-anime-nowrap\"}\r\n      style={{\r\n        position: virtual ? \"relative\" : \"static\",\r\n        height: lazyLoadState.height,\r\n        width: lazyLoadState.widthContainerList\r\n          ? lazyLoadState.widthContainerList\r\n          : 280,\r\n      }}\r\n    >\r\n      {data &&\r\n        !virtual &&\r\n        !error &&\r\n        data.map((anime, index) => {\r\n          return (\r\n            <AnimeItem\r\n              key={index}\r\n              anime={anime}\r\n              lazy={lazy}\r\n              searchBy={searchBy}\r\n              virtual={false}\r\n              isAllowDelete={isAllowDelete}\r\n              type={type}\r\n            />\r\n          );\r\n        })}\r\n      {data &&\r\n        virtual &&\r\n        !error &&\r\n        data\r\n          .slice(\r\n            (lazyLoadState.rowStart - 1) * lazyLoadState.quantityItemPerRow,\r\n            (lazyLoadState.rowEnd - 1) * lazyLoadState.quantityItemPerRow\r\n          )\r\n          .map((anime, index) => {\r\n            return (\r\n              <div\r\n                key={\r\n                  (lazyLoadState.rowStart - 1) *\r\n                    lazyLoadState.quantityItemPerRow +\r\n                  index\r\n                }\r\n                style={\r\n                  virtual\r\n                    ? {\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        height: lazyLoadState.heightItem,\r\n                        width: lazyLoadState.widthItem,\r\n                        position: \"absolute\",\r\n                        top:\r\n                          parseInt(\r\n                            ((lazyLoadState.rowStart - 1) *\r\n                              lazyLoadState.quantityItemPerRow +\r\n                              index) /\r\n                              lazyLoadState.quantityItemPerRow\r\n                          ) * lazyLoadState.heightItem,\r\n                        left:\r\n                          parseInt(\r\n                            ((lazyLoadState.rowStart - 1) *\r\n                              lazyLoadState.quantityItemPerRow +\r\n                              index) %\r\n                              lazyLoadState.quantityItemPerRow\r\n                          ) * lazyLoadState.widthItem,\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                <AnimeItem\r\n                type={type}\r\n                  anime={anime}\r\n                  lazy={lazy}\r\n                  virtual={true}\r\n                  isAllowDelete={isAllowDelete}\r\n                  styleAnimeItem={{ width: \"90%\", height: \"95%\" }}\r\n                  searchBy={searchBy}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n      {data && data.length === 0 && empty && (\r\n        <div className=\"empty\">\r\n          <CircularProgress color=\"secondary\" size=\"4rem\" />\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div\r\n          style={{\r\n            margin: \"100px auto 0 auto\",\r\n            color: \"white\",\r\n            fontSize: \"150%\",\r\n          }}\r\n        >\r\n          Anime is being updated...\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction handleResponsiveWidth(animeListRef, lazyLoadState) {\r\n  const { rowStart, rowEnd } = calculateRowStartEnd(\r\n    animeListRef,\r\n    lazyLoadState.heightItem\r\n  );\r\n  for (let i = 0; i < responsiveObject.length; i++) {\r\n    const { maxWidth, minWidth, quantityItemPerRow } = responsiveObject[i];\r\n    if (window.innerWidth < maxWidth && window.innerWidth > minWidth) {\r\n      lazyLoadAnimeListStream.updateData({\r\n        quantityItemPerRow,\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  if (rowStart !== lazyLoadState.rowStart && rowEnd !== lazyLoadState.rowEnd) {\r\n    lazyLoadAnimeListStream.updateData({\r\n      rowStart,\r\n      rowEnd,\r\n    });\r\n  }\r\n  lazyLoadAnimeListStream.updateData({\r\n    trigger: !lazyLoadAnimeListStream.currentState().trigger,\r\n  });\r\n}\r\n\r\nexport default AnimeList;\r\n",null],"sourceRoot":""}