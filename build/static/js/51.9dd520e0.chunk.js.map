{"version":3,"sources":["../node_modules/peerjs/dist sync","pages/TheaterWatch/TheaterWatch.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","notificationE","idCartoonUser","groupId","videoWatchElement","myPeer","Chat","loadable","fallback","className","socket","theaterStream","peers","options","host","secure","path","config","iceServers","url","credential","username","replaySubject","ReplaySubject","reconnectPeer","history","isVideoCall","navBarStore","updateIsShowBlockPopUp","updateData","isReconnect","timePlayingVideo","currentTime","videoUrl","src","isVideoWatchPlaying","paused","push","setTimeout","newUserJoin","a","emit","userStream","currentState","avatarImage","UserListOnline","usersOnline","map","member","key","style","color","keepRemote","margin","createNewVideo","source","uploadOtherUser","transcriptUrl","uploadNewVideo","addEventListenerVideoElement","document","getElementById","disabled","updateUserKeepRemote","userId","fetch","method","body","JSON","stringify","headers","authorization","querySelector","childElementCount","addEventListener","socketPauseAll","socketPlayAll","removeEventListenerVideoElement","controls","removeEventListener","fileContent","isControls","trim","sourceElement","createElement","type","append","trackElement","default","error","console","appendNewMessageNotification","message","messageElement","innerText","wordWrap","addDeviceStream","deviceElement","stream","deviceGridElement","peerId","srcObject","poster","play","log","target","isMuted","title","replace","children","forEach","child","remove","user","find","avatar","res","json","resJson","updateAllowFetchCurrentRoomDetail","updateSignIn","currentRoomDetail","on","fetchUserOnline$","subscribe","users","idGroup","then","catch","playPromise","pause","err","uri","uploadVideoOtherUser","TheaterWatch","props","match","params","next","useState","initialState","theaterState","setTheaterState","isFullScreenState","setIsFullScreenState","errorPassword","setErrorPassword","inputPasswordRef","useRef","notificationRef","audioCallRef","inputVideoRef","videoWatchRef","videoUrlUpload","transcriptUrlUpload","checkBoxVideoRef","checkBoxRef","useCookies","cookies","useHistory","newUserJoinHandleVideo","isVideo","alert","current","isError","navigator","mediaDevices","getUserMedia","video","audio","peerRandomId","v4","Peer","myAudio","muted","roomId","audioGridElement","call","userVideoStream","peer","connectToNewUser","answer","useEffect","reconnectVideoWatch","close","subscription","isSignIn","timer","pipe","concatMapTo","ajax","pluck","catchError","of","unsubscribe","submitFormSub","init","disconnect","allowUserJoin","updateAllowUserJoin","navBar","transform","allowfullscreen","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","containerMessageDialog","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","allowExitFullscreen","submitFormPasswordRoom$","v","modeRoom","value","allowFetchCurrentRoomDetail","fetchGroup","allowRemoveVideoWatch","updateAllowRemoveVideoWatch","display","innerHTML","length","first","ref","roomName","width","flexDirection","alignItems","label","input","htmlFor","onClick","checked","undefined","onChange","inputVideoE","files","URL","createObjectURL","defaultChecked","withoutName","isZoom","onContextMenu","preventDefault","playsInline","getElementsByTagName","item","chatBot","unreadMessage","scroll","top","scrollHeight","behavior","hidden"],"mappings":"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","file":"static/js/51.9dd520e0.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 280;","import \"./TheaterWatch.css\";\r\n\r\nimport loadable from \"@loadable/component\";\r\nimport Peer from \"peerjs\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { of, ReplaySubject, timer } from \"rxjs\";\r\nimport { ajax } from \"rxjs/ajax\";\r\nimport { catchError, first, map, pluck, concatMapTo } from \"rxjs/operators\";\r\n\r\nimport Input from \"../../components/Input/Input\";\r\nimport {\r\n  fetchUserOnline$,\r\n  submitFormPasswordRoom$,\r\n  theaterStream,\r\n} from \"../../epics/theater\";\r\nimport { userStream } from \"../../epics/user\";\r\nimport {\r\n  updateAllowFetchCurrentRoomDetail,\r\n  updateAllowRemoveVideoWatch,\r\n  updateAllowUserJoin,\r\n  updateSignIn,\r\n} from \"../../store/theater\";\r\nimport { v4 } from \"uuid\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport navBarStore from \"../../store/navbar\";\r\n\r\nconst Chat = loadable(() => import(\"../../components/Chat/Chat\"), {\r\n  fallback: <i className=\"fas fa-spinner fa-9x fa-spin\"></i>,\r\n});\r\n\r\nconst socket = theaterStream.socket;\r\nconst peers = {};\r\nlet notificationE;\r\nlet idCartoonUser;\r\nlet groupId;\r\nlet videoWatchElement;\r\nconst options = {\r\n  host: \"web-rtc-myanimefun.herokuapp.com\",\r\n  secure: true,\r\n  path: \"/\",\r\n  config: {\r\n    iceServers: [\r\n      { url: \"stun:stun01.sipphone.com\" },\r\n      { url: \"stun:stun.ekiga.net\" },\r\n      { url: \"stun:stunserver.org\" },\r\n      { url: \"stun:stun.softjoys.com\" },\r\n      { url: \"stun:stun.voiparound.com\" },\r\n      { url: \"stun:stun.voipbuster.com\" },\r\n      { url: \"stun:stun.voipstunt.com\" },\r\n      { url: \"stun:stun.voxgratia.org\" },\r\n      { url: \"stun:stun.xten.com\" },\r\n      { url: \"stun:stun.l.google.com:19302\" },\r\n      { url: \"stun:stun1.l.google.com:19302\" },\r\n      { url: \"stun:stun2.l.google.com:19302\" },\r\n      { url: \"stun:stun3.l.google.com:19302\" },\r\n      { url: \"stun:stun4.l.google.com:19302\" },\r\n      {\r\n        url: \"turn:numb.viagenie.ca\",\r\n        credential: \"muazkh\",\r\n        username: \"webrtc@live.com\",\r\n      },\r\n      {\r\n        url: \"turn:192.158.29.39:3478?transport=udp\",\r\n        credential: \"JZEOEt2V3Qb0y27GRntt2u2PAYA=\",\r\n        username: \"28224511:1379330808\",\r\n      },\r\n      {\r\n        url: \"turn:192.158.29.39:3478?transport=tcp\",\r\n        credential: \"JZEOEt2V3Qb0y27GRntt2u2PAYA=\",\r\n        username: \"28224511:1379330808\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst replaySubject = new ReplaySubject(3);\r\nlet myPeer;\r\nconst TheaterWatch = (props) => {\r\n  groupId = props.match.params.groupId;\r\n  replaySubject.next(groupId);\r\n  const [theaterState, setTheaterState] = useState(theaterStream.initialState);\r\n  const [isFullScreenState, setIsFullScreenState] = useState(null);\r\n  const [errorPassword, setErrorPassword] = useState(null);\r\n  const inputPasswordRef = useRef();\r\n  const notificationRef = useRef();\r\n  const audioCallRef = useRef();\r\n  const inputVideoRef = useRef();\r\n  const videoWatchRef = useRef();\r\n  const videoUrlUpload = useRef();\r\n  const transcriptUrlUpload = useRef();\r\n  const checkBoxVideoRef = useRef();\r\n  const checkBoxRef = useRef();\r\n  const [cookies] = useCookies([\"idCartoonUser\"]);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!theaterState.isReconnect) {\r\n      return;\r\n    }\r\n    console.log(\"Reconnect\");\r\n    if (theaterState.videoUrl) {\r\n      reconnectVideoWatch(theaterState, videoWatchRef);\r\n    }\r\n    theaterStream.updateData({ isReconnect: false });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [theaterState.timePlayingVideo]);\r\n\r\n  async function newUserJoinHandleVideo(isReconnect = false, isVideo = false) {\r\n    if (isReconnect) {\r\n      if (isVideo) alert(\"Please turn on your webcam\");\r\n      reconnectPeer(\r\n        history,\r\n        isVideo,\r\n        theaterState.groupId,\r\n        videoWatchRef.current\r\n      );\r\n    }\r\n    if (!isReconnect) {\r\n      if (!userStream.currentState()) {\r\n        return;\r\n      }\r\n      const userId = userStream.currentState().userId;\r\n      let isError = false;\r\n      try {\r\n        navigator.mediaDevices\r\n          .getUserMedia({\r\n            video: isVideo,\r\n            audio: true,\r\n          })\r\n          .then((stream) => {\r\n            const peerRandomId = v4();\r\n            theaterStream.updateData({ peerId: peerRandomId });\r\n            myPeer = new Peer(peerRandomId, options);\r\n            function connectToNewUser(peerId, stream, audioGridElement) {\r\n              if (!myPeer) return;\r\n              let call = myPeer.call(peerId, stream);\r\n              if (!call) {\r\n                return;\r\n              }\r\n              const audio = document.createElement(\"video\");\r\n              call.on(\"stream\", (userVideoStream) => {\r\n                audio.id = peerId;\r\n                peers[call.peer] = call;\r\n                addDeviceStream(\r\n                  audio,\r\n                  userVideoStream,\r\n                  audioGridElement,\r\n                  peerId\r\n                );\r\n              });\r\n              call.on(\"close\", () => {\r\n                audio.remove();\r\n              });\r\n              peers[peerId] = call;\r\n            }\r\n            const myAudio = document.createElement(\"video\");\r\n            myAudio.muted = true;\r\n            socket.emit(\r\n              \"new-user\",\r\n              userStream.currentState().avatarImage,\r\n              userStream.currentState().username,\r\n              groupId,\r\n              userId,\r\n              myPeer.id\r\n            );\r\n            socket.on(\"user-join\", (peerId, roomId) => {\r\n              if (roomId !== groupId) {\r\n                return;\r\n              }\r\n              connectToNewUser(peerId, stream, audioCallRef.current);\r\n            });\r\n            myAudio.id = myPeer.id;\r\n            addDeviceStream(myAudio, stream, audioCallRef.current, myPeer.id);\r\n            myPeer.on(\"call\", (call) => {\r\n              call.answer(stream);\r\n              const audio = document.createElement(\"video\");\r\n              call.on(\"stream\", (userVideoStream) => {\r\n                audio.id = call.peer;\r\n                peers[call.peer] = call;\r\n                addDeviceStream(\r\n                  audio,\r\n                  userVideoStream,\r\n                  audioCallRef.current,\r\n                  call.peer\r\n                );\r\n              });\r\n              call.on(\"close\", () => {\r\n                audio.remove();\r\n              });\r\n            });\r\n            myPeer.on(\"error\", (error) => {\r\n              console.error(error);\r\n            });\r\n\r\n            if (!document.querySelector(\".audio-connected\"))\r\n              appendNewMessageNotification(\r\n                \"Your device is connected\",\r\n                notificationE,\r\n                \"audio-connected\"\r\n              );\r\n          })\r\n          .catch(async (err) => {\r\n            isError = true;\r\n            alert(\"Failing access your device call\");\r\n            await newUserJoin(userId, groupId);\r\n            console.log(err, \": join error 1\");\r\n          });\r\n      } catch (error) {\r\n        isError = true;\r\n        console.log(error, \": join error 2\");\r\n      }\r\n      if (isError && !isReconnect) {\r\n        await newUserJoin(userId, groupId);\r\n        console.log(\"user join error\");\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    theaterStream.updateData({ groupId });\r\n\r\n    socket.on(\"disconnected-user\", async (peerId) => {\r\n      if (peers[peerId]) {\r\n        peers[peerId].close();\r\n        delete peers[peerId];\r\n      }\r\n    });\r\n\r\n    // socket.on(\"reconnect\", async () => {\r\n    //   console.log(\"reconnect\");\r\n    //   if (theaterStream.currentState()) {\r\n    //     const { isSignIn } = theaterStream.currentState();\r\n    //     if (isSignIn) {\r\n    //       await newUserJoin(userStream.currentState().userId, groupId);\r\n    //     }\r\n    //   }\r\n    // });\r\n  }, []);\r\n  useEffect(() => {\r\n    let subscription;\r\n    if (theaterState.isSignIn) {\r\n      subscription = timer(2000)\r\n        .pipe(\r\n          concatMapTo(\r\n            ajax({\r\n              url: \"/api/theater/\" + groupId + \"/members\",\r\n              headers: { authorization: \"Bearer \" + cookies.idCartoonUser },\r\n            }).pipe(\r\n              pluck(\"response\", \"message\"),\r\n              catchError((error) =>\r\n                of(error).pipe(\r\n                  pluck(\"response\", \"error\"),\r\n                  map(() => ({ error }))\r\n                )\r\n              )\r\n            )\r\n          )\r\n        )\r\n        .subscribe((res) => {\r\n          if (!res.error) {\r\n            theaterStream.updateData({\r\n              usersOnline: res,\r\n            });\r\n          }\r\n        });\r\n    }\r\n    return () => {\r\n      subscription && subscription.unsubscribe();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [theaterState.isSignIn]);\r\n  useEffect(() => {\r\n    videoWatchElement = videoWatchRef.current;\r\n    notificationE = notificationRef.current;\r\n    idCartoonUser = cookies.idCartoonUser;\r\n    const subscription = theaterStream.subscribe(setTheaterState);\r\n    theaterStream.init();\r\n    let submitFormSub;\r\n    if (!theaterState.isSignIn) {\r\n      if (myPeer) {\r\n        myPeer.disconnect();\r\n        myPeer = null;\r\n      }\r\n    }\r\n    if (theaterState.isSignIn) {\r\n      if (theaterStream.currentState().allowUserJoin) {\r\n        // if (!socket.connected) theaterStream.socket.connect();\r\n        newUserJoinHandleVideo(false, theaterState.isVideoCall);\r\n        setErrorPassword(null);\r\n        updateAllowUserJoin(false);\r\n      }\r\n      if (isFullScreenState) {\r\n        const navBar = document.querySelector(\".nav-bar\");\r\n        navBar && (navBar.style.transform = \"translateY(-100px)\");\r\n        allowFullscreen();\r\n        const video = videoWatchRef.current;\r\n        video && (video.className = \"video-zoom\");\r\n        const containerMessageDialog = document.querySelector(\r\n          \".container-message-dialog\"\r\n        );\r\n        containerMessageDialog &&\r\n          (containerMessageDialog.className =\r\n            \"container-message-dialog container-message-zoom\");\r\n      } else {\r\n        const navBar = document.querySelector(\".nav-bar\");\r\n        const video = videoWatchRef.current;\r\n        const containerMessageDialog = document.querySelector(\r\n          \".container-message-dialog\"\r\n        );\r\n        navBar && (navBar.style.transform = \"\");\r\n        video && (video.className = \"\");\r\n        allowExitFullscreen(containerMessageDialog);\r\n      }\r\n    }\r\n\r\n    if (inputPasswordRef && inputPasswordRef.current) {\r\n      submitFormSub = submitFormPasswordRoom$(\r\n        inputPasswordRef.current,\r\n        groupId,\r\n        cookies.idCartoonUser,\r\n        setErrorPassword\r\n      ).subscribe((v) => {\r\n        if (!!v) {\r\n          theaterStream.updateData({ modeRoom: false });\r\n          inputPasswordRef.current.value = \"\";\r\n          if (theaterState.allowFetchCurrentRoomDetail) {\r\n            fetchGroup(groupId, cookies.idCartoonUser);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      subscription.unsubscribe();\r\n      submitFormSub && submitFormSub.unsubscribe();\r\n      if (theaterStream.currentState().allowRemoveVideoWatch) {\r\n        videoWatchElement && (videoWatchElement.src = \"\");\r\n        videoWatchElement && videoWatchElement.remove();\r\n        videoWatchElement && (videoWatchElement.muted = true);\r\n        videoWatchElement && removeEventListenerVideoElement(videoWatchElement);\r\n        updateAllowUserJoin(true);\r\n      }\r\n      updateAllowRemoveVideoWatch(true);\r\n      const buttonScrollTopE = document.querySelector(\".button-scroll-top\");\r\n      buttonScrollTopE.style.display = \"block\";\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    cookies.idCartoonUser,\r\n    isFullScreenState,\r\n    props.match.params.groupId,\r\n    theaterState.allowFetchCurrentRoomDetail,\r\n    theaterState.allowRemoveVideoWatch,\r\n    theaterState.isSignIn,\r\n    theaterState.isVideoCall,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (audioCallRef.current) {\r\n      [...audioCallRef.current.children].forEach((child) => {\r\n        const user = theaterState.usersOnline.find(\r\n          (user) => user.peerId === child.id\r\n        );\r\n        if (user) {\r\n          child.poster = user.avatar;\r\n          child.title = user.username;\r\n        }\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [theaterState.peerId, theaterState.usersOnline]);\r\n\r\n  if (!theaterState.isSignIn && notificationRef.current) {\r\n    notificationRef.current.innerHTML = \"\";\r\n    if (audioCallRef.current) {\r\n      if (theaterState.usersOnline.length === 1) {\r\n        replaySubject.pipe(first()).subscribe((groupId) => {\r\n          socket.emit(\r\n            \"delete-specific-member\",\r\n            userStream.currentState().peerId,\r\n            groupId\r\n          );\r\n        });\r\n      }\r\n      theaterState.usersOnline = [];\r\n      audioCallRef.current.innerHTML = \"\";\r\n      updateSignIn(false);\r\n      // socket.emit(\"disconnect-custom\");\r\n    }\r\n  }\r\n  // console.log(theaterState.usersOnline);\r\n  return (\r\n    <div className=\"theater-user-login\">\r\n      {theaterState.isSignIn && theaterState.currentRoomDetail && (\r\n        <div className=\"section-center\">\r\n          <h2 className=\"notification-user-join\" ref={notificationRef}>\r\n            {\" \"}\r\n          </h2>\r\n          <div>\r\n            <h1 className=\"title-room\">\r\n              {theaterState.currentRoomDetail.roomName}\r\n            </h1>\r\n            <div className=\"container-input-section\">\r\n              <div className=\"input-section-1\">\r\n                <div\r\n                  style={{\r\n                    width: \"90%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Input label={\"Video url\"} input={videoUrlUpload} />\r\n                  <Input label={\"Transcript url\"} input={transcriptUrlUpload} />\r\n                </div>\r\n                <div className=\"input-checkbox\">\r\n                  <span>\r\n                    <input\r\n                      id=\"update-other\"\r\n                      type=\"checkbox\"\r\n                      ref={checkBoxRef}\r\n                    />\r\n                    <label htmlFor=\"update-other\">\r\n                      Share with other members\r\n                    </label>\r\n                  </span>\r\n                  <button\r\n                    onClick={() => {\r\n                      if (videoUrlUpload.current.value !== \"\") {\r\n                        createNewVideo(\r\n                          videoUrlUpload.current.value,\r\n                          checkBoxRef.current.checked,\r\n                          undefined\r\n                        );\r\n                      }\r\n\r\n                      if (transcriptUrlUpload.current.value !== \"\") {\r\n                        createNewVideo(\r\n                          undefined,\r\n                          checkBoxRef.current.checked,\r\n                          transcriptUrlUpload.current.value\r\n                        );\r\n                      }\r\n                    }}\r\n                  >\r\n                    Upload\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"input-section-2\">\r\n                <input\r\n                  type=\"file\"\r\n                  ref={inputVideoRef}\r\n                  onChange={() => createVideoUri(inputVideoRef.current)}\r\n                />\r\n              </div>\r\n              <div className=\"input-section-3\">\r\n                <div>\r\n                  <input\r\n                    id=\"checkbox-video-call\"\r\n                    type=\"checkbox\"\r\n                    ref={checkBoxVideoRef}\r\n                    defaultChecked={theaterState.isVideoCall}\r\n                  ></input>\r\n                  <label htmlFor=\"checkbox-video-call\">Video</label>\r\n                </div>\r\n                <button\r\n                  className=\"button-check-video-call\"\r\n                  onClick={() => {\r\n                    newUserJoinHandleVideo(\r\n                      true,\r\n                      checkBoxVideoRef.current.checked\r\n                    );\r\n                  }}\r\n                >\r\n                  Reconnect\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              title={\"Users call\"}\r\n              className=\"container-audio-call\"\r\n              ref={audioCallRef}\r\n              style={{\r\n                display:\r\n                  theaterState.usersOnline[0] &&\r\n                  theaterState.usersOnline[0].userId !==\r\n                    theaterState.usersOnline[0].peerId\r\n                    ? \"flex\"\r\n                    : \"none\",\r\n              }}\r\n            ></div>\r\n\r\n            {theaterState.isSignIn && (\r\n              <UserListOnline usersOnline={theaterState.usersOnline} />\r\n            )}\r\n            <div className=\"container-section-video\">\r\n              <Chat\r\n                groupId={groupId}\r\n                user={userStream.currentState()}\r\n                withoutName={true}\r\n                isZoom={isFullScreenState}\r\n              />\r\n              <div className=\"wrapper-video-player\">\r\n                <video\r\n                  className=\"video-watch\"\r\n                  poster=\"https://media.istockphoto.com/videos/movie-time-concept-background-video-id1127766856?s=640x640\"\r\n                  ref={videoWatchRef}\r\n                  onContextMenu={(e) => e.preventDefault()}\r\n                  playsInline\r\n                ></video>\r\n                <div className=\"container-message-dialog\">\r\n                  <button\r\n                    id=\"button-get-remote\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={async (e) => {\r\n                      const element = e.target;\r\n                      element.disabled = true;\r\n                      addEventListenerVideoElement(videoWatchRef.current);\r\n                      await updateUserKeepRemote(\r\n                        groupId,\r\n                        userStream.currentState().userId\r\n                      );\r\n                      socket.emit(\"user-keep-remote-changed\", groupId);\r\n                      videoWatchRef.current.controls = true;\r\n                    }}\r\n                  >\r\n                    Get Remote\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-primary button-zoom\"\r\n                    onClick={() => {\r\n                      updateAllowRemoveVideoWatch(false);\r\n                      if (isFullScreenState) {\r\n                        document\r\n                          .getElementsByTagName(\"body\")\r\n                          .item(0).className = \"\";\r\n                        setIsFullScreenState(false);\r\n                      } else {\r\n                        document\r\n                          .getElementsByTagName(\"body\")\r\n                          .item(0).className = \"hidden-scroll\";\r\n                        setIsFullScreenState(true);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {!isFullScreenState ? (\r\n                      <i className=\"fas fa-expand\"></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-compress\"></i>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {isFullScreenState && (\r\n                <div\r\n                  className=\"button-display-control\"\r\n                  onClick={() => {\r\n                    const e = document.querySelector(\".container-message-zoom\");\r\n                    const chatBot = document.querySelector(\".chat-bot\");\r\n                    if (e) {\r\n                      if (chatBot.style.transform === \"scale(0)\") {\r\n                        if (theaterState.unreadMessage !== 0)\r\n                          socket.emit(\r\n                            \"new-user-seen\",\r\n                            userStream.currentState().avatarImage,\r\n                            groupId\r\n                          );\r\n                        e.style.transform = \"scale(1)\";\r\n                        chatBot.style.transform = \"scale(1)\";\r\n                        chatBot.scroll({\r\n                          top: chatBot.scrollHeight,\r\n                          behavior: \"smooth\",\r\n                        });\r\n                        theaterStream.updateData({\r\n                          unreadMessage: 0,\r\n                        });\r\n                      } else {\r\n                        e.style.transform = \"scale(0)\";\r\n                        chatBot.style.transform = \"scale(0)\";\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-bell fa-4x\"></i>\r\n                  {theaterState.unreadMessage !== 0 && (\r\n                    <span className=\"number-unread-message\">\r\n                      {theaterState.unreadMessage}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div style={{ width: \"300px\" }} hidden={theaterState.isSignIn}>\r\n        <Input\r\n          label={\"Password Room\"}\r\n          type={\"password\"}\r\n          input={inputPasswordRef}\r\n          error={errorPassword}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction reconnectVideoWatch(theaterState, videoWatchRef) {\r\n  uploadNewVideo(theaterState.videoUrl, videoWatchElement, false, null);\r\n  videoWatchRef.current.addEventListener(\"loadedmetadata\", async () => {\r\n    if (theaterState.isVideoWatchPlaying) videoWatchRef.current.play();\r\n    removeEventListenerVideoElement(videoWatchRef.current);\r\n    videoWatchRef.current.controls = false;\r\n    document.getElementById(\"button-get-remote\").disabled = false;\r\n    videoWatchRef.current.currentTime = theaterState.timePlayingVideo;\r\n  });\r\n}\r\n\r\nfunction reconnectPeer(history, isVideoCall, groupId, videoWatchElement) {\r\n  navBarStore.updateIsShowBlockPopUp(true);\r\n  theaterStream.updateData({\r\n    isReconnect: true,\r\n    timePlayingVideo: videoWatchElement.currentTime,\r\n    videoUrl: videoWatchElement.src,\r\n    isVideoCall: isVideoCall,\r\n    isVideoWatchPlaying: !videoWatchElement.paused,\r\n  });\r\n  history.push(\"/theater\");\r\n  setTimeout(() => {\r\n    history.push(\"/theater/\" + groupId);\r\n    navBarStore.updateIsShowBlockPopUp(false);\r\n  }, 1000);\r\n}\r\nfunction allowExitFullscreen(containerMessageDialog) {\r\n  containerMessageDialog &&\r\n    (containerMessageDialog.className = \"container-message-dialog\");\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen().catch(() => {});\r\n  } else if (document.webkitExitFullscreen) {\r\n    document.webkitExitFullscreen().catch(() => {});\r\n  } else if (document.mozCancelFullScreen) {\r\n    document.mozCancelFullScreen().catch(() => {});\r\n  } else if (document.msExitFullscreen) {\r\n    document.msExitFullscreen().catch(() => {});\r\n  }\r\n}\r\n\r\nfunction allowFullscreen() {\r\n  document.querySelector(\"#root\").allowfullscreen = true;\r\n  if (document.querySelector(\"#root\").requestFullscreen) {\r\n    document\r\n      .querySelector(\"#root\")\r\n      .requestFullscreen()\r\n      .catch(() => {});\r\n  } else if (document.querySelector(\"#root\").webkitRequestFullScreen) {\r\n    document\r\n      .querySelector(\"#root\")\r\n      .webkitRequestFullScreen()\r\n      .catch(() => {});\r\n  } else if (document.querySelector(\"#root\").mozRequestFullScreen) {\r\n    document\r\n      .querySelector(\"#root\")\r\n      .mozRequestFullScreen()\r\n      .catch(() => {});\r\n  } else if (document.querySelector(\"#root\").msRequestFullScreen) {\r\n    document\r\n      .querySelector(\"#root\")\r\n      .msRequestFullScreen()\r\n      .catch(() => {});\r\n  }\r\n}\r\n\r\nasync function newUserJoin(id, groupId) {\r\n  socket.emit(\r\n    \"new-user\",\r\n    userStream.currentState().avatarImage,\r\n    userStream.currentState().username,\r\n    groupId,\r\n    id,\r\n    id\r\n  );\r\n}\r\n\r\nfunction UserListOnline({ usersOnline }) {\r\n  return (\r\n    <div className=\"user-list-online\">\r\n      <div className=\"title-room\">Members Online</div>\r\n      {usersOnline &&\r\n        usersOnline.map((member, key) => {\r\n          return (\r\n            <div key={key}>\r\n              <div\r\n                style={{\r\n                  color: member.keepRemote ? \"red\" : \"\",\r\n                  margin: \"0\",\r\n                }}\r\n              >\r\n                {member.username}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction createVideoUri(inputVideoE) {\r\n  if (inputVideoE.files[0] && inputVideoE.files[0].type === \"video/mp4\") {\r\n    createNewVideo(URL.createObjectURL(inputVideoE.files[0]), false, undefined);\r\n    inputVideoE.value = \"\";\r\n  } else {\r\n    alert(\"required file mp4\");\r\n  }\r\n}\r\n\r\nasync function createNewVideo(source, uploadOtherUser = false, transcriptUrl) {\r\n  uploadNewVideo(source, videoWatchElement, true, transcriptUrl);\r\n  addEventListenerVideoElement(videoWatchElement);\r\n  document.getElementById(\"button-get-remote\").disabled = true;\r\n  await updateUserKeepRemote(groupId, userStream.currentState().userId);\r\n  socket.emit(\"new-video\", source, groupId, uploadOtherUser, transcriptUrl);\r\n}\r\n\r\nasync function updateUserKeepRemote(groupId, userId) {\r\n  await fetch(`/api/theater/${groupId}/members`, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({\r\n      userId: userId,\r\n      keepRemote: true,\r\n    }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      authorization: `Bearer ${idCartoonUser}`,\r\n    },\r\n  });\r\n}\r\n\r\nfunction addEventListenerVideoElement(\r\n  videoWatchElement = document.querySelector(\".video-watch\")\r\n) {\r\n  if (videoWatchElement && videoWatchElement.childElementCount > 0) {\r\n    videoWatchElement.addEventListener(\"pause\", socketPauseAll);\r\n    videoWatchElement.addEventListener(\"play\", socketPlayAll);\r\n    videoWatchElement.addEventListener(\"ended\", socketPauseAll);\r\n  }\r\n}\r\n\r\nfunction removeEventListenerVideoElement(\r\n  videoWatchElement = document.querySelector(\".video-watch\")\r\n) {\r\n  if (videoWatchElement) {\r\n    videoWatchElement.controls = false;\r\n    videoWatchElement.removeEventListener(\"pause\", socketPauseAll);\r\n    videoWatchElement.removeEventListener(\"play\", socketPlayAll);\r\n    videoWatchElement.removeEventListener(\"ended\", socketPauseAll);\r\n  }\r\n}\r\n\r\nfunction socketPauseAll() {\r\n  if (!videoWatchElement)\r\n    videoWatchElement = document.querySelector(\".video-watch\");\r\n  socket.emit(\"pause-all-video\", videoWatchElement.currentTime, groupId);\r\n}\r\n\r\nfunction socketPlayAll() {\r\n  if (!videoWatchElement)\r\n    videoWatchElement = document.querySelector(\".video-watch\");\r\n  socket.emit(\"play-all-video\", videoWatchElement.currentTime, groupId);\r\n}\r\n\r\nsocket.on(\"fetch-user-online\", () => {\r\n  fetchUserOnline$(groupId, idCartoonUser).subscribe((users) => {\r\n    theaterStream.updateData({\r\n      usersOnline: users,\r\n    });\r\n  });\r\n});\r\n\r\nsocket.on(\"mongo-change-watch\", () => {\r\n  fetchUserOnline$(groupId, idCartoonUser).subscribe((users) => {\r\n    theaterStream.updateData({\r\n      usersOnline: users,\r\n    });\r\n  });\r\n});\r\n\r\nsocket.on(\"play-video-user\", (currentTime, idGroup) => {\r\n  if (!videoWatchElement)\r\n    videoWatchElement = document.querySelector(\".video-watch\");\r\n  if (idGroup === groupId && videoWatchElement) {\r\n    if (videoWatchElement.childElementCount > 0) {\r\n      videoWatchElement\r\n        .play()\r\n        .then(() => {\r\n          videoWatchElement.currentTime = currentTime;\r\n        })\r\n        .catch((error) => {});\r\n    }\r\n  }\r\n});\r\nsocket.on(\"pause-video-user\", (currentTime, idGroup) => {\r\n  if (!videoWatchElement)\r\n    videoWatchElement = document.querySelector(\".video-watch\");\r\n  if (idGroup === groupId && videoWatchElement) {\r\n    const playPromise = videoWatchElement.play();\r\n    if (playPromise) {\r\n      playPromise\r\n        .then(() => {\r\n          videoWatchElement.pause();\r\n          videoWatchElement.currentTime = currentTime;\r\n        })\r\n        .catch((err) => {});\r\n    }\r\n  }\r\n});\r\n\r\nsocket.on(\r\n  \"upload-video\",\r\n  (uri, idGroup, uploadVideoOtherUser, transcriptUrl) => {\r\n    if (!videoWatchElement)\r\n      videoWatchElement = document.querySelector(\".video-watch\");\r\n    if (idGroup === groupId && videoWatchElement) {\r\n      if (uploadVideoOtherUser) {\r\n        uploadNewVideo(uri, videoWatchElement, false, transcriptUrl);\r\n      }\r\n      if (document.getElementById(\"button-get-remote\")) {\r\n        document.getElementById(\"button-get-remote\").disabled = false;\r\n      }\r\n      removeEventListenerVideoElement(videoWatchElement);\r\n    }\r\n  }\r\n);\r\n\r\nsocket.on(\"change-user-keep-remote\", (idGroup) => {\r\n  if (!videoWatchElement)\r\n    videoWatchElement = document.querySelector(\".video-watch\");\r\n  if (idGroup === groupId && videoWatchElement) {\r\n    removeEventListenerVideoElement(videoWatchElement);\r\n    if (document.getElementById(\"button-get-remote\")) {\r\n      document.getElementById(\"button-get-remote\").disabled = false;\r\n    }\r\n  }\r\n});\r\n\r\nfunction uploadNewVideo(\r\n  fileContent,\r\n  videoWatchElement = document.querySelector(\".video-watch\"),\r\n  isControls = false,\r\n  transcriptUrl\r\n) {\r\n  try {\r\n    if (fileContent && fileContent.trim() !== \"\") {\r\n      videoWatchElement.controls = isControls;\r\n      videoWatchElement.src = fileContent;\r\n      let sourceElement = videoWatchElement.querySelector(\"source\");\r\n      if (!sourceElement) {\r\n        sourceElement = document.createElement(\"source\");\r\n        sourceElement.src = fileContent;\r\n        sourceElement.type = \"video/mp4\";\r\n        videoWatchElement.append(sourceElement);\r\n      }\r\n      if (sourceElement) {\r\n        sourceElement.src = fileContent;\r\n        sourceElement.type = \"video/mp4\";\r\n      }\r\n    }\r\n    if (transcriptUrl && transcriptUrl.trim() !== \"\") {\r\n      let trackElement = videoWatchElement.querySelector(\"track\");\r\n      if (!trackElement) {\r\n        trackElement = document.createElement(\"track\");\r\n        trackElement.src = transcriptUrl.trim();\r\n        trackElement.default = true;\r\n        videoWatchElement.append(trackElement);\r\n      }\r\n      if (trackElement) {\r\n        trackElement.src = transcriptUrl.trim();\r\n        trackElement.default = true;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nfunction appendNewMessageNotification(\r\n  message,\r\n  notificationE = document.querySelector(\".notification-user-join\"),\r\n  className\r\n) {\r\n  const messageElement = document.createElement(\"div\");\r\n  messageElement.innerText = message;\r\n  messageElement.style.wordWrap = \"break-word\";\r\n  if (className) {\r\n    messageElement.className += ` ${className}`;\r\n  }\r\n  if (notificationE) {\r\n    notificationE.append(messageElement);\r\n  }\r\n}\r\n\r\nfunction addDeviceStream(deviceElement, stream, deviceGridElement, peerId) {\r\n  if (!deviceGridElement) return;\r\n  deviceElement.id = peerId;\r\n  deviceElement.srcObject = stream;\r\n  deviceElement.poster =\r\n    \"https://www.kindpng.com/picc/m /24-248253_user-profile-default-image-png-clipart-png-download.png\";\r\n  deviceElement.addEventListener(\"loadedmetadata\", () => {\r\n    deviceElement.play();\r\n  });\r\n  deviceElement.addEventListener(\"click\", (e) => {\r\n    console.log(e.target);\r\n    e.target.isMuted = !e.target.isMuted;\r\n    e.target.className = e.target.isMuted ? \"video-muted\" : \"\";\r\n    e.target.title = e.target.isMuted\r\n      ? `${e.target.title.replace(/ muted/g, \"\")} muted`\r\n      : `${e.target.title.replace(/ muted/g, \"\")}`;\r\n  });\r\n  const children = [...deviceGridElement.children];\r\n  children.forEach((child) => {\r\n    if (child.id === peerId) {\r\n      child.remove();\r\n    }\r\n  });\r\n  deviceGridElement.append(deviceElement);\r\n  [...deviceGridElement.children].forEach((child) => {\r\n    const user = theaterStream\r\n      .currentState()\r\n      .usersOnline.find((user) => user.peerId === child.id);\r\n    if (user) {\r\n      child.poster = user.avatar;\r\n      child.isControls = true;\r\n      child.title = user.username;\r\n    }\r\n  });\r\n}\r\n\r\nasync function fetchGroup(groupId, idCartoonUser) {\r\n  const res = await fetch(`/api/theater/${groupId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      authorization: `Bearer ${idCartoonUser}`,\r\n    },\r\n  });\r\n  const resJson = await res.json();\r\n  try {\r\n    updateAllowFetchCurrentRoomDetail(false);\r\n    updateSignIn(true);\r\n    theaterStream.updateData({\r\n      currentRoomDetail: resJson.message,\r\n    });\r\n  } catch (error) {}\r\n}\r\nexport default TheaterWatch;\r\n"],"sourceRoot":""}