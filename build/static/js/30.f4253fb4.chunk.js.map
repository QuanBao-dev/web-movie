{"version":3,"sources":["../../../../src/internal/util/isNumeric.ts","../../../../src/internal/operators/mergeMap.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../../src/internal/util/noop.ts","../../../../src/internal/operators/pluck.ts","../../../../src/internal/operators/filter.ts","../../../../src/internal/observable/timer.ts","../../../../src/internal/operators/tap.ts","../../../../src/internal/operators/retry.ts","store/animeSchedule.js","epics/animeSchedule.js","Hook/animeSchedule.js","components/AnimeScheduleItem/AnimeScheduleItem.js","components/AnimeSchedule/AnimeSchedule.js","Functions/animeSchedule.js"],"names":["isNumeric","val","concurrent","resultSelector","source","MergeMapOperator","MergeMapSubscriber","destination","project","Number","_this","_super","_next","value","push","_tryNext","result","index","error","err","active","_innerSub","innerSubscriber","innerSubscription","hasCompleted","unsubscribe","prototype","notifyNext","notifyComplete","buffer","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","_i","length","plucker","props","x","i","p","currentProp","undefined","filter","predicate","thisArg","FilterOperator","call","FilterSubscriber","tslib_1","scheduler","dueTime","period","periodOrScheduler","async","Observable","subscriber","dispatch","state","closed","tap","nextOrObserver","complete","DoOperator","TapSubscriber","observerOrNext","noop","_tapComplete","_tapError","isFunction","_context","_tapNext","next","count","RetryOperator","RetrySubscriber","isStopped","_a","initialState","dataScheduleMovie","dateSchedule","keys","map","indexActive","behaviorSubject","BehaviorSubject","animeScheduleStream","subscribe","setState","v","currentState","ans","init","updateData","data","updateDataQuick","forEach","key","updateDataSchedule","fetchAnimeSchedule","animeScheduleState","setAnimeScheduleState","subscription","weekIndex","filterWeek","_","fetchDataScheduleSub","pipe","mergeMap","day","timer","ajax","pluck","retry","catchError","of","AnimeList","loadable","todayDate","Date","now","toDateString","slice","toLocaleLowerCase","todayIndex","findIndex","includes","resetScheduleDate","AnimeScheduleItem","date","movieRef","useRef","className","ref","onClick","boolList","window","scroll","top","current","offsetTop","style","maxHeight","transition","empty","lazy","searchBy","AnimeSchedule","useState","useEffect","useFetchAnimeSchedule"],"mappings":"6GAAA,8CAOE,SAAQA,EAAYC,GACrB,8C,uGCkEC,eAAqBC,G,YAEV,IAAPA,IAEFA,EAAO,OAAC,mBAKsB,oBAArBC,EACT,SAAaC,GAAc,OAACA,wBAAA,yFAEI,kBAA3B,IACRF,KAGC,YAAoB,OAAwDE,EACxD,KAA6C,c,MADW,W,SACxDC,IAA6CH,QAChE,QAEDA,4BAIC,eACH,kBAaE,O,+BANF,2DAME,EAtB4E,G,EAuBA,Y,SANpEI,EAAwBC,EAAMC,UACb,IAAjB,IACAN,EAAmBO,0B,kCAO1BC,YAESA,eACRA,EAAI,cAAc,E,EAChB,OAAK,G,EACN,S,EAAM,QACLA,E,WARgB,EAA6CC,GAUjEL,EAAC,UAAAM,MAAA,YAES,4BACJ,cAA2BC,GAG7B,YAASC,KAAKD,I,EAET,UAAYE,SAAY,Y,IAC7BC,EACDC,eACD,IACID,EAAC,KAAUR,QAAQK,EAAAI,GAGjB,SAEA,YADA,iBAAeC,MAAOC,GAG5B,KAAMC,SAIN,KAAIC,UAAAL,I,EAEH,gCACF,oBAES,mBACRT,EAAK,IAAAe,GACL,IAAIC,EAAiB,YAAgB,EAAMD,GACzCC,IAAiB,GAClBhB,UAIHD,sBAAU,WACR,KAAKkB,cAAY,EAClB,yCAED,4BAEE,KAAKC,e,EAEQC,UAAOC,WAAU,Y,KAC7BpB,qB,EACM,UAAYqB,eAAY,W,IAC9BC,cACF,cACH,WAnE8C,WAAqBA,EAmElE,SAK+B,IAAnB,KAAUT,QAAS,mB,+BAjE8C,O,2FC7G/D,SAASU,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,+CIJ9F,mC,iCCAA,8CA6C4B,a,UAAA,0BAAuBC,I,kBAEjD,IAAIC,EAAM,EAAQ,O,GACN,IAAVA,EACD,uDAEF,kD,SAGOC,EAASC,KAchB,OAbO,SAAeC,G,IACnB,MAAiBA,EACRC,EAAG,MAAeA,IAAM,CAC/B,IAAIC,EAAc,MAAb,EAAaC,aAAAC,E,QAChBF,MAGD,OAFAC,IAKH,Y,qFCPF,SAAOE,EAASC,EAAAC,G,OACd,SAAuBjD,GACvB,2B,IAIFkD,EAAoB,W,SAAAA,IAA+CD,GAC/C,iBACnB,eAHH,O,EAMW,UAAOE,KAAc,WAAiBnD,GAC9C,0DACFkD,EAPqB,GAcYE,WAAa7C,G,SAI7C6C,EAGEjD,EAAM6C,EAAYC,GAFA,kBAA+C9C,IAAA,KAGlE,OAFmBG,cAJpBA,UAAkB2C,E,UAMjB,EAR+B,OAIhCI,MAAY9C,G,EASM,4BAChB,IAAIK,E,IAEHA,mDAAC,MACAG,GAED,YADC,iBAAOD,MAAAC,GAGPH,GACD,0BAtB6B,EAAAwC,CAAA,M,iCC/ElC,uEAyDsB,eAA0BE,QAG9B,IAAZC,IACAA,EAAU,G,IAEbC,K,mBAAU,GACTA,EAASnD,OAAG,GAAyB,IAAAA,UAGlC,YAAY,KACfiD,EAAYG,GAGd,YAAW,KACTH,EAAYI,K,IAEPC,KAAW,SAAUC,GAE1B,MAAO,YAAU,GACfL,GACC,UACF,uBACJ1C,QAAA2C,SAAAI,kB,SAYKC,EAAUC,G,IACZjD,EAAOiD,QAAAN,WAAAI,e,KACR,S,EAAgBG,O,CAIZ,IAAc,IAAbP,EACF,OAACI,EAAgB,W,wIC9BrB,SAAOI,EAASC,EAAAnD,EAAoBoD,G,OAClC,SAAuBlE,GACvB,6B,IAIFmE,EAAoB,W,SAAAA,MAAsDD,GACtD,oBAAwBD,EACxB,WAAQnD,EAC3B,gBAJH,O,EAMWQ,UAAO6B,KAAU,SAAIS,EAAc5D,GAC3C,2EACFmE,EAPqB,GAeSC,WAAa7D,G,SAS1C6D,EAIIjE,EAAMkE,EAAYvD,EAYnBoD,GAtBK,QAAiC,KAAK,KAAA/D,IAAA,KAsB3C,OApBKG,WAASgE,IAEThE,YAAYgE,IAOhBhE,EAAKiE,aAAYD,IACjBhE,EAAKkE,UAAY1D,GAAG,IACpBR,EAAI,aAAW4D,GAAiBI,IAC9BG,YAAK,IACLnE,EAAKoE,SAAWpE,EACjBA,cACK+D,IACJ/D,EAAKoE,SAAWL,EAChB/D,EAAKqE,SAASN,EAAiBO,MAAMN,IACrChE,EAAKkE,UAAYH,EAAG,OAAeC,IACpChE,gCACF,EAzB0B,OAS7B+C,MAAY9C,G,EAmBN,4B,IAEH,oCAAC,MACAQ,GAED,YADC,iBAAOD,MAAAC,GAGV,0B,EAGK,6B,IAEH,qCAAC,MACAA,GAED,YADC,iBAAOD,MAAAC,GAGV,2B,EAGK,+B,IAEH,sCAAC,MACAA,GAED,YADC,iBAAOD,MAAAC,GAGV,oCAvD4B,EAAAqD,CAAA,M,qFCtCN,cAKvB,YAJO,IAAP,IACDS,MAGC,YAAoB,OACA7E,EAAqB,kB,MAAA,WACzC,SAAC8E,EAAAD,EAAA7E,GAED,aACE,YAAcA,EASe,OAPjC8E,YAAC3B,KAAA,mEAOgC,EAbU,G,EAiBvC,SAAM5C,G,SADYwE,EAAM5E,EAAe0E,K,2BAIvC,OAFDvE,UACDA,WACOA,E,WALa,EAAaC,G,EAOzB,UAAaO,kB,SACfkE,UAAO,C,IACRhF,EAAAiF,KAAAjF,OAAA6E,EAAAI,KAAAJ,M,GAAe,I,EACd,OAAKtE,EAAQ,UAAUO,MAAAqC,KAAA,KAAApC,GAElB8D,GAAU,IAClB,gBAEL7E,YAAC,iC,EAbG,O,oNC1EEkF,EAAe,CACnBC,kBAAmB,GACnBC,aAAcxD,MAAMO,KAAKP,MAAM,GAAGyD,QAAQC,KAAI,kBAAM,KACpDC,YAAa,GAETC,EAAkB,IAAIC,IAAgBP,GAExCpB,EAAQoB,ECICQ,EDFc,CACzBR,eACAS,UAAW,SAACC,GAAD,OAAcJ,EAAgBG,WAAU,SAACE,GAAD,OAAOD,EAASC,OACnEC,aAAc,WACZ,IAAIC,EAIJ,OAHAP,EAAgBG,WAAU,SAACE,GACzBE,EAAMF,KAEDE,GAAOb,GAEhBc,KAAM,WACJR,EAAgBZ,KAAKd,IAEvBmC,WAAY,WAA0B,IAAzBC,EAAwB,uDAAjBhB,EAClBpB,EAAK,2BACAA,GACAoC,GAELV,EAAgBZ,KAAKd,IAEvBqC,gBAAiB,WAA0B,IAAzBD,EAAwB,uDAAjBhB,EACjBG,EAAOnD,OAAOmD,KAAKa,GACzBb,EAAKe,SAAQ,SAACC,GACZvC,EAAMuC,GAAOH,EAAKG,OAGtBC,mBAAoB,SAACJ,GACnBpC,EAAK,2BACAA,GADA,IAEHqB,kBAAkB,2BACbrB,EAAMqB,mBACNe,KAGPV,EAAgBZ,KAAKd,KEvCZyC,EAAqB,SAChCC,EACAC,GAEA,OAAO,WACL,IAAMC,EAAehB,EAAoBC,UAAUc,GACnDf,EAAoBM,OACpB,IDEgCW,ECO1BC,EATO,CACX,SACA,UACA,YACA,WACA,SACA,WACA,UAEsB7D,QACtB,SAAC8D,EAAGhG,GAAJ,OAAc2F,EAAmBpB,aAAavE,MAG1CiG,GDX0BH,ECWiBC,EDVnCzE,YAAKwE,GACNI,KACbC,aAAS,SAACC,GAAD,OACPC,YAAM,GAAGH,KACPhE,aACE,kBAAO2C,EAAoBI,eAAeX,kBAAkB8B,MAE9DD,aAAS,kBACPG,YAAK,6CAAD,OAA8CF,IAAOF,KACvDK,YAAM,WAAY,QAClBC,YAAM,IACNC,aAAW,SAACvG,GACV,OAAOwG,YAAG,OAEZvD,aAAI,SAAC6B,GAAD,OAAOH,EAAoBY,mBAApB,eAA0CW,EAAMpB,iBCJNF,YAC7D,OAAO,WACLe,EAAarF,cACbyF,EAAqBzF,iB,gBCvBrBmG,EAAYC,aAAS,kBAAM,mCH2CA,WAC/B,IASMC,EAAY,IAAIC,KAAKA,KAAKC,OAC7BC,eACAC,MAAM,EAAG,GACTC,oBACGC,EAbO,CACX,SACA,UACA,YACA,WACA,SACA,WACA,UAMsBC,WAAU,SAAChB,GAAD,OAASA,EAAIiB,SAASR,MACxD5D,EAAMkE,WAAaA,EGzDrBG,GAEA,IA+CeC,EA/CW,SAAC,GAAyC,IAAvCvH,EAAsC,EAAtCA,MAAO2F,EAA+B,EAA/BA,mBAAoB6B,EAAW,EAAXA,KAChD9C,EAAciB,EAAmBjB,YACjC+C,EAAWC,mBACjB,OACE,wBAAIC,UAAU,qBAAqBC,IAAKH,GACtC,yBACEE,UAAU,QACVE,QAAS,WACP,IAAMtD,EAAY,YAAOoB,EAAmBpB,cACtCuD,EAAW/G,MAAMO,KAAKP,MAAM,GAAGyD,QAAQC,KAAI,kBAAM,KAClDF,EAAavE,IAQhB8H,EAAS9H,IAAS,EAClB6E,EAAoBO,WAAW,CAC7Bb,aAAcuD,EACdpD,YAAa,SAVfoD,EAAS9H,IAAS,EAClB6E,EAAoBO,WAAW,CAC7Bb,aAAcuD,EACdpD,YAAa1E,IAEf+H,OAAOC,OAAO,CAAEC,IAAKR,EAASS,QAAQC,eAUzCnI,IAAU2F,EAAmBwB,WAAa,QAAUK,GAEvD,yBACEY,MAAO,CACLC,UAAWrI,IAAU0E,EAAc,SAAW,MAC9C4D,WAAY,OAGb3C,EAAmBrB,kBAAkBkD,IACpC,kBAACb,EAAD,CACE4B,OAAO,EACPlD,KAAMM,EAAmBrB,kBAAkBkD,GAC3CgB,MAAM,EACNC,SAAU,aCNPC,UAjCO,WACpB,IASA,EAAoDC,mBAClD9D,EAAoBI,gBADtB,mBAAOU,EAAP,KAA2BC,EAA3B,KAIA,OCnBmC,SACnCD,EACAC,GAEAgD,oBAAUlD,EAAmBC,EAAoBC,GAAwB,CACvED,EAAmBpB,eDarBsE,CAAsBlD,EAAoBC,GAExC,yBAAK+B,UAAU,iCACb,wBAAIA,UAAU,uBACZ,wCAhBO,CACX,SACA,UACA,YACA,WACA,SACA,WACA,UAUUlD,KAAI,SAAC+C,EAAMxH,GACf,OACE,kBAAC,EAAD,CACE2F,mBAAoBA,EACpB6B,KAAMA,EACNxH,MAAOA,EACPwF,IAAKxF","file":"static/js/30.f4253fb4.chunk.js","sourcesContent":[null,null,"import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}",null,null,null,null,null,null,"import { BehaviorSubject } from \"rxjs\";\r\nconst initialState = {\r\n  dataScheduleMovie: {},\r\n  dateSchedule: Array.from(Array(7).keys()).map(() => false),\r\n  indexActive: 0\r\n};\r\nconst behaviorSubject = new BehaviorSubject(initialState);\r\n\r\nlet state = initialState;\r\n\r\nconst animeScheduleStore = {\r\n  initialState,\r\n  subscribe: (setState) => behaviorSubject.subscribe((v) => setState(v)),\r\n  currentState: () => {\r\n    let ans;\r\n    behaviorSubject.subscribe((v) => {\r\n      ans = v;\r\n    });\r\n    return ans || initialState;\r\n  },\r\n  init: () => {\r\n    behaviorSubject.next(state);\r\n  },\r\n  updateData: (data = initialState) => {\r\n    state = {\r\n      ...state,\r\n      ...data,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n  updateDataQuick: (data = initialState) => {\r\n    const keys = Object.keys(data);\r\n    keys.forEach((key) => {\r\n      state[key] = data[key];\r\n    });\r\n  },\r\n  updateDataSchedule: (data) => {\r\n    state = {\r\n      ...state,\r\n      dataScheduleMovie: {\r\n        ...state.dataScheduleMovie,\r\n        ...data,\r\n      },\r\n    };\r\n    behaviorSubject.next(state);\r\n  }\r\n\r\n};\r\nexport const resetScheduleDate = () => {\r\n  const week = [\r\n    \"monday\",\r\n    \"tuesday\",\r\n    \"wednesday\",\r\n    \"thursday\",\r\n    \"friday\",\r\n    \"saturday\",\r\n    \"sunday\",\r\n  ];\r\n  const todayDate = new Date(Date.now())\r\n    .toDateString()\r\n    .slice(0, 3)\r\n    .toLocaleLowerCase();\r\n  const todayIndex = week.findIndex((day) => day.includes(todayDate));\r\n  state.todayIndex = todayIndex;\r\n};\r\n\r\nexport default animeScheduleStore;\r\n","import { from, of, timer } from \"rxjs\";\r\nimport { ajax } from \"rxjs/ajax\";\r\nimport {\r\n  catchError,\r\n  mergeMap,\r\n  pluck,\r\n  retry,\r\n  filter,\r\n  tap,\r\n} from \"rxjs/operators\";\r\nimport animeScheduleStore from \"../store/animeSchedule\";\r\n\r\nexport const animeScheduleStream = animeScheduleStore;\r\n\r\nexport const fetchAnimeSchedule$ = (weekIndex) => {\r\n  const source$ = from(weekIndex);\r\n  return source$.pipe(\r\n    mergeMap((day) =>\r\n      timer(0).pipe(\r\n        filter(\r\n          () => !animeScheduleStream.currentState().dataScheduleMovie[day]\r\n        ),\r\n        mergeMap(() =>\r\n          ajax(`https://api.jikan.moe/v4/schedules?filter=${day}`).pipe(\r\n            pluck(\"response\", \"data\"),\r\n            retry(20),\r\n            catchError((err) => {\r\n              return of([]);\r\n            }),\r\n            tap((v) => animeScheduleStream.updateDataSchedule({ [day]: v }))\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n};\r\n","import {\r\n  animeScheduleStream,\r\n  fetchAnimeSchedule$,\r\n} from \"../epics/animeSchedule\";\r\n\r\nexport const fetchAnimeSchedule = (\r\n  animeScheduleState,\r\n  setAnimeScheduleState\r\n) => {\r\n  return () => {\r\n    const subscription = animeScheduleStream.subscribe(setAnimeScheduleState);\r\n    animeScheduleStream.init();\r\n    const week = [\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\",\r\n      \"sunday\",\r\n    ];\r\n    const filterWeek = week.filter(\r\n      (_, index) => animeScheduleState.dateSchedule[index]\r\n    );\r\n    // console.log(filterWeek);\r\n    const fetchDataScheduleSub = fetchAnimeSchedule$(filterWeek).subscribe();\r\n    return () => {\r\n      subscription.unsubscribe();\r\n      fetchDataScheduleSub.unsubscribe();\r\n    };\r\n  };\r\n};\r\n","import loadable from \"@loadable/component\";\r\nimport React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { animeScheduleStream } from \"../../epics/animeSchedule\";\r\nimport { resetScheduleDate } from \"../../store/animeSchedule\";\r\nconst AnimeList = loadable(() => import(\"../AnimeList/AnimeList\"));\r\nresetScheduleDate();\r\n\r\nconst AnimeScheduleItem = ({ index, animeScheduleState, date }) => {\r\n  const indexActive = animeScheduleState.indexActive;\r\n  const movieRef = useRef();\r\n  return (\r\n    <li className=\"day-schedule-movie\" ref={movieRef}>\r\n      <div\r\n        className=\"title\"\r\n        onClick={() => {\r\n          const dateSchedule = [...animeScheduleState.dateSchedule];\r\n          const boolList = Array.from(Array(7).keys()).map(() => false);\r\n          if (!dateSchedule[index]) {\r\n            boolList[index] = true;\r\n            animeScheduleStream.updateData({\r\n              dateSchedule: boolList,\r\n              indexActive: index,\r\n            });\r\n            window.scroll({ top: movieRef.current.offsetTop });\r\n          } else {\r\n            boolList[index] = false;\r\n            animeScheduleStream.updateData({\r\n              dateSchedule: boolList,\r\n              indexActive: null,\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        {index === animeScheduleState.todayIndex ? \"Today\" : date}\r\n      </div>\r\n      <div\r\n        style={{\r\n          maxHeight: index === indexActive ? \"3500px\" : \"0px\",\r\n          transition: \"1s\",\r\n        }}\r\n      >\r\n        {animeScheduleState.dataScheduleMovie[date] && (\r\n          <AnimeList\r\n            empty={true}\r\n            data={animeScheduleState.dataScheduleMovie[date]}\r\n            lazy={true}\r\n            searchBy={\"anime\"}\r\n          />\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default AnimeScheduleItem;\r\n","import './AnimeSchedule.css';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { animeScheduleStream } from '../../epics/animeSchedule';\r\nimport { useFetchAnimeSchedule } from '../../Functions/animeSchedule';\r\nimport AnimeScheduleItem from '../AnimeScheduleItem/AnimeScheduleItem';\r\n\r\nconst AnimeSchedule = () => {\r\n  const week = [\r\n    \"monday\",\r\n    \"tuesday\",\r\n    \"wednesday\",\r\n    \"thursday\",\r\n    \"friday\",\r\n    \"saturday\",\r\n    \"sunday\",\r\n  ];\r\n  const [animeScheduleState, setAnimeScheduleState] = useState(\r\n    animeScheduleStream.currentState()\r\n  );\r\n  useFetchAnimeSchedule(animeScheduleState, setAnimeScheduleState);\r\n  return (\r\n    <div className=\"container-week-schedule-movie\">\r\n      <ul className=\"week-schedule-movie\">\r\n        <h1>Schedule</h1>\r\n        {week.map((date, index) => {\r\n          return (\r\n            <AnimeScheduleItem\r\n              animeScheduleState={animeScheduleState}\r\n              date={date}\r\n              index={index}\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimeSchedule;","import { useEffect } from \"react\";\r\nimport { fetchAnimeSchedule } from \"../Hook/animeSchedule\";\r\n\r\nexport const useFetchAnimeSchedule = (\r\n  animeScheduleState,\r\n  setAnimeScheduleState\r\n) => {\r\n  useEffect(fetchAnimeSchedule(animeScheduleState, setAnimeScheduleState), [\r\n    animeScheduleState.dateSchedule,\r\n  ]);\r\n};\r\n"],"sourceRoot":""}