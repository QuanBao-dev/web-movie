{"version":3,"sources":["store/caches.js","components/Input/Input.js","store/animeDetail.js","epics/animeDetail.js","store/updatedAnime.js","epics/updatedAnime.js","store/character.js","epics/character.js","../../../../src/internal/operators/exhaustMap.ts","store/reviews.js","epics/reviews.js","components/FormSubmit/FormSubmit.js","components/FormSubmitCrawl/FormSubmitCrawl.js","components/ListVideoUrl/ListVideoUrl.js","components/MenuTable/MenuTable.js","Hook/animeDetail.js","Functions/animeDetail.js","pages/AnimeDetail/AnimeDetail.js"],"names":["initialState","behaviorSubject","BehaviorSubject","state","cachesStore","subscribe","setState","value","currentState","ans","updateData","obj","next","Input","label","input","type","error","defaultValue","onKeyUp","style","width","className","ref","required","dataInformationAnime","dataVideoPromo","dataEpisodesAnime","dataLargePicture","dataLargePictureList","isAddMode","malId","triggerFetch","dataRelatedAnime","pageRelated","isLoadingCharacter","isLoadingInfoAnime","isLoadingVideoAnime","isLoadingLargePicture","isLoadingEpisode","isLoadingRelated","nameStore","updateIsLoading","bool","key","resetState","v","object","animeDetailStream","animeDetailStore","fetchData$","name","timer","pipe","tap","mergeMapTo","iif","dataInfo","map","delay","ajax","pluck","retry","switchMap","data","includes","status","throwError","of","fetchAnimeThemes$","themes","takeWhile","switchMapTo","fetchAnimeExternal$","externals","fetchDataVideo$","fetchEpisodeDataVideo$","catchError","console","log","fetchLargePicture$","document","body","backgroundImage","backgroundSize","pictures","jpg","webp","large_image_url","fetchBoxMovieOneMovie$","idCartoonUser","url","headers","authorization","capitalizeString","string","replace","capitalize","fetchAnimeRecommendation$","fetchDataCharacter$","dataCharacter","handleAddBoxMovie","addMovieRef","debounceTime","filter","current","fromEvent","exhaustMap","method","mal_id","title","imageUrl","episodes","score","airing","synopsis","typeResponse","handleDeleteBoxMovie","deleteMovieRef","currentPageBoxMovie","currentPageUpdatedMovie","updatedMovie","boxMovie","lastPageUpdatedMovie","lastPageBoxMovie","subNavToggle","updatedAnimeStream","init","updateDataQuick","keys","Object","forEach","fetchUpdatedMovie$","fetchBoxMovie$","err","from","require","role","page","numberDisplay","dataCharacterRaw","characterStream","updateRole","updatePage","project","resultSelector","source","ExhaustMapOperator","call","ExhaustMapSubscriber","_super","destination","_this","tslib_1","_next","hasSubscription","result","index","_innerSub","innerSubscriber","SimpleInnerSubscriber","innerSubscription","prototype","_complete","hasCompleted","notifyNext","notifyError","notifyComplete","reviewsData","pageReviewsData","pageReviewsOnDestroy","isStopFetchingReviews","shouldUpdatePageReviewData","previousMalId","pageSplit","reviewsStream","fetchReviewsData$","dataReviews","timeout","length","updatePageScrolling$","window","innerWidth","scrollHeight","scrollY","FormSubmit","inputEpisodeRef","inputVideoUrlRef","cookies","episodeData","typeVideoSelectRef","onChange","e","target","modeAnime","querySelector","display","onClick","a","episode","parseInt","embedUrl","typeVideo","language","isDub","isNaN","trim","alert","fetch","JSON","stringify","res","json","resJson","Error","episodesEngDub","episodesEng","FormSubmitCrawl","startEpisodeInputRef","endEpisodeInputRef","linkWatchingInputRef","buttonSubmitCrawlInputRef","selectCrawlInputRef","selectModeEngVideoRef","useState","setError","useEffect","disabled","start","end","serverWeb","test","updateMovie","message","ListVideoUrl","keyListEpisode","slice","reverse","to","MenuTable","elementTitle","toggleNavTitle","maxHeight","boxShadow","scrollIntoView","behavior","innerText","useInitAnimeDetailState","setNameState","subscription2","unsubscribe","initAnimeDetailState","useFetchData","setShowThemeMusic","linkWatchingInputElement","subscription","fetchDataInfo$","fetchDataVideoPromo$","promo","fetchLargePictureUrl$","fetchEpisodesUrlSub","api","fetchAnimeAppears$","handledData","entry","votes","recommendation_count","fetchCharacters$","fetchInformation$","type_data","concatAll","opening_themes","ending_themes","external_links","broadcast","day","time","timezone","openings","endings","scroll","top","updatedAnime","concat","fetchData","useFetchBoxMovieOneMovie","fetchBoxMovieOneMovie","ListInformation","loadable","ListImageAnimeDetail","Characters","VideoPromotionList","RelatedAnime","Reviews","AnimeDetail","props","match","params","path","split","user","userStream","useCookies","animeDetailState","setAnimeDetailState","showThemeMusic","setToggleNavTitle","setElementTitle","useRef","buttonDeleteCrawlInputRef","isSendingRequest","setIsSendingRequest","arrayTagTitle","querySelectorAll","arrKeys","indexOf","sourceFilmList","episodeDataDisplay","episodeList","deformData","CircularProgress","color","size","listImage","isLoading","src","alt","images","toString","image_url","margin","background","marginBottom","sourceFilmKey","lazy"],"mappings":"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","file":"static/js/31.854ebd24.chunk.js","sourcesContent":["import { BehaviorSubject } from \"rxjs\";\r\nconst initialState = {};\r\nconst behaviorSubject = new BehaviorSubject(initialState);\r\nlet state = initialState;\r\nconst cachesStore = {\r\n  subscribe: (setState) =>\r\n    behaviorSubject.subscribe((value) => setState(value)),\r\n  currentState: () => {\r\n    let ans;\r\n    behaviorSubject.subscribe((value) => {\r\n      ans = value;\r\n    });\r\n    return ans;\r\n  },\r\n  updateData: (obj) => {\r\n    state = {\r\n      ...state,\r\n      ...obj,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n};\r\n\r\nexport default cachesStore;\r\n","import \"./Input.css\";\r\nimport React from \"react\";\r\n\r\nconst Input = ({\r\n  label,\r\n  input,\r\n  type,\r\n  error = null,\r\n  defaultValue = \"\",\r\n  onKeyUp,\r\n}) => {\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <div className=\"form-custom\">\r\n        <input\r\n          onKeyUp={onKeyUp}\r\n          defaultValue={defaultValue}\r\n          ref={input}\r\n          type={type || \"text\"}\r\n          required\r\n        />\r\n        <label className=\"label-name\">{label}</label>\r\n      </div>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { BehaviorSubject } from \"rxjs\";\r\n\r\nconst initialState = {\r\n  dataInformationAnime: {},\r\n  dataVideoPromo: [],\r\n  dataEpisodesAnime: {},\r\n  dataLargePicture: \"\",\r\n  dataLargePictureList: [],\r\n  isAddMode: null,\r\n  malId: null,\r\n  triggerFetch:null,\r\n  dataRelatedAnime: [],\r\n  pageRelated: 1,\r\n  isLoadingCharacter: null,\r\n  isLoadingInfoAnime: null,\r\n  isLoadingVideoAnime: null,\r\n  isLoadingLargePicture: null,\r\n  isLoadingEpisode: null,\r\n  isLoadingRelated: null,\r\n};\r\nconst behaviorSubject = new BehaviorSubject(initialState);\r\nlet state = initialState;\r\nconst nameStore = {\r\n  initialState,\r\n  subscribe: (setState) => behaviorSubject.subscribe(setState),\r\n  updateIsLoading: (\r\n    bool,\r\n    key = \"isLoadingCharacter\" ||\r\n      \"isLoadingInfoAnime\" ||\r\n      \"isLoadingVideoAnime\" ||\r\n      \"isLoadingLargePicture\" ||\r\n      \"isLoadingEpisode\" ||\r\n      \"isLoadingRelated\"\r\n  ) => {\r\n    state = {\r\n      ...state,\r\n      [key]: bool,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n  resetState: () => {\r\n    state = {\r\n      ...state,\r\n      ...initialState,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n  currentState: () => {\r\n    let ans;\r\n    behaviorSubject.subscribe((v) => (ans = v));\r\n    return ans || initialState;\r\n  },\r\n  updateData: (object = initialState) => {\r\n    state = {\r\n      ...state,\r\n      ...object,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n};\r\n\r\nexport default nameStore;\r\n","import capitalize from \"lodash/capitalize\";\r\nimport { fromEvent, iif, of, throwError, timer } from \"rxjs\";\r\nimport { ajax } from \"rxjs/ajax\";\r\nimport {\r\n  catchError,\r\n  debounceTime,\r\n  exhaustMap,\r\n  filter,\r\n  map,\r\n  mergeMapTo,\r\n  pluck,\r\n  retry,\r\n  switchMap,\r\n  switchMapTo,\r\n  takeWhile,\r\n  tap,\r\n  delay,\r\n} from \"rxjs/operators\";\r\n\r\nimport animeDetailStore from \"../store/animeDetail\";\r\nimport cachesStore from \"../store/caches\";\r\n\r\nexport const animeDetailStream = animeDetailStore;\r\n\r\nexport const fetchData$ = (name, type) => {\r\n  return timer(0).pipe(\r\n    tap(() => {\r\n      animeDetailStream.updateIsLoading(true, \"isLoadingInfoAnime\");\r\n      animeDetailStream.updateData({\r\n        isAddMode: null,\r\n      });\r\n    }),\r\n    mergeMapTo(\r\n      iif(\r\n        () =>\r\n          cachesStore.currentState()[name] &&\r\n          cachesStore.currentState()[name].dataInfo,\r\n        timer(0).pipe(map(() => cachesStore.currentState()[name].dataInfo)),\r\n        timer(0).pipe(\r\n          delay(1500),\r\n          mergeMapTo(\r\n            ajax(`https://api.jikan.moe/v4/${type}/${name}`).pipe(\r\n              pluck(\"response\", \"data\"),\r\n              retry(1),\r\n              switchMap((data) => {\r\n                if ([404, 500].includes(data.status)) {\r\n                  return throwError(\"404 error\");\r\n                }\r\n                return of(data);\r\n              })\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport const fetchAnimeThemes$ = (malId, type) => {\r\n  return timer(0).pipe(\r\n    mergeMapTo(\r\n      iif(\r\n        () =>\r\n          cachesStore.currentState()[malId] &&\r\n          cachesStore.currentState()[malId].themes,\r\n        timer(0).pipe(map(() => cachesStore.currentState()[malId].themes)),\r\n        timer(0).pipe(\r\n          takeWhile(() => type === \"anime\"),\r\n          switchMapTo(\r\n            ajax(`https://api.jikan.moe/v4/${type}/${malId}/themes`).pipe(\r\n              retry(6),\r\n              pluck(\"response\", \"data\")\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport const fetchAnimeExternal$ = (malId, type) => {\r\n  return timer(0).pipe(\r\n    mergeMapTo(\r\n      iif(\r\n        () =>\r\n          cachesStore.currentState()[malId] &&\r\n          cachesStore.currentState()[malId].externals,\r\n        timer(0).pipe(map(() => cachesStore.currentState()[malId].externals)),\r\n        timer(0).pipe(\r\n          delay(1500),\r\n          mergeMapTo(\r\n            ajax(`https://api.jikan.moe/v4/${type}/${malId}/external`).pipe(\r\n              retry(6),\r\n              pluck(\"response\", \"data\")\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport const fetchDataVideo$ = (malId, type) => {\r\n  return iif(\r\n    () =>\r\n      cachesStore.currentState()[malId] &&\r\n      cachesStore.currentState()[malId].dataVideoPromo,\r\n    timer(0).pipe(map(() => cachesStore.currentState()[malId].dataVideoPromo)),\r\n    timer(0).pipe(\r\n      takeWhile(() => type === \"anime\"),\r\n      tap(() => {\r\n        animeDetailStream.updateIsLoading(true, \"isLoadingVideoAnime\");\r\n      }),\r\n      delay(1500),\r\n      mergeMapTo(\r\n        ajax(`https://api.jikan.moe/v4/anime/${malId}/videos`).pipe(\r\n          retry(6),\r\n          pluck(\"response\", \"data\")\r\n        )\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport const fetchEpisodeDataVideo$ = (malId, type) => {\r\n  return timer(0).pipe(\r\n    takeWhile(() => type === \"anime\"),\r\n    tap(() => {\r\n      animeDetailStream.updateIsLoading(true, \"isLoadingEpisode\");\r\n    }),\r\n    mergeMapTo(ajax(`/api/movies/${malId}/episodes`).pipe(pluck(\"response\"))),\r\n    catchError(() => {\r\n      console.log(\"Don't have episodes\");\r\n      return of({ error: \"Don't have episodes\" });\r\n    })\r\n  );\r\n};\r\n\r\nexport function fetchLargePicture$(name, type) {\r\n  return timer(0).pipe(\r\n    tap(() => {\r\n      document.body.style.backgroundImage = `url(/background.jpg)`;\r\n      document.body.style.backgroundSize = \"cover\";\r\n      animeDetailStream.updateIsLoading(true, \"isLoadingLargePicture\");\r\n    }),\r\n    mergeMapTo(\r\n      iif(\r\n        () =>\r\n          cachesStore.currentState()[name] &&\r\n          cachesStore.currentState()[name].dataLargePictureList,\r\n        timer(0).pipe(\r\n          map(() => cachesStore.currentState()[name].dataLargePictureList)\r\n        ),\r\n        timer(0).pipe(\r\n          delay(1500),\r\n          mergeMapTo(\r\n            ajax(`https://api.jikan.moe/v4/${type}/${name}/pictures`).pipe(\r\n              pluck(\"response\", \"data\"),\r\n              retry(5),\r\n              map((pictures) => ({\r\n                pictures: pictures.map(\r\n                  ({ jpg, webp }) => webp.large_image_url || jpg.large_image_url\r\n                ),\r\n              }))\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nexport const fetchBoxMovieOneMovie$ = (malId, idCartoonUser) => {\r\n  return ajax({\r\n    url: `/api/movies/box/${malId}`,\r\n    headers: {\r\n      authorization: `Bearer ${idCartoonUser}`,\r\n    },\r\n  }).pipe(\r\n    pluck(\"response\"),\r\n    catchError((error) => of({ error }))\r\n  );\r\n};\r\n\r\nexport function capitalizeString(string) {\r\n  string = string.replace(\"_\", \" \");\r\n  return capitalize(string);\r\n}\r\n\r\nexport function fetchAnimeRecommendation$(malId, type) {\r\n  return timer(0).pipe(\r\n    tap(() => {\r\n      animeDetailStream.updateIsLoading(true, \"isLoadingRelated\");\r\n    }),\r\n    delay(1500),\r\n    mergeMapTo(\r\n      ajax({\r\n        url: `https://api.jikan.moe/v4/${type}/${malId}/recommendations`,\r\n      }).pipe(\r\n        retry(6),\r\n        pluck(\"response\", \"data\"),\r\n        catchError((error) => of({ error }))\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nexport function fetchDataCharacter$(malId, type) {\r\n  return timer(0).pipe(\r\n    tap(() => {\r\n      animeDetailStream.updateIsLoading(true, \"isLoadingCharacter\");\r\n    }),\r\n    mergeMapTo(iif(\r\n      () =>\r\n        cachesStore.currentState()[malId] &&\r\n        cachesStore.currentState()[malId].dataCharacter,\r\n      timer(0).pipe(map(() => cachesStore.currentState()[malId].dataCharacter)),\r\n      timer(0).pipe(\r\n        mergeMapTo(\r\n          ajax(`https://api.jikan.moe/v4/${type}/${malId}/characters`).pipe(\r\n            retry(20),\r\n            pluck(\"response\", \"data\"),\r\n            catchError((error) => of({ error }))\r\n          )\r\n        )\r\n      )\r\n    ))\r\n  );\r\n}\r\n\r\nexport function handleAddBoxMovie(addMovieRef, idCartoonUser, isAddMode) {\r\n  return timer(0).pipe(\r\n    debounceTime(500),\r\n    filter(() => isAddMode === true && addMovieRef.current),\r\n    switchMap(() => {\r\n      return fromEvent(addMovieRef.current, \"click\").pipe(\r\n        filter(() => animeDetailStream.currentState().dataInformationAnime),\r\n        exhaustMap(() =>\r\n          ajax({\r\n            method: \"POST\",\r\n            url: \"/api/movies/box\",\r\n            headers: {\r\n              authorization: `Bearer ${idCartoonUser}`,\r\n            },\r\n            body: {\r\n              malId:\r\n                animeDetailStream.currentState().dataInformationAnime.mal_id,\r\n              title:\r\n                animeDetailStream.currentState().dataInformationAnime.title,\r\n              imageUrl:\r\n                animeDetailStream.currentState().dataLargePictureList[0],\r\n              episodes:\r\n                animeDetailStream.currentState().dataInformationAnime\r\n                  .episodes || \"??\",\r\n              score:\r\n                animeDetailStream.currentState().dataInformationAnime.score,\r\n              airing:\r\n                animeDetailStream.currentState().dataInformationAnime.airing,\r\n              synopsis:\r\n                animeDetailStream.currentState().dataInformationAnime.synopsis,\r\n            },\r\n          }).pipe(\r\n            pluck(\"response\", \"message\"),\r\n            map((data) => ({ ...data, typeResponse: \"handle add box\" })),\r\n            catchError(() => {\r\n              animeDetailStream.updateData({\r\n                triggerFetch: !animeDetailStream.currentState().triggerFetch,\r\n              });\r\n            })\r\n          )\r\n        )\r\n      );\r\n    })\r\n  );\r\n}\r\n\r\nexport function handleDeleteBoxMovie(\r\n  deleteMovieRef,\r\n  idCartoonUser,\r\n  malId,\r\n  isAddMode\r\n) {\r\n  return timer(0).pipe(\r\n    debounceTime(500),\r\n    filter(() => isAddMode === false && deleteMovieRef.current),\r\n    switchMap(() => {\r\n      return fromEvent(deleteMovieRef.current, \"click\").pipe(\r\n        filter(() => animeDetailStream.currentState().dataInformationAnime),\r\n        exhaustMap(() =>\r\n          ajax({\r\n            method: \"DELETE\",\r\n            url: `/api/movies/box/${malId}`,\r\n            headers: {\r\n              authorization: `Bearer ${idCartoonUser}`,\r\n            },\r\n          }).pipe(\r\n            pluck(\"response\", \"message\"),\r\n            map((data) => ({ ...data, typeResponse: \"handle delete box\" })),\r\n            catchError(() => {\r\n              animeDetailStream.updateData({\r\n                triggerFetch: !animeDetailStream.currentState().triggerFetch,\r\n              });\r\n            })\r\n          )\r\n        )\r\n      );\r\n    })\r\n  );\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\nconst initialState = {\r\n  currentPageBoxMovie: 1,\r\n  currentPageUpdatedMovie: 1,\r\n  updatedMovie: [],\r\n  boxMovie: [],\r\n  lastPageUpdatedMovie: 1,\r\n  lastPageBoxMovie: 1,\r\n  subNavToggle: null,\r\n  triggerFetch:false\r\n};\r\nconst behaviorSubject = new BehaviorSubject(initialState);\r\n\r\nlet state = initialState;\r\n\r\nconst updatedAnimeStore = {\r\n  initialState,\r\n  subscribe: (setState) => behaviorSubject.subscribe((v) => setState(v)),\r\n  currentState: () => {\r\n    let ans;\r\n    behaviorSubject.subscribe((v) => {\r\n      ans = v;\r\n    });\r\n    return ans || initialState;\r\n  },\r\n  init: () => {\r\n    behaviorSubject.next(state);\r\n  },\r\n  updateData: (data = initialState) => {\r\n    state = {\r\n      ...state,\r\n      ...data,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n  updateDataQuick: (data = initialState) => {\r\n    const keys = Object.keys(data);\r\n    keys.forEach((key) => {\r\n      state[key] = data[key];\r\n    });\r\n  },\r\n};\r\n\r\nexport default updatedAnimeStore;\r\n","import { from, of, timer } from \"rxjs\";\r\nimport { ajax } from \"rxjs/ajax\";\r\nimport {\r\n  catchError,\r\n  pluck,\r\n  retry,\r\n  switchMap,\r\n  switchMapTo,\r\n} from \"rxjs/operators\";\r\nimport updatedAnimeStore from \"../store/updatedAnime\";\r\n\r\nexport const updatedAnimeStream = updatedAnimeStore;\r\n\r\nexport const fetchUpdatedMovie$ = () => {\r\n  return timer(0).pipe(\r\n    switchMapTo(\r\n      ajax({\r\n        url:\r\n          \"/api/movies/latest?page=\" +\r\n          updatedAnimeStream.currentState().currentPageUpdatedMovie,\r\n      }).pipe(\r\n        pluck(\"response\", \"message\"),\r\n        retry(20),\r\n        catchError(() => of([]))\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport const fetchBoxMovie$ = (idCartoonUser) => {\r\n  return timer(0).pipe(\r\n    switchMap(() =>\r\n      ajax({\r\n        url:\r\n          \"/api/movies/box?page=\" +\r\n          updatedAnimeStream.currentState().currentPageBoxMovie,\r\n        headers: {\r\n          authorization: `Bearer ${idCartoonUser}`,\r\n        },\r\n      }).pipe(\r\n        pluck(\"response\", \"message\"),\r\n        retry(20),\r\n        catchError((err) => from([]))\r\n      )\r\n    )\r\n  );\r\n};\r\n","const { BehaviorSubject } = require(\"rxjs\");\r\n\r\nconst behaviorSubject = new BehaviorSubject();\r\nconst initialState = {\r\n  role: null,\r\n  page: 1,\r\n  numberDisplay: 12,\r\n  dataCharacter:[],\r\n  dataCharacterRaw: [],\r\n};\r\nlet state = initialState;\r\nconst characterStore = {\r\n  initialState,\r\n  updateData: (object = initialState) => {\r\n    state = {\r\n      ...state,\r\n      ...object\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n  init: () => {\r\n    behaviorSubject.next(state);\r\n  },\r\n  subscribe: (setState) => behaviorSubject.subscribe(setState),\r\n  currentState: () => {\r\n    let ans;\r\n    behaviorSubject.subscribe((v) => (ans = v));\r\n    return ans || initialState; \r\n  },\r\n  updateRole: (role) => {\r\n    state = {\r\n      ...state,\r\n      role: role,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n  updatePage: (page) => {\r\n    state = {\r\n      ...state,\r\n      page,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n};\r\n\r\nexport default characterStore;\r\n","import characterStore from \"../store/character\";\r\n\r\nexport const characterStream = characterStore;",null,"import { BehaviorSubject } from \"rxjs\";\r\nconst initialState = {\r\n  reviewsData: [],\r\n  pageReviewsData: 1,\r\n  pageReviewsOnDestroy: null,\r\n  isStopFetchingReviews: null,\r\n  shouldUpdatePageReviewData: false,\r\n  previousMalId: null,\r\n  pageSplit: 1,\r\n};\r\nconst behaviorSubject = new BehaviorSubject(initialState);\r\n\r\nlet state = initialState;\r\n\r\nconst reviewsStore = {\r\n  initialState,\r\n  subscribe: (setState) => behaviorSubject.subscribe((v) => setState(v)),\r\n  currentState: () => {\r\n    let ans;\r\n    behaviorSubject.subscribe((v) => {\r\n      ans = v;\r\n    });\r\n    return ans || initialState;\r\n  },\r\n  init: () => {\r\n    behaviorSubject.next(state);\r\n  },\r\n  updateData: (data = initialState) => {\r\n    state = {\r\n      ...state,\r\n      ...data,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n  updateDataQuick: (data = initialState) => {\r\n    const keys = Object.keys(data);\r\n    keys.forEach((key) => {\r\n      state[key] = data[key];\r\n    });\r\n  },\r\n};\r\n\r\n\r\nexport default reviewsStore;\r\n","import { fromEvent, iif, of, timer } from \"rxjs\";\r\nimport { ajax } from \"rxjs/ajax\";\r\nimport {\r\n  tap,\r\n  catchError,\r\n  debounceTime,\r\n  mergeMapTo,\r\n  pluck,\r\n  retry,\r\n  switchMapTo,\r\n  filter,\r\n  takeWhile,\r\n  timeout,\r\n  map,\r\n} from \"rxjs/operators\";\r\nimport cachesStore from \"../store/caches\";\r\nimport reviewsStore from \"../store/reviews\";\r\n\r\nexport const reviewsStream = reviewsStore;\r\n\r\nexport function fetchReviewsData$(malId, page, type) {\r\n  return timer(0).pipe(\r\n    filter(() => type),\r\n    tap(() => reviewsStream.updateData({ isStopFetchingReviews: false })),\r\n    switchMapTo(\r\n      iif(\r\n        () =>\r\n          cachesStore.currentState()[malId] &&\r\n          cachesStore.currentState()[malId].dataReviews,\r\n        timer(0).pipe(map(() => cachesStore.currentState()[malId].dataReviews)),\r\n        ajax(\r\n          `https://api.jikan.moe/v4/${type}/${malId}/reviews?page=${page}`\r\n        ).pipe(\r\n          pluck(\"response\", \"data\"),\r\n          retry(3),\r\n          timeout(5000),\r\n          retry(\r\n            reviewsStream.currentState().reviewsData.length === 0 ? null : 3\r\n          ),\r\n          tap(() => reviewsStream.updateData({ pageReviewsOnDestroy: page })),\r\n          catchError((error) => {\r\n            return of({ error });\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nexport function updatePageScrolling$() {\r\n  return timer(0).pipe(\r\n    mergeMapTo(\r\n      iif(\r\n        () => window.innerWidth < 770,\r\n        fromEvent(window, \"scroll\").pipe(\r\n          debounceTime(500),\r\n          takeWhile(() => !reviewsStream.currentState().isStopFetchingReviews),\r\n          filter(\r\n            () => document.body.scrollHeight - (window.scrollY + 1500) < 0\r\n          ),\r\n          tap(() => {\r\n            if (\r\n              reviewsStream.currentState().pageSplit <=\r\n              reviewsStream.currentState().reviewsData.length\r\n            )\r\n              reviewsStream.updateData({\r\n                pageSplit: reviewsStream.currentState().pageSplit + 1,\r\n              });\r\n          })\r\n        ),\r\n        fromEvent(window, \"scroll\").pipe(\r\n          takeWhile(() => !reviewsStream.currentState().isStopFetchingReviews),\r\n          filter(\r\n            () => document.body.scrollHeight - (window.scrollY + 1500) < 0\r\n          ),\r\n          tap(() => {\r\n            if (\r\n              reviewsStream.currentState().pageSplit <=\r\n              reviewsStream.currentState().reviewsData.length\r\n            )\r\n              reviewsStream.updateData({\r\n                pageSplit: reviewsStream.currentState().pageSplit + 1,\r\n              });\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { animeDetailStream } from \"../../epics/animeDetail\";\r\nimport Input from \"../Input/Input\";\r\n\r\nfunction FormSubmit({\r\n  inputEpisodeRef,\r\n  inputVideoUrlRef,\r\n  cookies,\r\n  malId,\r\n  episodeData,\r\n  typeVideoSelectRef,\r\n}) {\r\n  return (\r\n    <div className=\"form-submit\">\r\n      <select ref={typeVideoSelectRef} defaultValue=\"video\">\r\n        <option value=\"video\">video</option>\r\n        <option value=\"iframe\">iframe</option>\r\n      </select>\r\n      <select\r\n        defaultValue=\"vi\"\r\n        className=\"select-language-anime\"\r\n        onChange={(e) => {\r\n          const languageSelect = e.target;\r\n          const value = languageSelect.value;\r\n          const modeAnime = document.querySelector(\".select-mode-anime\");\r\n          // console.log(value);\r\n          if (value === \"eng\") {\r\n            modeAnime.style.display = \"block\";\r\n          } else {\r\n            modeAnime.style.display = \"none\";\r\n          }\r\n        }}\r\n      >\r\n        <option value=\"eng\">Eng</option>\r\n        <option value=\"vi\">Vi</option>\r\n      </select>\r\n      <select\r\n        defaultValue=\"sub\"\r\n        className=\"select-mode-anime\"\r\n        style={{ display: \"none\" }}\r\n      >\r\n        <option value=\"sub\">Sub</option>\r\n        <option value=\"dub\">Dub</option>\r\n      </select>\r\n      <Input label=\"Number\" type=\"number\" input={inputEpisodeRef} />\r\n      <Input label={\"Video url\"} input={inputVideoUrlRef} />\r\n      <button\r\n        className=\"btn btn-success\"\r\n        type=\"submit\"\r\n        onClick={async () => {\r\n          const episode = parseInt(inputEpisodeRef.current.value);\r\n          const embedUrl = inputVideoUrlRef.current.value;\r\n          const typeVideo = typeVideoSelectRef.current.value === \"video\";\r\n          const language = document.querySelector(\r\n            \".select-language-anime\"\r\n          ).value;\r\n          const isDub =\r\n            document.querySelector(\".select-mode-anime\").value === \"dub\";\r\n          const { idCartoonUser } = cookies;\r\n          if (isNaN(episode) || !embedUrl || embedUrl.trim() === \"\") {\r\n            alert(\"Episode and Url are required\");\r\n            return;\r\n          }\r\n          try {\r\n            const res = await fetch(\r\n              `/api/movies/${malId}/episode/${episode}/${language}/${isDub}`,\r\n              {\r\n                method:\"PUT\",\r\n                body: JSON.stringify({\r\n                  embedUrl,\r\n                  typeVideo,\r\n                }),\r\n\r\n                headers: {\r\n                  authorization: `Bearer ${idCartoonUser}`,\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              }\r\n            );\r\n            const resJson = await res.json();\r\n            if (resJson.error) throw Error(\"Some thing went wrong\");\r\n            const data = episodeData;\r\n            if (language === \"vi\") {\r\n              animeDetailStream.updateData({\r\n                dataEpisodesAnime: {\r\n                  ...data,\r\n                  episodes: resJson,\r\n                },\r\n              });\r\n            }\r\n            if (language === \"eng\") {\r\n              if (isDub) {\r\n                animeDetailStream.updateData({\r\n                  dataEpisodesAnime: {\r\n                    ...data,\r\n                    episodesEngDub: resJson,\r\n                  },\r\n                });\r\n              } else {\r\n                animeDetailStream.updateData({\r\n                  dataEpisodesAnime: {\r\n                    ...data,\r\n                    episodesEng: resJson,\r\n                  },\r\n                });\r\n              }\r\n            }\r\n            inputEpisodeRef.current.value = \"\";\r\n            inputVideoUrlRef.current.value = \"\";\r\n          } catch (error) {\r\n            alert(\"Something went wrong\");\r\n          }\r\n        }}\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormSubmit;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { animeDetailStream } from \"../../epics/animeDetail\";\r\nimport { updatedAnimeStream } from \"../../epics/updatedAnime\";\r\nimport Input from \"../Input/Input\";\r\n\r\nfunction FormSubmitCrawl({\r\n  startEpisodeInputRef,\r\n  endEpisodeInputRef,\r\n  linkWatchingInputRef,\r\n  buttonSubmitCrawlInputRef,\r\n  selectCrawlInputRef,\r\n  malId,\r\n  cookies,\r\n  selectModeEngVideoRef,\r\n}) {\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    buttonSubmitCrawlInputRef.current.disabled = false;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [malId]);\r\n  return (\r\n    <div className=\"form-submit\">\r\n      <select defaultValue=\"gogostream\" ref={selectCrawlInputRef}>\r\n        <option value=\"gogostream\">gogostream</option>\r\n      </select>\r\n      <select defaultValue=\"sub\" ref={selectModeEngVideoRef}>\r\n        <option value=\"sub\">Sub</option>\r\n        <option value=\"dub\">Dub</option>\r\n      </select>\r\n      <div className=\"form-limit-episode\">\r\n        <Input\r\n          label=\"start\"\r\n          type=\"number\"\r\n          input={startEpisodeInputRef}\r\n          error={error}\r\n        />\r\n        <Input label=\"end\" type=\"number\" input={endEpisodeInputRef} />\r\n      </div>\r\n      <Input label=\"Watch Url\" input={linkWatchingInputRef} />\r\n      <button\r\n        className=\"btn btn-success\"\r\n        ref={buttonSubmitCrawlInputRef}\r\n        onClick={async () => {\r\n          const start = startEpisodeInputRef.current.value;\r\n          const end = endEpisodeInputRef.current.value;\r\n          const url = linkWatchingInputRef.current.value;\r\n          const serverWeb = selectCrawlInputRef.current.value;\r\n          const isDub = selectModeEngVideoRef.current\r\n            ? selectModeEngVideoRef.current.value === \"dub\"\r\n            : false;\r\n          // console.log(isDub);\r\n          switch (serverWeb) {\r\n            case \"gogostream\":\r\n              if (\r\n                !url.includes(\"gogo-stream.com/videos/\") ||\r\n                (!/-dub-episode-[0-9]+/.test(url) && isDub === true) ||\r\n                (/-dub-episode-[0-9]+/.test(url) && isDub === false)\r\n              ) {\r\n                return alert(\"Invalid url\");\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          if (\r\n            startEpisodeInputRef.current.value.trim() === \"\" ||\r\n            !startEpisodeInputRef.current.value ||\r\n            endEpisodeInputRef.current.value.trim() === \"\" ||\r\n            !endEpisodeInputRef.current.value ||\r\n            linkWatchingInputRef.current.value.trim() === \"\" ||\r\n            !linkWatchingInputRef.current.value\r\n          ) {\r\n            alert(\"start, end and watch url are required\");\r\n            return;\r\n          }\r\n          try {\r\n            buttonSubmitCrawlInputRef.current.disabled = true;\r\n            let updateMovie = await fetch(\r\n              `/api/movies/${malId}/episodes/crawl`,\r\n              {\r\n                method: \"PUT\",\r\n                body: JSON.stringify({\r\n                  start,\r\n                  end,\r\n                  url,\r\n                  serverWeb,\r\n                  isDub,\r\n                }),\r\n                headers: {\r\n                  authorization: `Bearer ${cookies.idCartoonUser}`,\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              }\r\n            );\r\n\r\n            updateMovie = await updateMovie.json();\r\n            if (updateMovie.error) throw Error(updateMovie.error);\r\n\r\n            if (\r\n              startEpisodeInputRef.current &&\r\n              endEpisodeInputRef.current &&\r\n              buttonSubmitCrawlInputRef.current &&\r\n              linkWatchingInputRef.current\r\n            ) {\r\n              animeDetailStream.updateData({\r\n                dataEpisodesAnime: updateMovie.message,\r\n              });\r\n              setError(null);\r\n              startEpisodeInputRef.current.value = \"\";\r\n              endEpisodeInputRef.current.value = \"\";\r\n              buttonSubmitCrawlInputRef.current.disabled = false;\r\n              linkWatchingInputRef.current &&\r\n                (linkWatchingInputRef.current.value =\r\n                  updateMovie.message.source || \"\");\r\n            }\r\n          } catch (error) {\r\n            if (error) setError(error);\r\n\r\n            if (\r\n              startEpisodeInputRef.current &&\r\n              endEpisodeInputRef.current &&\r\n              linkWatchingInputRef.current\r\n            ) {\r\n              startEpisodeInputRef.current.value = \"\";\r\n              endEpisodeInputRef.current.value = \"\";\r\n              linkWatchingInputRef.current &&\r\n                (buttonSubmitCrawlInputRef.current.disabled = false);\r\n            }\r\n          }\r\n          updatedAnimeStream.updateData({\r\n            triggerFetch: !updatedAnimeStream.currentState().triggerFetch,\r\n          });\r\n        }}\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default FormSubmitCrawl;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction ListVideoUrl({ episodeData, malId, keyListEpisode }) {\r\n  return (\r\n    <div className={\"list-video-url\"}>\r\n      {episodeData &&\r\n        episodeData\r\n          .map((data) => ({\r\n            ...data,\r\n            episode: data.episode,\r\n          }))\r\n          .slice(episodeData.length - 6, episodeData.length)\r\n          .reverse()\r\n          .map((episode, index) => {\r\n            return (\r\n              <Link\r\n                key={index}\r\n                // href={episode.embedUrl}\r\n                to={`/anime/${malId}/watch/${episode.episode}/${\r\n                  keyListEpisode.replace(\"episodes\", \"\") === \"\"\r\n                    ? \"vie\"\r\n                    : keyListEpisode.replace(\"episodes\", \"\")\r\n                }`}\r\n              >\r\n                {episode.episode}\r\n              </Link>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n}\r\nexport default ListVideoUrl","import React from \"react\";\r\n\r\nfunction MenuTable({ elementTitle, toggleNavTitle }) {\r\n  return (\r\n    <div\r\n      className=\"tag-scrolling-nav\"\r\n      style={{\r\n        maxHeight: toggleNavTitle ? \"2000px\" : \"0\",\r\n        boxShadow: toggleNavTitle ? \"0 0 4px 1px white\" : \"none\",\r\n      }}\r\n    >\r\n      {elementTitle &&\r\n        elementTitle.slice(1, elementTitle.length).map((e, key) => (\r\n          <div\r\n            key={key}\r\n            className=\"tag-scrolling-nav_item\"\r\n            onClick={() => {\r\n              e.scrollIntoView({\r\n                behavior: \"smooth\",\r\n              });\r\n            }}\r\n          >\r\n            {e.innerText}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuTable;","import { useEffect } from \"react\";\r\nimport {\r\n  fetchBoxMovieOneMovie,\r\n  fetchData,\r\n  initAnimeDetailState,\r\n} from \"../Functions/animeDetail\";\r\n\r\nexport const useInitAnimeDetailState = (setNameState) => {\r\n  useEffect(initAnimeDetailState(setNameState), []);\r\n};\r\n\r\nexport const useFetchData = (\r\n  setShowThemeMusic,\r\n  linkWatchingInputRef,\r\n  malId,\r\n  type\r\n) => {\r\n  useEffect(\r\n    fetchData(\r\n      malId,\r\n      linkWatchingInputRef.current,\r\n      setShowThemeMusic,\r\n      type\r\n    ),\r\n    [malId, linkWatchingInputRef.current]\r\n  );\r\n};\r\n\r\nexport const useFetchBoxMovieOneMovie = (\r\n  { idCartoonUser },\r\n  malId,\r\n  addMovieRef,\r\n  deleteMovieRef,\r\n  isAddMode,\r\n  triggerFetch\r\n) => {\r\n  useEffect(\r\n    fetchBoxMovieOneMovie(\r\n      malId,\r\n      idCartoonUser,\r\n      addMovieRef,\r\n      deleteMovieRef,\r\n      isAddMode\r\n    ),\r\n    [idCartoonUser, malId, isAddMode, triggerFetch]\r\n  );\r\n};\r\n","import { from, of } from \"rxjs\";\r\nimport { catchError, concatAll, map, switchMap, tap } from \"rxjs/operators\";\r\n\r\nimport {\r\n  animeDetailStream,\r\n  fetchAnimeExternal$,\r\n  fetchAnimeRecommendation$,\r\n  fetchAnimeThemes$,\r\n  fetchBoxMovieOneMovie$,\r\n  fetchData$,\r\n  fetchDataCharacter$,\r\n  fetchDataVideo$,\r\n  fetchEpisodeDataVideo$,\r\n  fetchLargePicture$,\r\n  handleAddBoxMovie,\r\n  handleDeleteBoxMovie,\r\n} from \"../epics/animeDetail\";\r\nimport { characterStream } from \"../epics/character\";\r\nimport { fetchReviewsData$, reviewsStream } from \"../epics/reviews\";\r\nimport cachesStore from \"../store/caches\";\r\n\r\nexport const initAnimeDetailState = (setNameState) => {\r\n  return () => {\r\n    const subscription2 = animeDetailStream.subscribe(setNameState);\r\n    // window.scroll({ top: 0 });\r\n    return () => {\r\n      document.title = `My Anime Fun - Watch latest anime in high quality`;\r\n      subscription2.unsubscribe();\r\n    };\r\n  };\r\n};\r\n\r\nexport const fetchData = (\r\n  malId,\r\n  linkWatchingInputElement,\r\n  setShowThemeMusic,\r\n  type\r\n) => {\r\n  return () => {\r\n    const fetchDataInfo$ = fetchData$(malId, type);\r\n    const fetchDataVideoPromo$ = fetchDataVideo$(malId, type).pipe(\r\n      tap((data) => {\r\n        if (!data || data.error) return;\r\n        const { promo } = data;\r\n        if (promo) {\r\n          animeDetailStream.updateData({\r\n            dataVideoPromo: promo,\r\n          });\r\n          cachesStore.updateData({\r\n            ...cachesStore.currentState(),\r\n            [malId]: {\r\n              ...cachesStore.currentState()[malId],\r\n              dataVideoPromo: data,\r\n            },\r\n          });\r\n        }\r\n        animeDetailStream.updateIsLoading(false, \"isLoadingVideoAnime\");\r\n      })\r\n    );\r\n    const fetchLargePictureUrl$ = fetchLargePicture$(malId, type).pipe(\r\n      tap(({ pictures, error }) => {\r\n        if (error) {\r\n          animeDetailStream.updateData({ isLoadingLargePicture: false });\r\n          return;\r\n        }\r\n        try {\r\n          cachesStore.updateData({\r\n            ...cachesStore.currentState(),\r\n            [malId]: {\r\n              ...cachesStore.currentState()[malId],\r\n              dataLargePictureList: { pictures: [...pictures] },\r\n            },\r\n          });\r\n          animeDetailStream.updateData({\r\n            dataLargePictureList: pictures.reverse(),\r\n            isLoadingLargePicture: false,\r\n          });\r\n          if (animeDetailStream.currentState().dataLargePictureList[0])\r\n            document.body.style.backgroundImage = `url(${\r\n              animeDetailStream.currentState().dataLargePictureList[0]\r\n            })`;\r\n          else document.body.style.backgroundImage = `url(/background.jpg)`;\r\n\r\n          document.body.style.backgroundSize = \"contain\";\r\n        } catch (error) {\r\n          document.body.style.backgroundImage = `url(/background.jpg)`;\r\n          animeDetailStream.updateData({ isLoadingLargePicture: false });\r\n          console.log(error);\r\n        }\r\n      })\r\n    );\r\n    const fetchEpisodesUrlSub = fetchEpisodeDataVideo$(malId, type)\r\n      .pipe(\r\n        tap((api) => {\r\n          if (!api.error) {\r\n            animeDetailStream.updateIsLoading(false, \"isLoadingEpisode\");\r\n            if (linkWatchingInputElement)\r\n              linkWatchingInputElement.value = api.message.source;\r\n            animeDetailStream.updateData({\r\n              dataEpisodesAnime: api.message,\r\n            });\r\n          } else {\r\n            animeDetailStream.updateIsLoading(false, \"isLoadingEpisode\");\r\n            animeDetailStream.updateData({\r\n              dataEpisodesAnime: {},\r\n            });\r\n          }\r\n        })\r\n      )\r\n      .subscribe();\r\n    const fetchAnimeAppears$ = fetchAnimeRecommendation$(malId, type).pipe(\r\n      tap((data) => {\r\n        animeDetailStream.updateIsLoading(false, \"isLoadingRelated\");\r\n        if (!data || data.error) return;\r\n        const handledData = data.map(({ entry, votes }) => ({\r\n          ...entry,\r\n          recommendation_count: votes,\r\n        }));\r\n        animeDetailStream.updateData({\r\n          dataRelatedAnime: handledData,\r\n        });\r\n        cachesStore.updateData({\r\n          ...cachesStore.currentState(),\r\n          [malId]: {\r\n            ...cachesStore.currentState()[malId],\r\n            dataRelatedAnime: data,\r\n          },\r\n        });\r\n      })\r\n    );\r\n    const fetchCharacters$ = fetchDataCharacter$(malId, type).pipe(\r\n      tap((data) => {\r\n        animeDetailStream.updateIsLoading(false, \"isLoadingCharacter\");\r\n        if (!data || data.error) return;\r\n        characterStream.updateData({\r\n          dataCharacter: data,\r\n          dataCharacterRaw: data,\r\n          page: 1,\r\n        });\r\n        cachesStore.updateData({\r\n          [malId]: {\r\n            ...cachesStore.currentState()[malId],\r\n            dataCharacter: data,\r\n          },\r\n        });\r\n      })\r\n    );\r\n    const fetchInformation$ = from([\r\n      fetchDataInfo$.pipe(\r\n        map((data) => {\r\n          return { ...data, type_data: \"data info\" };\r\n        }),\r\n        catchError(() => {\r\n          return of({ error: \"something went wrong\" });\r\n        })\r\n      ),\r\n      fetchAnimeThemes$(malId, type).pipe(\r\n        map((data) => ({ ...data, type_data: \"themes\" })),\r\n        catchError(() => {\r\n          return of({ error: \"something went wrong\" });\r\n        })\r\n      ),\r\n      fetchAnimeExternal$(malId, type).pipe(\r\n        map((data) => ({ ...data, type_data: \"externals\" })),\r\n        catchError(() => {\r\n          return of({ error: \"something went wrong\" });\r\n        })\r\n      ),\r\n    ]).pipe(\r\n      concatAll(),\r\n      tap((data) => {\r\n        if (!data || data.error) return;\r\n        let object = {};\r\n        switch (data.type_data) {\r\n          case \"data info\":\r\n            object = {\r\n              opening_themes: \"\",\r\n              ending_themes: \"\",\r\n              external_links: {},\r\n              broadcast:\r\n                data.broadcast && data.broadcast.day\r\n                  ? [\r\n                      `Day: ${data.broadcast.day}`,\r\n                      `Time: ${data.broadcast.time}`,\r\n                      `Timezone: ${data.broadcast.timezone}`,\r\n                      `String: ${data.broadcast.string}`,\r\n                    ]\r\n                  : null,\r\n            };\r\n            cachesStore.updateData({\r\n              [malId]: {\r\n                ...cachesStore.currentState()[malId],\r\n                dataInfo: data,\r\n              },\r\n            });\r\n            animeDetailStream.updateData({\r\n              dataInformationAnime: { ...data, ...object },\r\n            });\r\n            document.title =\r\n              data.title || `My Anime Fun - Watch latest anime in high quality`;\r\n            break;\r\n          case \"themes\":\r\n            object = {\r\n              opening_themes: data.openings,\r\n              ending_themes: data.endings,\r\n            };\r\n            animeDetailStream.updateData({\r\n              dataInformationAnime: {\r\n                ...animeDetailStream.currentState().dataInformationAnime,\r\n                ...object,\r\n              },\r\n            });\r\n            cachesStore.updateData({\r\n              [malId]: {\r\n                ...cachesStore.currentState()[malId],\r\n                themes: data,\r\n              },\r\n            });\r\n            if (\r\n              (data && data.openings && data.openings.length > 3) ||\r\n              (data && data.endings && data.endings.length > 3)\r\n            ) {\r\n              setShowThemeMusic(false);\r\n            } else {\r\n              setShowThemeMusic(true);\r\n            }\r\n            break;\r\n          case \"externals\":\r\n            object = {\r\n              external_links: data,\r\n            };\r\n            cachesStore.updateData({\r\n              [malId]: {\r\n                ...cachesStore.currentState()[malId],\r\n                externals: data,\r\n              },\r\n            });\r\n            animeDetailStream.updateData({\r\n              dataInformationAnime: {\r\n                ...animeDetailStream.currentState().dataInformationAnime,\r\n                ...object,\r\n              },\r\n              isLoadingInfoAnime: false,\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      })\r\n    );\r\n    let subscription;\r\n    if (animeDetailStream.currentState().malId !== malId) {\r\n      window.scroll({\r\n        top: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n      animeDetailStream.resetState();\r\n      subscription = from([\r\n        fetchLargePictureUrl$,\r\n        fetchInformation$,\r\n        fetchCharacters$,\r\n        fetchAnimeAppears$,\r\n        fetchDataVideoPromo$,\r\n        fetchReviewsData$(\r\n          malId,\r\n          reviewsStream.currentState().pageReviewsData,\r\n          type\r\n        )\r\n          .pipe(\r\n            tap((v) => {\r\n              if (v && !v.error) {\r\n                cachesStore.updateData({\r\n                  dataReviews: v,\r\n                });\r\n                let updatedAnime;\r\n                if (\r\n                  reviewsStream.currentState().reviewsData.length === 0 ||\r\n                  reviewsStream.currentState().previousMalId !== malId\r\n                ) {\r\n                  updatedAnime = v;\r\n                } else {\r\n                  updatedAnime = reviewsStream\r\n                    .currentState()\r\n                    .reviewsData.concat(v);\r\n                }\r\n                if (v.length === 0) {\r\n                  reviewsStream.updateData({ isStopFetchingReviews: true });\r\n                  return;\r\n                }\r\n                reviewsStream.updateData({\r\n                  reviewsData: updatedAnime,\r\n                  previousMalId: malId,\r\n                  pageReviewsOnDestroy:\r\n                    reviewsStream.currentState().pageReviewsData,\r\n                  shouldUpdatePageReviewData: true,\r\n                });\r\n                if (updatedAnime.length > 0)\r\n                  animeDetailStream.updateData({\r\n                    malId: animeDetailStream.currentState().malId,\r\n                  });\r\n              } else {\r\n                reviewsStream.updateData({\r\n                  isStopFetchingReviews: true,\r\n                  shouldUpdatePageReviewData: false,\r\n                });\r\n              }\r\n            })\r\n          )\r\n          .pipe(\r\n            tap(() => {\r\n              // console.log(\"done\");\r\n              animeDetailStream.updateData({ malId });\r\n            })\r\n          ),\r\n      ])\r\n        .pipe(concatAll())\r\n        .subscribe(() => {});\r\n    }\r\n    return () => {\r\n      linkWatchingInputElement && (linkWatchingInputElement.value = \"\");\r\n      fetchEpisodesUrlSub.unsubscribe();\r\n      subscription && subscription.unsubscribe();\r\n      setShowThemeMusic(false);\r\n    };\r\n  };\r\n};\r\n\r\nexport const fetchBoxMovieOneMovie = (\r\n  malId,\r\n  idCartoonUser,\r\n  addMovieRef,\r\n  deleteMovieRef,\r\n  isAddMode\r\n) => {\r\n  return () => {\r\n    const subscription = fetchBoxMovieOneMovie$(malId, idCartoonUser)\r\n      .pipe(\r\n        switchMap((api) => {\r\n          if (!api.error) {\r\n            animeDetailStream.updateData({ isAddMode: false });\r\n            return handleDeleteBoxMovie(\r\n              deleteMovieRef,\r\n              idCartoonUser,\r\n              malId,\r\n              isAddMode\r\n            );\r\n          } else {\r\n            animeDetailStream.updateData({ isAddMode: true });\r\n            return handleAddBoxMovie(addMovieRef, idCartoonUser, isAddMode);\r\n          }\r\n        })\r\n      )\r\n      .subscribe((api) => {\r\n        switch (api.typeResponse) {\r\n          case \"handle add box\":\r\n            animeDetailStream.updateData({\r\n              isAddMode: false,\r\n            });\r\n            break;\r\n          default:\r\n            animeDetailStream.updateData({\r\n              isAddMode: true,\r\n            });\r\n            break;\r\n        }\r\n      });\r\n    return () => {\r\n      subscription && subscription.unsubscribe();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    };\r\n  };\r\n};\r\n","import \"./AnimeDetail.css\";\r\n\r\nimport loadable from \"@loadable/component\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ajax } from \"rxjs/ajax\";\r\n\r\nimport FormSubmit from \"../../components/FormSubmit/FormSubmit\";\r\nimport FormSubmitCrawl from \"../../components/FormSubmitCrawl/FormSubmitCrawl\";\r\nimport ListVideoUrl from \"../../components/ListVideoUrl/ListVideoUrl\";\r\nimport MenuTable from \"../../components/MenuTable/MenuTable\";\r\nimport { animeDetailStream } from \"../../epics/animeDetail\";\r\nimport { userStream } from \"../../epics/user\";\r\nimport {\r\n  useFetchBoxMovieOneMovie,\r\n  useFetchData,\r\n  useInitAnimeDetailState,\r\n} from \"../../Hook/animeDetail\";\r\n\r\nconst ListInformation = loadable(() =>\r\n  import(\"../../components/ListInformation/ListInformation\")\r\n);\r\n\r\nconst ListImageAnimeDetail = loadable(() =>\r\n  import(\"../../components/ListImageAnimeDetail/ListImageAnimeDetail\")\r\n);\r\n\r\nconst Characters = loadable(() =>\r\n  import(\"../../components/Characters/Characters\")\r\n);\r\nconst VideoPromotionList = loadable(() =>\r\n  import(\"../../components/VideoPromotionList/VideoPromotionList\")\r\n);\r\n\r\nconst RelatedAnime = loadable(() =>\r\n  import(\"../../components/RelatedAnime/RelatedAnime\")\r\n);\r\nconst Reviews = loadable(() => import(\"../../components/Reviews/Reviews\"));\r\n\r\nconst AnimeDetail = (props) => {\r\n  const { name } = props.match.params;\r\n  const type = props.match.path.split(\"/\")[1];\r\n  const malId = parseInt(name);\r\n  const user = userStream.currentState();\r\n  const [cookies] = useCookies();\r\n  const [animeDetailState, setAnimeDetailState] = useState(\r\n    animeDetailStream.currentState()\r\n  );\r\n  const [showThemeMusic, setShowThemeMusic] = useState(false);\r\n  const [toggleNavTitle, setToggleNavTitle] = useState(false);\r\n  const [elementTitle, setElementTitle] = useState([]);\r\n\r\n  const selectModeEngVideoRef = useRef();\r\n  const deleteMovieRef = useRef();\r\n  const addMovieRef = useRef();\r\n  const inputVideoUrlRef = useRef();\r\n  const inputEpisodeRef = useRef();\r\n  const startEpisodeInputRef = useRef();\r\n  const endEpisodeInputRef = useRef();\r\n  const linkWatchingInputRef = useRef();\r\n  const buttonSubmitCrawlInputRef = useRef();\r\n  const selectCrawlInputRef = useRef();\r\n  const buttonDeleteCrawlInputRef = useRef();\r\n  const typeVideoSelectRef = useRef();\r\n  const [isSendingRequest, setIsSendingRequest] = useState(false);\r\n  useEffect(() => {\r\n    if (animeDetailState.dataLargePictureList[0]) {\r\n      document.body.style.backgroundImage = `url(${animeDetailState.dataLargePictureList[0]})`;\r\n      document.body.style.backgroundSize = \"contain\";\r\n    }\r\n    return () => {\r\n      document.body.style.backgroundImage = `url(/background.jpg)`;\r\n      document.body.style.backgroundSize = \"cover\";\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useInitAnimeDetailState(setAnimeDetailState);\r\n  useFetchData(setShowThemeMusic, linkWatchingInputRef, malId, type);\r\n  useFetchBoxMovieOneMovie(\r\n    cookies,\r\n    malId,\r\n    addMovieRef,\r\n    deleteMovieRef,\r\n    animeDetailState.isAddMode,\r\n    animeDetailState.triggerFetch\r\n  );\r\n  useEffect(() => {\r\n    const { dataInformationAnime } = animeDetailStream.currentState();\r\n    const { opening_themes, ending_themes } = dataInformationAnime;\r\n    if (\r\n      ending_themes &&\r\n      opening_themes &&\r\n      ending_themes.length <= 3 &&\r\n      opening_themes.length <= 3\r\n    )\r\n      setShowThemeMusic(true);\r\n  }, [malId, showThemeMusic]);\r\n  const arrayTagTitle = document.querySelectorAll(\".title\") || [];\r\n  const a = [...arrayTagTitle];\r\n  useEffect(() => {\r\n    setElementTitle(a);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [a.length, malId, elementTitle.length]);\r\n  var { episodeDataDisplay, arrKeys, sourceFilmList } = deformData(\r\n    animeDetailState,\r\n    showThemeMusic\r\n  );\r\n  // console.log(cachesStore.currentState())\r\n  return (\r\n    animeDetailState.dataInformationAnime && (\r\n      <div className=\"anime-name-info layout\">\r\n        <h1 className=\"title\">{animeDetailState.dataInformationAnime.title}</h1>\r\n        {animeDetailState.isLoadingLargePicture !== null &&\r\n          animeDetailState.isLoadingLargePicture === true && (\r\n            <CircularProgress color=\"secondary\" size=\"4rem\" />\r\n          )}\r\n        <div className=\"image\">\r\n          {animeDetailState.dataLargePictureList.length > 1 && (\r\n            <ListImageAnimeDetail\r\n              listImage={animeDetailState.dataLargePictureList}\r\n              isLoading={animeDetailState.isLoadingLargePicture}\r\n            />\r\n          )}\r\n          {animeDetailState.dataLargePictureList.length === 1 && (\r\n            <img\r\n              src={animeDetailState.dataLargePictureList[0]}\r\n              alt={\"image_anime\"}\r\n              style={{\r\n                width: \"100%\",\r\n              }}\r\n            ></img>\r\n          )}\r\n          {animeDetailState.dataLargePictureList.length < 1 &&\r\n            animeDetailState.dataInformationAnime.images && (\r\n              <img\r\n                src={\r\n                  animeDetailState.dataInformationAnime.images.jpg\r\n                    .large_image_url\r\n                }\r\n                alt={\"image_anime\"}\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n              ></img>\r\n            )}\r\n        </div>\r\n        <MenuTable\r\n          elementTitle={elementTitle}\r\n          toggleNavTitle={toggleNavTitle}\r\n        />\r\n        <div className=\"menu-control\">\r\n          {episodeDataDisplay && episodeDataDisplay.episodeList.length > 0 && (\r\n            <Link\r\n              to={\r\n                \"/anime/\" +\r\n                malId +\r\n                `/watch/${episodeDataDisplay.episodeList[0].episode}/${\r\n                  episodeDataDisplay.key.replace(\"episodes\", \"\") === \"\"\r\n                    ? \"vie\"\r\n                    : episodeDataDisplay.key.replace(\"episodes\", \"\")\r\n                }`\r\n              }\r\n            >\r\n              <button className=\"btn btn-success\">Watch</button>\r\n            </Link>\r\n          )}\r\n          {user && !animeDetailState.isLoadingLargePicture && (\r\n            <span style={{ display: \"inline\" }}>\r\n              {animeDetailState.isAddMode === true && (\r\n                <button className=\"btn btn-primary\" ref={addMovieRef}>\r\n                  Add to Box\r\n                </button>\r\n              )}\r\n              {animeDetailState.isAddMode === false && (\r\n                <button ref={deleteMovieRef} className=\"btn btn-danger\">\r\n                  Delete from Box\r\n                </button>\r\n              )}\r\n            </span>\r\n          )}\r\n          {!animeDetailState.isLoadingLargePicture && (\r\n            <button\r\n              disabled={isSendingRequest}\r\n              className=\"btn btn-request\"\r\n              onClick={() => {\r\n                if (\r\n                  animeDetailState.dataInformationAnime.status ===\r\n                  \"Not yet aired\"\r\n                ) {\r\n                  return alert(\"This anime is not aired yet\");\r\n                }\r\n                if (\r\n                  animeDetailState.dataInformationAnime.episodes ===\r\n                  episodeDataDisplay.episodeList.length\r\n                ) {\r\n                  return alert(\"This anime has been updated\");\r\n                }\r\n                if (\r\n                  user &&\r\n                  (animeDetailState.dataInformationAnime.status ===\r\n                    \"Currently Airing\" ||\r\n                    animeDetailState.dataInformationAnime.status ===\r\n                      \"Finished Airing\") &&\r\n                  animeDetailState.dataInformationAnime.episodes !==\r\n                    episodeDataDisplay.episodeList.length\r\n                ) {\r\n                  const { dataInformationAnime } = animeDetailState;\r\n                  setIsSendingRequest(true);\r\n                  ajax({\r\n                    url: \"/api/movies/request\",\r\n                    method: \"POST\",\r\n                    headers: {\r\n                      authorization: `Bearer ${cookies.idCartoonUser}`,\r\n                    },\r\n                    body: {\r\n                      malId: malId.toString(),\r\n                      title: dataInformationAnime.title,\r\n                      imageUrl:\r\n                        dataInformationAnime.images.webp.large_image_url ||\r\n                        dataInformationAnime.images.jpg.large_image_url ||\r\n                        dataInformationAnime.image_url,\r\n                      score: dataInformationAnime.score,\r\n                      synopsis: dataInformationAnime.synopsis,\r\n                    },\r\n                  }).subscribe((res) => {\r\n                    if (!res.error) {\r\n                      alert(\"Your request has been filed\");\r\n                      setIsSendingRequest(false);\r\n                    }\r\n                  });\r\n                } else {\r\n                  alert(\"require Login\");\r\n                }\r\n              }}\r\n            >\r\n              Request\r\n            </button>\r\n          )}\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            onClick={() => {\r\n              setToggleNavTitle(!toggleNavTitle);\r\n            }}\r\n          >\r\n            Shortcut\r\n          </button>\r\n        </div>\r\n        <div className=\"box\">\r\n          <div className=\"box-info\">\r\n            <h1\r\n              style={{\r\n                margin: \"0\",\r\n              }}\r\n              className=\"title\"\r\n            >\r\n              About\r\n            </h1>\r\n            <ListInformation\r\n              arrKeys={arrKeys}\r\n              isLoading={animeDetailState.isLoadingInfoAnime}\r\n              type={type}\r\n            />\r\n            {!showThemeMusic &&\r\n              animeDetailState.isLoadingInfoAnime === false &&\r\n              type === \"anime\" && (\r\n                <button\r\n                  className=\"button-show-more-information\"\r\n                  onClick={() => {\r\n                    setShowThemeMusic(true);\r\n                  }}\r\n                >\r\n                  Show More Information\r\n                </button>\r\n              )}\r\n          </div>\r\n          <div className=\"box-content\">\r\n            <h1 style={{ margin: \"0\" }} className=\"title\">\r\n              Synopsis\r\n            </h1>\r\n            <div className=\"content\">\r\n              {animeDetailState.dataInformationAnime.synopsis ||\r\n                \"(No synopsis added yet)\"}\r\n            </div>\r\n            {animeDetailState.dataInformationAnime.background && (\r\n              <div>\r\n                <h1 style={{ marginBottom: \"0\" }} className=\"title\">\r\n                  Background\r\n                </h1>\r\n                <div className=\"content\">\r\n                  {animeDetailState.dataInformationAnime.background}\r\n                </div>\r\n              </div>\r\n            )}\r\n            {animeDetailState.isLoadingEpisode !== null &&\r\n              animeDetailState.isLoadingEpisode === true && (\r\n                <div>\r\n                  <CircularProgress color=\"secondary\" size=\"4rem\" />\r\n                </div>\r\n              )}\r\n            {animeDetailState.isLoadingEpisode === false &&\r\n              type === \"anime\" &&\r\n              episodeDataDisplay &&\r\n              episodeDataDisplay.episodeList.length > 0 && (\r\n                <div>\r\n                  <h1 className=\"title\">Latest Episodes</h1>\r\n                  <ListVideoUrl\r\n                    episodeData={episodeDataDisplay.episodeList}\r\n                    malId={malId}\r\n                    keyListEpisode={episodeDataDisplay.key}\r\n                  />\r\n                </div>\r\n              )}\r\n            {user && user.role === \"Admin\" && (\r\n              <div className=\"admin-section\">\r\n                <h1 className=\"title\">Adding episode url</h1>\r\n                <FormSubmit\r\n                  inputEpisodeRef={inputEpisodeRef}\r\n                  inputVideoUrlRef={inputVideoUrlRef}\r\n                  cookies={cookies}\r\n                  malId={malId}\r\n                  episodeData={animeDetailState.dataEpisodesAnime}\r\n                  typeVideoSelectRef={typeVideoSelectRef}\r\n                />\r\n                <h1 className=\"title\">Crawl episode</h1>\r\n                <ul>\r\n                  {sourceFilmList &&\r\n                    sourceFilmList.map((sourceFilmKey, index) => (\r\n                      <li key={index}>\r\n                        {sourceFilmKey}:{\" \"}\r\n                        {\r\n                          animeDetailState.dataEpisodesAnime.sourceFilmList[\r\n                            sourceFilmKey\r\n                          ]\r\n                        }\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n                <FormSubmitCrawl\r\n                  buttonSubmitCrawlInputRef={buttonSubmitCrawlInputRef}\r\n                  endEpisodeInputRef={endEpisodeInputRef}\r\n                  startEpisodeInputRef={startEpisodeInputRef}\r\n                  linkWatchingInputRef={linkWatchingInputRef}\r\n                  selectCrawlInputRef={selectCrawlInputRef}\r\n                  malId={malId}\r\n                  cookies={cookies}\r\n                  selectModeEngVideoRef={selectModeEngVideoRef}\r\n                />\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  ref={buttonDeleteCrawlInputRef}\r\n                  onClick={async () => {\r\n                    buttonDeleteCrawlInputRef.current.disabled = true;\r\n                    try {\r\n                      await fetch(`/api/movies/${malId}`, {\r\n                        method: \"DELETE\",\r\n                        headers: {\r\n                          authorization: `Bearer ${cookies.idCartoonUser}`,\r\n                        },\r\n                      });\r\n                      animeDetailStream.updateData({\r\n                        dataEpisodesAnime: {},\r\n                      });\r\n                      buttonDeleteCrawlInputRef.current.disabled = false;\r\n                    } catch (error) {\r\n                      buttonDeleteCrawlInputRef.current.disabled = false;\r\n                    }\r\n                  }}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Characters\r\n          lazy={true}\r\n          isLoading={animeDetailState.isLoadingCharacter}\r\n        />\r\n        <RelatedAnime\r\n          isLoading={animeDetailState.isLoadingRelated}\r\n          type={type}\r\n        />\r\n        {animeDetailState.dataVideoPromo && (\r\n          <VideoPromotionList\r\n            data={animeDetailState.dataVideoPromo}\r\n            isLoading={animeDetailState.isLoadingVideoAnime}\r\n          />\r\n        )}\r\n        <Reviews malId={malId} type={type} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nfunction deformData(animeDetailState, showThemeMusic) {\r\n  let arrKeys = Object.keys(animeDetailState.dataInformationAnime).filter(\r\n    (v) => {\r\n      let arrayExclude = [\r\n        \"title\",\r\n        \"image_url\",\r\n        \"url\",\r\n        \"synopsis\",\r\n        \"trailer_url\",\r\n        \"request_hash\",\r\n        \"request_cached\",\r\n        \"request_cache_expiry\",\r\n        \"mal_id\",\r\n        \"background\",\r\n        \"external_links\",\r\n        \"opening_themes\",\r\n        \"ending_themes\",\r\n        \"type_data\",\r\n      ];\r\n      if (\r\n        animeDetailState.dataInformationAnime &&\r\n        animeDetailState.dataInformationAnime.opening_themes &&\r\n        animeDetailState.dataInformationAnime.ending_themes\r\n      )\r\n        if (\r\n          document.querySelector(\".button-show-more-information\") &&\r\n          animeDetailState.dataInformationAnime.opening_themes.length === 0 &&\r\n          animeDetailState.dataInformationAnime.ending_themes.length === 0\r\n        ) {\r\n          document.querySelector(\r\n            \".button-show-more-information\"\r\n          ).style.display = \"none\";\r\n        }\r\n      return arrayExclude.indexOf(v) === -1 ? true : false;\r\n    }\r\n  );\r\n  if (!showThemeMusic) {\r\n    arrKeys = [...arrKeys, \"external_links\"];\r\n  }\r\n  if (showThemeMusic) {\r\n    arrKeys = [...arrKeys, \"external_links\", \"opening_themes\", \"ending_themes\"];\r\n  }\r\n  let episodeDataDisplay = { key: \"\", episodeList: [] };\r\n  Object.keys(animeDetailState.dataEpisodesAnime).forEach((key) => {\r\n    const episodeList = animeDetailState.dataEpisodesAnime[key];\r\n    if ([\"episodes\", \"episodesEng\", \"episodesEngDub\"].includes(key)) {\r\n      if (episodeList.length >= episodeDataDisplay.episodeList.length) {\r\n        episodeDataDisplay = { key, episodeList: [...episodeList] };\r\n      }\r\n    }\r\n  });\r\n  let sourceFilmList;\r\n  if (\r\n    animeDetailState.dataEpisodesAnime &&\r\n    animeDetailState.dataEpisodesAnime.sourceFilmList\r\n  )\r\n    sourceFilmList = Object.keys(\r\n      animeDetailState.dataEpisodesAnime.sourceFilmList\r\n    );\r\n  return { episodeDataDisplay, arrKeys, sourceFilmList };\r\n}\r\n\r\nexport default AnimeDetail;\r\n"],"sourceRoot":""}