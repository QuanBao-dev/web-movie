{"version":3,"sources":["../../../../src/internal/operators/pluck.ts","pages/FAQ/FAQ.js"],"names":["_i","length","plucker","props","x","i","p","currentProp","undefined","FAQ","useState","htmlContent","setHtmlContent","isContentEditable","setIsContentEditable","contentFaqRef","useRef","user","userStream","currentState","useCookies","cookies","useEffect","subscription","ajax","pipe","pluck","subscribe","data","message","unsubscribe","className","ref","contentEditable","suppressContentEditableWarning","dangerouslySetInnerHTML","__html","role","onClick","id","e","a","target","disabled","html","current","innerHTML","replace","console","log","fetch","method","body","JSON","stringify","headers","authorization","idCartoonUser","result","json","resJson","error","Error","document","querySelector"],"mappings":"6GACA,8CA6C4B,a,UAAA,0BAAuBA,I,kBAEjD,IAAIC,EAAM,EAAQ,O,GACN,IAAVA,EACD,uDAEF,kD,SAGOC,EAASC,KAchB,OAbO,SAAeC,G,IACnB,MAAiBA,EACRC,EAAG,MAAeA,IAAM,CAC/B,IAAIC,EAAc,MAAb,EAAaC,aAAAC,E,QAChBF,MAGD,OAFAC,IAKH,Y,+JCYWE,UAxEH,WACV,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkDF,oBAAS,GAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KACMC,EAAgBC,mBAChBC,EAAOC,IAAWC,eACxB,EAAkBC,YAAW,CAAC,kBAAvBC,EAAP,oBAWA,OAVAC,qBAAU,WACR,IAAMC,EAAeC,YAAK,YACvBC,KAAKC,YAAM,aACXC,WAAU,SAACC,GACVhB,EAAegB,EAAKC,YAExB,OAAO,WACLN,EAAaO,iBAEd,IAED,yBAAKC,UAAU,iBACb,yBACEA,UAAU,cACVC,IAAKjB,EACLkB,gBAAiBpB,EACjBqB,gCAA8B,EAC9BC,wBAAyB,CAAEC,OAAQzB,KAEpCM,GAAsB,UAAdA,EAAKoB,MACZ,6BACE,4BACEN,UAAU,iBACVO,QAAS,WACPxB,GAAsBD,KAH1B,oBAQA,4BACEkB,UAAU,iBACVQ,GAAG,cACHD,QAAO,uCAAE,WAAOE,GAAP,mBAAAC,EAAA,6DACPD,EAAEE,OAAOC,UAAW,EACdC,EAAO7B,EAAc8B,QAAQC,UAChCC,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACpBC,QAAQC,IAAIL,GALL,kBAOgBM,MAAM,WAAY,CACrCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBV,KAAMA,IAERW,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYnC,EAAQoC,kBAdhC,cAOCC,EAPD,gBAiBiBA,EAAOC,OAjBxB,YAiBCC,EAjBD,QAkBOC,MAlBP,uBAkBoBC,MAAMF,EAAQC,OAlBlC,QAmBLjD,EAAegD,EAAQ/B,SAnBlB,kDAqBLmB,QAAQC,IAAI,KAAMpB,SArBb,QAuBPkC,SAASC,cAAc,gBAAgBrB,UAAW,EAvB3C,0DAAF,uDAHT","file":"static/js/50.62b8fc66.chunk.js","sourcesContent":[null,"import \"./FAQ.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { userStream } from \"../../epics/user\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { ajax } from \"rxjs/ajax\";\r\nimport { pluck } from \"rxjs/operators\";\r\nconst FAQ = () => {\r\n  const [htmlContent, setHtmlContent] = useState(\"\");\r\n  const [isContentEditable, setIsContentEditable] = useState(false);\r\n  const contentFaqRef = useRef();\r\n  const user = userStream.currentState();\r\n  const [cookies] = useCookies([\"idCartoonUser\"]);\r\n  useEffect(() => {\r\n    const subscription = ajax(\"/api/faq\")\r\n      .pipe(pluck(\"response\"))\r\n      .subscribe((data) => {\r\n        setHtmlContent(data.message);\r\n      });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"container-faq\">\r\n      <div\r\n        className=\"content-faq\"\r\n        ref={contentFaqRef}\r\n        contentEditable={isContentEditable}\r\n        suppressContentEditableWarning\r\n        dangerouslySetInnerHTML={{ __html: htmlContent }}\r\n      ></div>\r\n      {user && user.role === \"Admin\" && (\r\n        <div>\r\n          <button\r\n            className=\"btn btn-yellow\"\r\n            onClick={() => {\r\n              setIsContentEditable(!isContentEditable);\r\n            }}\r\n          >\r\n            Content Editable\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            id=\"save-button\"\r\n            onClick={async (e) => {\r\n              e.target.disabled = true;\r\n              const html = contentFaqRef.current.innerHTML\r\n                .replace(/&lt;/g, \"<\")\r\n                .replace(/&gt;/g, \">\");\r\n              console.log(html);\r\n              try {\r\n                const result = await fetch(\"/api/faq\", {\r\n                  method: \"POST\",\r\n                  body: JSON.stringify({\r\n                    html: html,\r\n                  }),\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    authorization: `Bearer ${cookies.idCartoonUser}`,\r\n                  },\r\n                });\r\n                const resJson = await result.json();\r\n                if (resJson.error) throw Error(resJson.error);\r\n                setHtmlContent(resJson.message);\r\n              } catch (error) {\r\n                console.log(error.message);\r\n              }\r\n              document.querySelector(\"#save-button\").disabled = false;\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQ;\r\n"],"sourceRoot":""}