{"version":3,"sources":["../../../../src/internal/observable/empty.ts","../../../../src/internal/util/isNumeric.ts","../../../../src/internal/operators/mergeMap.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../../src/internal/util/noop.ts","store/caches.js","../../../../src/internal/observable/throwError.ts","../../../../src/internal/observable/defer.ts","../../../../src/internal/util/isDate.ts","../../../../src/internal/util/TimeoutError.ts","../../../../src/internal/operators/pluck.ts","../../../../src/internal/operators/switchMap.ts","util/checkMobileDevice.js","store/lazyLoadAnimeList.js","epics/lazyLoadAnimeList.js","../../../../src/internal/operators/filter.ts","../../../../src/internal/observable/timer.ts","../../../../src/internal/operators/tap.ts","../../../../src/internal/operators/debounceTime.ts","components/AnimeList/AnimeList.js","../../../../src/internal/observable/iif.ts","../../../../src/internal/operators/retry.ts","../../../../src/internal/operators/mergeMapTo.ts","../../../../src/internal/operators/timeoutWith.ts","../../../../src/internal/operators/timeout.ts","../../../../src/internal/operators/takeWhile.ts","../../../../src/internal/observable/interval.ts","store/upcomingAnimeList.js","epics/upcomingAnimeList.js","Functions/upcomingAnimeList.js","Hook/upcomingAnimeList.js","components/UpcomingAnimeList/UpcomingAnimeList.js"],"names":["empty","scheduler","isNumeric","val","concurrent","resultSelector","source","MergeMapOperator","MergeMapSubscriber","destination","project","Number","_this","_super","_next","value","push","_tryNext","result","index","error","err","active","_innerSub","innerSubscriber","innerSubscription","hasCompleted","unsubscribe","prototype","notifyNext","notifyComplete","buffer","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","initialState","behaviorSubject","BehaviorSubject","state","cachesStore","subscribe","setState","currentState","ans","updateData","obj","next","throwError","subscriber","dispatch","_a","defer","observableFactory","Observable","input","isDate","TimeoutErrorImpl","Error","message","_i","length","plucker","props","x","i","p","currentProp","undefined","switchMap","SwitchMapOperator","call","SwitchMapSubscriber","tslib_1","SimpleInnerSubscriber","innerSubscribe","_unsubscribe","mobileAndTabletCheck","a","check","navigator","userAgent","vendor","window","opera","test","substr","genreDetailData","pageOnDestroy","pageIsLoaded","isChangeView","isStopScrollingUpdated","currentPageOnDestroy","query","pageGenre","numberAnimeShowMore","parseInt","innerHeight","width","height","quantityItemPerRow","widthItem","heightItem","rowStart","rowEnd","widthContainerList","trigger","subject","lazyLoadAnimeListStream","pipe","v","init","data","updateDataQuick","keys","forEach","key","fetchDataGenreAnimeList$","page","url","idCartoonUser","searchBy","method","replace","includes","headers","authorization","iif","genres","timer","map","filter","tap","mergeMapTo","mergeMap","ajax","timeout","pluck","catchError","of","updatePageScrollingWindow$","fromEvent","document","body","scrollHeight","scrollY","debounceTime","calculateRowStartEnd","containerListRef","offsetTopContainerList","current","offsetTop","currentRow","Math","ceil","numberRowToFillTheScreen","predicate","thisArg","FilterOperator","FilterSubscriber","dueTime","period","periodOrScheduler","async","closed","nextOrObserver","complete","DoOperator","TapSubscriber","observerOrNext","noop","_tapComplete","_tapError","isFunction","_context","_tapNext","DebounceTimeOperator","DebounceTimeSubscriber","clearDebounce","add","_complete","hasValue","lastValue","debouncedSubscription","Subscriber","responsiveObject","maxWidth","minWidth","AnimeItem","loadable","handleResponsiveWidth","animeListRef","lazyLoadState","innerWidth","AnimeList","isWrap","lazy","virtual","isAllowDelete","type","useRef","useEffect","subscription","takeWhile","offsetWidth","ref","className","style","position","anime","slice","display","alignItems","justifyContent","top","left","styleAnimeItem","color","size","margin","fontSize","trueResult","count","RetryOperator","RetrySubscriber","isStopped","TimeoutWithOperator","withObservable","waitFor","TimeoutWithSubscriber","scheduleTimeout","action","schedule","inclusive","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","counter","offsetLeft","mouseStartX","modeScrolling","upcomingAnimeList","shouldScrollLeft","screenWidth","isScrolling","upcomingAnimeListStream","scrollAnimeUser$","distance","elementScroll","forward","numberList","deltaDistance","end","childNodes","abs","transition","transform","console","log","scrollAnimeInterval$","scrollE","interval","throttleTime","asyncScheduler","leading","trailing","upcomingAnimeListUpdated$","retry","posX1","posX2","delta","isLeft","saveMovementTouchList","useInitUpcomingAnimeList","setUpcomingAnimeListState","querySelector","initUpcomingAnimeList","useKeepDragMoveAnimeList","subscription2","subscriptionMouseEnter","subscriptionMouseLeave","subscriptionMouseMove","subscriptionMouseUp","subscriptionMouseDown","subscriptionTouchStart","subscriptionTouchMove","subscriptionTouchEnd","e","touches","clientX","deltaClientY","preventDefault","keepDragMoveAnimeList","useFetchUpcomingAnimeList","numberCloneList","stream","isFirstLaunch","fetchUpcomingAnimeList","scrollByTranslate","UpcomingAnimeList","useState","upcomingAnimeListState","upcomingAnimeContainerRef","y","getBoundingClientRect","offsetHeight","onTouchMove","onTouchStart","onTouchEnd","onTouchCancel","textDecoration","to","onClick"],"mappings":"4HAAA,gFA6DM,EAAyC,4CAC7C,SAAOA,EAAWC,GACnB,S,SAGYA,GACZ,oFAJA,Q,iCC/DD,8CAOE,SAAQC,EAAYC,GACrB,8C,uGCkEC,eAAqBC,G,YAEV,IAAPA,IAEFA,EAAO,OAAC,mBAKsB,oBAArBC,EACT,SAAaC,GAAc,OAACA,wBAAA,yFAEI,kBAA3B,IACRF,KAGC,YAAoB,OAAwDE,EACxD,KAA6C,c,MADW,W,SACxDC,IAA6CH,QAChE,QAEDA,4BAIC,eACH,kBAaE,O,+BANF,2DAME,EAtB4E,G,EAuBA,Y,SANpEI,EAAwBC,EAAMC,UACb,IAAjB,IACAN,EAAmBO,0B,kCAO1BC,YAESA,eACRA,EAAI,cAAc,E,EAChB,OAAK,G,EACN,S,EAAM,QACLA,E,WARgB,EAA6CC,GAUjEL,EAAC,UAAAM,MAAA,YAES,4BACJ,cAA2BC,GAG7B,YAASC,KAAKD,I,EAET,UAAYE,SAAY,Y,IAC7BC,EACDC,eACD,IACID,EAAC,KAAUR,QAAQK,EAAAI,GAGjB,SAEA,YADA,iBAAeC,MAAOC,GAG5B,KAAMC,SAIN,KAAIC,UAAAL,I,EAEH,gCACF,oBAES,mBACRT,EAAK,IAAAe,GACL,IAAIC,EAAiB,YAAgB,EAAMD,GACzCC,IAAiB,GAClBhB,UAIHD,sBAAU,WACR,KAAKkB,cAAY,EAClB,yCAED,4BAEE,KAAKC,e,EAEQC,UAAOC,WAAU,Y,KAC7BpB,qB,EACM,UAAYqB,eAAY,W,IAC9BC,cACF,cACH,WAnE8C,WAAqBA,EAmElE,SAK+B,IAAnB,KAAUT,QAAS,mB,+BAjE8C,O,2FC7G/D,SAASU,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,+CIJ9F,mC,6CCAMC,EAAe,GACfC,EAAkB,I,MAAIC,GAAgBF,GACxCG,EAAQH,EACNI,EAAc,CAClBC,UAAW,SAACC,GAAD,OACTL,EAAgBI,WAAU,SAAClC,GAAD,OAAWmC,EAASnC,OAChDoC,aAAc,WACZ,IAAIC,EAIJ,OAHAP,EAAgBI,WAAU,SAAClC,GACzBqC,EAAMrC,KAEDqC,GAETC,WAAY,SAACC,GACXP,EAAK,2BACAA,GACAO,GAELT,EAAgBU,KAAKR,KAIVC,O,iCCvBf,8CAqEE,SAAKQ,EAAWpC,EAAAnB,G,OACd,EAGD,4CAAAmB,QAAAqC,kBAFA,0C,SAUiBC,KAClB,MAAWC,QAAa,aACzBF,W,iCCnFD,gEAuDE,SAAWG,EAAAC,G,OACT,IAAIC,KAAgB,YACpB,IAAIC,E,IAEHA,MAAC,MACA1C,GAED,YADCoC,EAAO,MAAUpC,GAIlB,OADY0C,EAAC,YAAU,GAAW/D,eAClC,kB,iCChEH,SAAYgE,EAAAjD,GACb,qCAFD,mC,iCCOA,kC,MAC2B,W,SAClBkD,IAIN,OAHCC,MAAK,WACL,KAAKC,QAAO,uBACZ,UAAY,eACb,KAKC,OADFF,EAAO,UAAiB,+BACrBA,EAVsB,I,iCCP3B,8CA6C4B,a,UAAA,0BAAuBG,I,kBAEjD,IAAIC,EAAM,EAAQ,O,GACN,IAAVA,EACD,uDAEF,kD,SAGOC,EAASC,KAchB,OAbO,SAAeC,G,IACnB,MAAiBA,EACRC,EAAG,MAAeA,IAAM,CAC/B,IAAIC,EAAc,MAAb,EAAaC,aAAAC,E,QAChBF,MAGD,OAFAC,IAKH,Y,uGCiBF,SAAWE,EAAAnE,EAAmBL,G,MACC,oBAAtBA,EAKR,iIAEF,qC,IAGCyE,EAA4E,W,SAAxDA,EAAwDpE,GAC3E,eAFH,O,EAKkBkB,UAAUmD,KAAI,WAAoBzE,GACjD,2CACFwE,EAN6E,GAatCE,WAA2BnE,G,SAIjEmE,EAEEvE,EAAMC,GADY,aAAwD,KAAAD,IAAA,KAE3E,OANOG,UAAUF,E,UAMjB,EAPqC,OAItCuE,MAAYpE,G,EAMqB,4BAC/B,IAAMK,EACFC,e,IAEHD,oBAAC,MACAE,GAED,YADC,iBAAOA,SAGV,mB,EAGO,UAAoBG,UAAK,SAAkBL,GACjD,IAAIO,EAAmB,uBACrBA,GACDA,gBAED,IAAMD,EAAkB,IAAC0D,IAA4B,MACrD,EAAgB,iBAChBzE,EAAK,IAAAe,GAIL,KAAIC,kBAAK0D,YAAsB,EAAiB3D,GAC9C,yBAAqBA,GACtBf,+B,EAIM,+BACP,IAAIgB,EAAkB,KAAIA,kBACxB,IAAMA,EAAY,QACnBZ,iCAEF,oB,EAGM,UAAoBuE,aAAU,WACpC,+B,EAGM,UAAoBtD,eAAU,WACnC,KAAIL,uBAAgBmD,EAClB,gBACD/D,kC,EAIiBe,UAAOC,WAAY,YACtC,0BA3DqC,EAAAmD,CAAA,M,iCC3GxC,kCACO,IAAMK,EAAuB,WAClC,IACWC,EADPC,GAAQ,EAYZ,OAXWD,EAURE,UAAUC,WAAaD,UAAUE,QAAUC,OAAOC,OARjD,sVAAsVC,KACpVP,IAEF,0kDAA0kDO,KACxkDP,EAAEQ,OAAO,EAAG,OAGdP,GAAQ,GAELA,I,kUCZH3C,EAAe,CACnBmD,gBAAiB,GACjBC,cAAe,KACfC,aAAa,KACbC,cAAc,EACdC,wBAAwB,EACxBC,qBAAsB,KACtBC,MAAM,KACNC,UAAW,EACXC,oBAAgE,GAA1CC,SAASb,OAAOc,YAAc,KAAO,GAC3DC,MAAO,KACPC,OAAQ,KACRC,mBAAoB,EACpBC,UAAW,KACXC,WAAY,KACZC,SAAU,EACVC,OAAQ,EACRC,mBAAoB,OACpBC,SAAQ,GAGJC,EAAU,IAAIrE,IAAgBF,GAChCG,EAAQH,ECPCwE,EDQkB,CAC7BxE,eACAK,UAAW,SAACC,GAAD,OAAciE,EAAQE,OAAOpE,WAAU,SAACqE,GAAD,OAAOpE,EAASoE,OAClEnE,aAAc,WACZ,IAAIC,EAEJ,OADA+D,EAAQlE,WAAU,SAACqE,GAAD,OAAQlE,EAAMkE,KACzBlE,GAAOR,GAEhB2E,KAAM,WACJJ,EAAQ5D,KAAKR,IAEfM,WAAY,WAA0B,IAAzBmE,EAAwB,uDAAjB5E,EAClBG,EAAK,2BACAA,GACAyE,GAELL,EAAQ5D,KAAKR,IAEf0E,gBAAiB,WAA0B,IAAzBD,EAAwB,uDAAjB5E,EACjB8E,EAAOlF,OAAOkF,KAAKF,GACzBE,EAAKC,SAAQ,SAACC,GACZ7E,EAAM6E,GAAOJ,EAAKI,QC3BjB,SAASC,EACdC,EACAC,EACAC,EACAC,EACA5B,GAEA,IAAI/C,EAAM,CACR4E,OAAQ,MACRH,IAAKA,EAAII,QAAQ,SAAUL,IAO7B,MALI,CAAC,SAAU,OAAOM,SAASH,KAC7B3E,EAAI+E,QAAU,CACZC,cAAc,UAAD,OAAYN,KAGtBO,aACL,kBACEvF,IAAYG,eAAeqF,QAC3BxF,IAAYG,eAAeqF,OAAOT,EAAII,QAAQ,SAAUL,MAC1DW,YAAM,GAAGpB,KACPqB,aAAI,kBAAM1F,IAAYG,eAAeqF,OAAOT,EAAII,QAAQ,SAAUL,QAEpEW,YAAM,GAAGpB,KACPsB,aAAO,kBAAMb,IAAStB,SAASsB,MAC/Bc,aAAI,WACFxB,EAAwB/D,WAAW,CACjC4C,aAAc6B,OAGlBe,YACEN,aACE,kBACEvF,IAAYG,eAAeqF,QAC3BxF,IAAYG,eAAeqF,OAAOnC,IAClCrD,IAAYG,eAAeqF,OAAOnC,GAAOyB,KAC3CW,YAAM,GAAGpB,KACPqB,aAAI,kBAAM1F,IAAYG,eAAeqF,OAAOnC,GAAOyB,OAErDW,YAAM,GAAGpB,KACPyB,aAAS,kBACPC,YAAKzF,GAAK+D,KACR2B,YAAQ,KACRC,YAAM,YACNC,aAAW,WACT,OAAOC,YAAG,CAAE/H,OAAO,gBAW9B,SAASgI,IACd,OAAOC,YAAU1D,OAAQ,UAAU0B,KACjCsB,aACE,kBACEW,SAASC,KAAKC,cAAgB7D,OAAO8D,QAAU9D,OAAOc,aAAe,KAEzEiD,YAAa,MAIV,SAASC,EAAqBC,EAAkB9C,GACrD,IAAM+C,EAAyBD,EAAiBE,QAAQC,UAClDC,EAAaC,KAAKC,OACpBL,EAAyBlE,OAAO8D,QAAU9D,OAAOc,aAAeK,GAE9DqD,EACJF,KAAKC,KAAKvE,OAAOc,YAAcK,GAC/BM,EAAwBjE,eAAeyD,mBAMzC,MAAO,CAAEG,SAJPiD,EAAaG,GAA4B,EACrCH,EAAaG,EACb,EAEanD,OADJgD,EAAaG,K,qFCtC5B,SAAOxB,EAASyB,EAAAC,G,OACd,SAAuB/J,GACvB,2B,IAIFgK,EAAoB,W,SAAAA,IAA+CD,GAC/C,iBACnB,eAHH,O,EAMW,UAAOtF,KAAc,WAAiBzE,GAC9C,0DACFgK,EAPqB,GAcYC,WAAa1J,G,SAI7C0J,EAGE9J,EAAM2J,EAAYC,GAFA,kBAA+C5J,IAAA,KAGlE,OAFmBG,cAJpBA,UAAkByJ,E,UAMjB,EAR+B,OAIhCpF,MAAYpE,G,EASM,4BAChB,IAAIK,E,IAEHA,mDAAC,MACAG,GAED,YADC,iBAAOD,MAAAC,GAGPH,GACD,0BAtB6B,EAAAqJ,CAAA,M,iCC/ElC,uEAyDsB,eAA0BtK,QAG9B,IAAZuK,IACAA,EAAU,G,IAEbC,K,mBAAU,GACTA,EAAS9J,OAAG,GAAyB,IAAAA,UAGlC,YAAY,KACfV,EAAYyK,GAGd,YAAW,KACTzK,EAAY0K,K,IAEP7G,KAAW,SAAUL,GAE1B,MAAO,YAAU,GACf+G,GACC,UACF,uBACJrJ,QAAAsJ,SAAAhH,kB,SAYKC,EAAUX,G,IACZ5B,EAAO4B,QAAA0H,WAAAhH,e,KACR,S,EAAgBmH,O,CAIZ,IAAc,IAAbH,EACF,OAAChH,EAAgB,W,8JC9BrB,SAAOmF,EAASiC,EAAAzJ,EAAoB0J,G,OAClC,SAAuBxK,GACvB,6B,IAIFyK,EAAoB,W,SAAAA,MAAsDD,GACtD,oBAAwBD,EACxB,WAAQzJ,EAC3B,gBAJH,O,EAMWQ,UAAOmD,KAAU,SAAItB,EAAcnD,GAC3C,2EACFyK,EAPqB,GAeSC,WAAanK,G,SAS1CmK,EAIIvK,EAAMwK,EAAY7J,EAYnB0J,GAtBK,QAAiC,KAAK,KAAArK,IAAA,KAsB3C,OApBKG,WAASsK,IAETtK,YAAYsK,IAOhBtK,EAAKuK,aAAYD,IACjBtK,EAAKwK,UAAYhK,GAAG,IACpBR,EAAI,aAAWkK,GAAiBI,IAC9BG,YAAK,IACLzK,EAAK0K,SAAW1K,EACjBA,cACKqK,IACJrK,EAAK0K,SAAWL,EAChBrK,EAAK2K,SAASN,EAAiB1H,MAAM2H,IACrCtK,EAAKwK,UAAYH,EAAG,OAAeC,IACpCtK,gCACF,EAzB0B,OAS7BqE,MAAYpE,G,EAmBN,4B,IAEH,oCAAC,MACAQ,GAED,YADC,iBAAOD,MAAAC,GAGV,0B,EAGK,6B,IAEH,qCAAC,MACAA,GAED,YADC,iBAAOD,MAAAC,GAGV,2B,EAGK,+B,IAEH,sCAAC,MACAA,GAED,YADC,iBAAOD,MAAAC,GAGV,oCAvD4B,EAAA2J,CAAA,M,6FC/BkB,gBAK/C,YAJQ,IAAR,IACD/K,OAGC,mBAAoBK,EAAyB,SAAwBkL,EAAAhB,EAAAvK,K,MAAA,WACrE,SAACuL,EAAAhB,EAAAvK,GAED,eACE,eAAcA,EASsB,OAPxCuL,YAACzG,KAAA,wEAOuC,EAb+B,G,EAqB7D,SAAYlE,G,SADA4K,EAAwBhL,OANpC,kBAAsCA,IAAK,KAWjD,OAVMG,UAAS4J,EACT5J,YAAoBX,E,6BAM3BW,iBAESA,cACHA,EAuCP,O,IA7C2B6K,EAAQ5K,G,EAQjB,UAAKC,kBACrB,KAAK4K,gBACN,iBAES,iBACR,KAAKC,IAAA,2BAAgB,+CAEvBF,EAAC,UAAAG,UAAA,WAED,qBACE,KAAKnL,YAAAqK,Y,EAGK,wBAAmB,W,QAM3BY,gBACA,KAAKG,SAAQ,CACb,IAAIC,EAAY,KAAKA,UACtB,oBACF,iBAEO,2B,EAIQ,wBAAuB,W,IACnCC,EAAsB,2BACI,OAA1BA,IACD,eACFA,gBACH,2BAAC,OAGC,EA3CQ,CA4CTC,K,mECjID,wGAaMC,EAAmB,CACvB,CACEC,SAAU,IACVC,SAAU,IACVvF,mBAAoB,GAEtB,CACEsF,SAAU,IACVC,SAAU,IACVvF,mBAAoB,GAEtB,CACEsF,SAAU,IACVC,SAAU,IACVvF,mBAAoB,GAEtB,CACEsF,SAAU,IACVC,SAAU,EACVvF,mBAAoB,IAGlBwF,EAAYC,aAAS,kBAAM,wDA2LjC,SAASC,EAAsBC,EAAcC,GAK3C,IAJA,MAA6B7C,YAC3B4C,EACAC,EAAc1F,YAFRC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAITvC,EAAI,EAAGA,EAAIwH,EAAiB5H,OAAQI,IAAK,CAChD,MAAmDwH,EAAiBxH,GAA5DyH,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUvF,EAA5B,EAA4BA,mBAC5B,GAAIjB,OAAO8G,WAAaP,GAAYvG,OAAO8G,WAAaN,EAAU,CAChE/E,IAAwB/D,WAAW,CACjCuD,uBAEF,OAGAG,IAAayF,EAAczF,UAAYC,IAAWwF,EAAcxF,QAClEI,IAAwB/D,WAAW,CACjC0D,WACAC,WAGJI,IAAwB/D,WAAW,CACjC6D,SAAUE,IAAwBjE,eAAe+D,UAItCwF,UAnNG,SAAC,GAUZ,IATLlF,EASI,EATJA,KACApG,EAQI,EARJA,MAQI,IAPJuL,cAOI,aANJC,YAMI,aALJ5M,aAKI,aAJJ6M,eAII,aAHJC,qBAGI,SAFJ7E,EAEI,EAFJA,SACA8E,EACI,EADJA,KAEMR,EAAeS,mBACfR,EAAgBpF,IAAwBjE,eAuE9C,OAtEA8J,qBAAU,WACR,IAAMC,EAAe3E,aACnB,kBAAMlD,gBACNgE,YAAU1D,OAAQ,UAAU0B,KAAK8F,aAAU,kBAAMN,MACjDxD,YAAU1D,OAAQ,UAAU0B,KAC1B8F,aAAU,kBAAMN,KAChBnD,YAAa,MAEfzG,WAAU,WACV,MAA6B0G,YAC3B4C,EACAC,EAAc1F,YAFRC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAKhBD,IAAayF,EAAczF,UAC3BC,IAAWwF,EAAcxF,QAEzBI,IAAwB/D,WAAW,CACjC0D,WACAC,cAIN,OAAO,WACLkG,EAAavL,iBAEd,CACD6K,EAAc1F,WACd0F,EAAcxF,OACdwF,EAAczF,SACd8F,IAEFI,qBAAU,WACRX,EAAsBC,EAAcC,GACpC,IAAMU,EAAe7D,YAAU1D,OAAQ,UACpC0B,KAAKqC,YAAa,MAClBzG,WAAU,WACTqJ,EAAsBC,EAAcC,MAExC,OAAO,WACLU,EAAavL,iBAGd,CAAC6K,EAAc1F,WAAY0F,EAAcxF,OAAQwF,EAAczF,WAClEkG,qBAAU,WACR,GAAKJ,EAAL,CACA,IAAMhG,EACJ0F,EAAazC,QAAQsD,YAAcZ,EAAc5F,mBAC7CE,EAA0B,IAAZD,EAAmB,IACjCF,EACJsD,KAAKC,KACHsC,EAAczG,gBAAgB1B,OAASmI,EAAc5F,oBACnDE,EACN,EAA6B6C,YAAqB4C,EAAczF,GAAxDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClBI,IAAwB/D,WAAW,CACjCqD,MAAO6F,EAAazC,QAAQsD,YAC5BzG,SACAE,YACAC,aACAC,SAAUA,EACVC,OAAQA,OAET,CACDwF,EAAc1F,WACd0F,EAAc5F,mBACd4F,EAAczG,gBAAgB1B,OAC9BmI,EAActF,QACd2F,IAIA,yBACEQ,IAAKd,EACLe,UAAWX,EAAS,aAAe,oBACnCY,MAAO,CACLC,SAAUX,EAAU,WAAa,SACjClG,OAAQ6F,EAAc7F,OACtBD,MAAO8F,EAAcvF,mBACjBuF,EAAcvF,mBACd,MAGLO,IACEqF,IACAzL,GACDoG,EAAKkB,KAAI,SAAC+E,EAAOtM,GACf,OACE,kBAACiL,EAAD,CACExE,IAAKzG,EACLsM,MAAOA,EACPb,KAAMA,EACN3E,SAAUA,EACV4E,SAAS,EACTC,cAAeA,EACfC,KAAMA,OAIbvF,GACCqF,IACCzL,GACDoG,EACGkG,OACElB,EAAczF,SAAW,GAAKyF,EAAc5F,oBAC5C4F,EAAcxF,OAAS,GAAKwF,EAAc5F,oBAE5C8B,KAAI,SAAC+E,EAAOtM,GACX,OACE,yBACEyG,KACG4E,EAAczF,SAAW,GACxByF,EAAc5F,mBAChBzF,EAEFoM,MACEV,EACI,CACEc,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBlH,OAAQ6F,EAAc1F,WACtBJ,MAAO8F,EAAc3F,UACrB2G,SAAU,WACVM,IACEtH,WACIgG,EAAczF,SAAW,GACzByF,EAAc5F,mBACdzF,GACAqL,EAAc5F,oBACd4F,EAAc1F,WACpBiH,KACEvH,WACIgG,EAAczF,SAAW,GACzByF,EAAc5F,mBACdzF,GACAqL,EAAc5F,oBACd4F,EAAc3F,WAEtB,IAGN,kBAACuF,EAAD,CACAW,KAAMA,EACJU,MAAOA,EACPb,KAAMA,EACNC,SAAS,EACTC,cAAeA,EACfkB,eAAgB,CAAEtH,MAAO,MAAOC,OAAQ,OACxCsB,SAAUA,QAKrBT,GAAwB,IAAhBA,EAAKnD,QAAgBrE,GAC5B,yBAAKsN,UAAU,SACb,kBAAC,IAAD,CAAkBW,MAAM,YAAYC,KAAK,UAG5C9M,GACC,yBACEmM,MAAO,CACLY,OAAQ,oBACRF,MAAO,QACPG,SAAU,SAJd,gC,iCC/MR,wDA8FE,kB,YACA,QAEAC,EAAa,U,gJC9CU,cAKvB,YAJO,IAAP,IACDC,MAGC,YAAoB,OACAhO,EAAqB,kB,MAAA,WACzC,SAACiO,EAAAD,EAAAhO,GAED,aACE,YAAcA,EASe,OAPjCiO,YAACxJ,KAAA,mEAOgC,EAbU,G,EAiBvC,SAAMlE,G,SADY2N,EAAM/N,EAAe6N,K,2BAIvC,OAFD1N,UACDA,WACOA,E,WALa,EAAaC,G,EAOzB,UAAaO,kB,SACfqN,UAAO,C,IACRnO,EAAAqD,KAAArD,OAAAgO,EAAA3K,KAAA2K,M,GAAe,I,EACd,OAAKzN,EAAQ,UAAUO,MAAA2D,KAAA,KAAA1D,GAElBiN,GAAU,IAClB,gBAELhO,YAAC,iC,EAbG,O,iCCzEJ,+CAoDE,eAA4BF,GAK5B,YAHW,IAAPA,IACFA,EAAO,OAAS,mBAEY,oBAAnBC,EACT,aAAa,WAAe,WAAAA,EAAAD,IAER,kBAAfC,IACRD,K,+JCcqB,W,SACAsO,MAAoCC,KACpC,aAASC,EAC5B,uBAED,sBACE,eAAc3O,EAWwB,OAP1CyO,YAAC3J,KAAA,iHAOyC,EAjBpB,G,EA0BZ,SAAYlE,G,SAHAgO,EAAepO,WACf,sBAAoC,KAO9C,OANUG,oBAElBA,EAAKgO,U,mBACNhO,cAEcA,oBACL,E,WATU,K,EAWH,gBAAe,SAAgB6C,GAC/C,uBAEOA,2BACEA,kBAAgB,gB,EAOwC7B,UAAOkN,gBAAoB,W,IAC1FC,c,EACC,KAAKA,OAASA,EAAM,SAAwD,UAAUH,SAMhF,oCAAVI,SAAwBH,kBAAA,qB,EAGrB,4BACD,sBACD,uBAIChO,EAAK,UAASC,MAASiE,KAAC,KAAAhE,I,EAEnB,UAAuBqE,wBAC7B,mBACH,oBAhD0C,oBAgDzC,M,EAvCS,M,SCdiB,gB,YACP,IAAlB,IACDnF,ODxBiC,aAAgCA,G,YACxD,IAAR,IACEA,EAAI,KAEJ,SAAaK,GACb,qBACH,2BAED,+B,kHEpBI,gBAGH,YAFS,IAAR,IACW2O,MACZ,YAED,2B,MAGgC,WAAG,SAACC,EAAA9E,EAAA6E,GAElC,iBACE,eAAcA,EAUmB,OAPrCC,YAACnK,KAAA,0EAOoC,EAbL,G,EAoBtB,SAAYlE,G,SADRsO,IAAkB/E,KALtB,MAAKvJ,EAAa,UAAAJ,IAAA,KAUxB,O,cAHDG,cAESA,UACFA,E,WANI,EAA+CC,G,EAQrD,4B,IAEHK,EADCT,EAAc,iBACd,IACAS,OAAYkJ,UAAWrJ,EAAA,cADvB,MAGDM,GAEF,YADKZ,EAAC,MAAeY,GAIpB,KAAM+N,eAAcrO,EAAKG,I,EAEXU,UAAUwN,eAAE,c,IACzB3O,mB,QAAM,GACLA,EAAS,KAAAM,IAGT,gBACDN,UAELA,e,EA1BU,O,iCCnFV,+DAsDyB,gBAkBzB,YAjByB,QACnBgK,EAAC,QAEJxK,QAEGA,EAAU0K,OAEb,uBAEDF,EAAW,GAIT,GAAkB,oBAAAxK,aACjBA,OAGI,SAAmE,YAE1E,OADQwD,iBAAYC,EAAA+G,EAAA,CAAOhH,WAAE,EAAiB4L,UAAA5E,YACnChH,K,yaCzEPb,EAAe,CACnB0M,WAAY,EACZC,YAAa,KACbC,cAAe,WACfC,kBAAmB,GACnBC,kBAAkB,EAClBC,YAAa,KACbC,aAAa,GAET/M,EAAkB,IAAIC,IAAgBF,GAExCG,EAAQH,ECGCiN,EDDkB,CAC7BjN,eACAK,UAAW,SAACC,GAAD,OAAcL,EAAgBI,WAAU,SAACqE,GAAD,OAAOpE,EAASoE,OACnEnE,aAAc,WACZ,IAAIC,EAIJ,OAHAP,EAAgBI,WAAU,SAACqE,GACzBlE,EAAMkE,KAEDlE,GAAOR,GAEhB2E,KAAM,WACJ1E,EAAgBU,KAAKR,IAEvBM,WAAY,WAA0B,IAAzBmE,EAAwB,uDAAjB5E,EAClBG,EAAK,2BACAA,GACAyE,GAEL3E,EAAgBU,KAAKR,IAEvB0E,gBAAiB,WAA0B,IAAzBD,EAAwB,uDAAjB5E,EACjB8E,EAAOlF,OAAOkF,KAAKF,GACzBE,EAAKC,SAAQ,SAACC,GACZ7E,EAAM6E,GAAOJ,EAAKI,QCpBXkI,EAAmB,SAC9BC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAgB,EAChBC,EAAMP,EAAwB1M,eAAesM,kBAAkBpL,OAAS,EAC5E,OAAOoE,YAAM,EAAG,GAAGpB,KACjB8F,aAAU,kBAAMgD,EAAgBJ,KAChCnH,aAAI,WACFiH,EAAwBpI,gBAAgB,CAAE+H,cAAe,UACzDK,EAAwBpI,gBAAgB,CAAEiI,kBAAkB,IAC5DS,GAAiB,GACjB,IAAI5K,GAAQ,EACN+J,EACJO,EAAwB1M,eAAemM,WACvCa,EAAgBF,EAEhBD,EAAcK,WAAWD,IACzBnG,KAAKqG,IAAIhB,IAAeU,EAAcK,WAAWD,GAAKd,aAEtDO,EAAwBpI,gBAAgB,CACtC6H,YAAaU,EAAcK,WAAWD,EAAMF,GAAYZ,aAE1DU,EAAczC,MAAMgD,WAAa,KACjCP,EAAczC,MAAMiD,UAApB,qBACEX,EAAwB1M,eAAemM,WADzC,KAGA/J,GAAQ,GAGRyK,EAAcK,WAAW,IACzBf,EAAaU,EAAcK,WAAW,GAAGf,WAAa,IAEtDmB,QAAQC,IAAI,SAIZb,EAAwBpI,gBAAgB,CACtC6H,YAAaU,EAAcK,WAAWH,GAAYZ,aAEpDU,EAAczC,MAAMgD,WAAa,KACjCP,EAAczC,MAAMiD,UAApB,qBACEX,EAAwB1M,eAAemM,WADzC,KAGA/J,GAAQ,GAENA,IACFyK,EAAczC,MAAMiD,UAApB,qBACEX,EAAwB1M,eAAemM,WACvCa,EAAgBF,EAFlB,WAKJtH,aAAO,kBAAMwH,GAAiBJ,KAC9BnH,aAAI,WACFiH,EAAwBpI,gBAAgB,CACtC6H,WACEO,EAAwB1M,eAAemM,WACvCa,EAAgBF,IAEpBJ,EAAwBpI,gBAAgB,CACtCiI,kBAAkB,EAClBF,cAAe,kBAMVmB,EAAuB,SAACC,EAASR,GAC5C,OAAOS,YAAS,IAAIxJ,KAClBsB,aACE,iBAA+D,aAAzDkH,EAAwB1M,eAAeqM,iBAE/C5G,aAAI,WACF,IAAM0G,EACJO,EAAwB1M,eAAemM,WAAa,IACtDO,EAAwBpI,gBAAgB,CAAE6H,eAC1CsB,EAAQrD,MAAMiD,UAAd,qBAAwClB,EAAxC,UAEF3G,aACE,kBACEiI,EAAQP,WAAWD,IACnBnG,KAAKqG,IAAIT,EAAwB1M,eAAemM,aAC9CsB,EAAQP,WAAWD,GAAKd,cAE9BwB,YAAa,IAAMC,IAAgB,CACjCC,SAAS,EACTC,UAAU,MAKHC,EAA4B,WACvC,OAAOzI,YAAM,GAAGpB,KACdsB,aACE,kBACsE,IAApEkH,EAAwB1M,eAAesM,kBAAkBpL,UAE7DQ,aAAU,kBACRkE,YAAK,CACHhB,IAAI,gFACHV,KACD4B,YAAM,WAAY,QAClBkI,cACAjI,aAAW,kBAAMC,YAAG,c,uIChGxBiI,EAAQ,EACRC,EAAQ,EACRC,EAAQ,EACRC,GAAS,EACTC,EAAwB,GCvBfC,EAA2B,SAACC,GACvCzE,oBDCmC,SAACyE,GACpC,OAAO,WACL,IAAMxE,EAAe2C,IAAwB5M,UAC3CyO,GAQF,OANA7B,IAAwBtI,OACxBsI,IAAwBxM,WAAW,CAAEsM,YAAahK,OAAO8G,aACnCnD,SAASqI,cAAc,sBAC/BpE,MAAMiD,UAApB,qBACEX,IAAwB1M,eAAemM,WADzC,OAGO,WACLpC,EAAavL,gBCbPiQ,CAAsBF,GAA4B,KAGjDG,EAA2B,SAACxN,EAAQ6L,GAC/C,IAAMF,EAAgB1G,SAASqI,cAAc,sBAC7C1E,oBDkBmC,SAAC+C,EAAe3L,EAAQ6L,GAC3D,OAAO,WACL,IAAI4B,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACF,GAAe,IAAXjO,GACE2L,EAAe,CACjB,IAAMI,EAAM/L,EAAS,EACrB+N,EAAyB/I,YACvB2G,EACA,cACA/M,WAAU,SAACsP,GACX1C,IAAwBpI,gBAAgB,CACtC8H,YAAagD,EAAEC,QAAQ,GAAGC,aAG9BJ,EAAwBhJ,YAAU2G,EAAe,aAAa/M,WAC5D,SAACsP,GACC,GAAIf,EAAsBnN,OAAS,EACjCmN,EAAsBxQ,KAAK2E,OAAO8D,aADpC,CAIA,IAAIiJ,EAAe,EAOnB,GANqC,IAAjClB,EAAsBnN,SACxBqO,EAAezI,KAAKqG,IAClBkB,EAAsBA,EAAsBnN,OAAS,GACnDmN,EAAsB,OAGxBkB,EAAe,IACf7C,IAAwB1M,eAAeoM,YAAa,EACtD8B,EAAQD,EAAQmB,EAAEC,QAAQ,GAAGC,SACjB,IACK,IAAXlB,IACFD,EAAQ,EACRF,EAAQ,EACRC,EAAQ,GAEVE,GAAS,KAEM,IAAXA,IACFD,EAAQ,EACRF,EAAQ,EACRC,EAAQ,GAEVE,GAAS,GAEG,IAAVH,IACFE,GAASD,GAEXD,EAAQmB,EAAEC,QAAQ,GAAGC,QACrB,IAAMnD,EACJO,IAAwB1M,eAAemM,WAAqB,GAARgC,EACtDtB,EAAczC,MAAMiD,UAApB,qBAA8ClB,EAA9C,OAEAO,IAAwBpI,gBAAgB,CACtC6H,eAGAU,EAAcK,WAAW,IACzBf,EAAaU,EAAcK,WAAW,GAAGf,WAAa,IAEtDO,IAAwBpI,gBAAgB,CACtC6H,YAAaU,EAAcK,WAAWH,GAAYZ,aAEpDU,EAAczC,MAAMgD,WAAa,KACjCP,EAAczC,MAAMiD,UAApB,sBAA+CR,EAC5CK,WAAWH,GAAYZ,WAD1B,QAKAU,EAAcK,WAAWD,IACzBnG,KAAKqG,IAAIhB,IAAeU,EAAcK,WAAWD,GAAKd,aAEtDO,IAAwBpI,gBAAgB,CACtC6H,YACGU,EAAcK,WAAWD,EAAMF,GAAYZ,aAEhDU,EAAczC,MAAMgD,WAAa,KACjCP,EAAczC,MAAMiD,UAApB,qBACEX,IAAwB1M,eAAemM,WADzC,aAORgD,EAAuBjJ,YAAU2G,EAAe,YAAY/M,WAC1D,WAEEqO,EAAQ,EACRF,EAAQ,EACRC,EAAQ,EACRG,EAAwB,GACxB3B,IAAwBpI,gBAAgB,CACtC8H,YAAa,UAInB0C,EAAwB5I,YAAU2G,EAAe,aAAa/M,WAC5D,SAACsP,GAIC,GAHA1C,IAAwBpI,gBAAgB,CACtC+H,cAAe,UAEbK,IAAwB1M,eAAeoM,YAAa,CAkBtD,IAjBA8B,EAAQD,EAAQmB,EAAEE,SAEN,IACK,IAAXlB,IACFD,EAAQ,EACRF,EAAQ,EACRC,EAAQ,GAEVE,GAAS,KAEM,IAAXA,IACFD,EAAQ,EACRF,EAAQ,EACRC,EAAQ,GAEVE,GAAS,GAEG,IAAVH,EAAa,CAED,KADdE,GAASD,IAEPxB,IAAwBpI,gBAAgB,CACtCmI,aAAa,IAGjB,IAAMN,EACJO,IAAwB1M,eAAemM,WAC/B,IAARgC,EACFzB,IAAwBpI,gBAAgB,CAAE6H,eAC1CU,EAAczC,MAAMiD,UAApB,qBAA8ClB,EAA9C,OAEEU,EAAcK,WAAW,IACzBf,EAAaU,EAAcK,WAAW,GAAGf,WAAa,IAGtDO,IAAwBpI,gBAAgB,CACtC6H,YACGU,EAAcK,WAAWH,GAAYZ,aAE1CU,EAAczC,MAAMgD,WAAa,KACjCP,EAAczC,MAAMiD,UAApB,sBAA+CR,EAC5CK,WAAWH,GAAYZ,WAD1B,QAKAU,EAAcK,WAAWD,IACzBnG,KAAKqG,IAAIhB,IACPU,EAAcK,WAAWD,GAAKd,aAGhCO,IAAwBpI,gBAAgB,CACtC6H,YACGU,EAAcK,WAAWD,EAAMF,GAAYZ,aAEhDU,EAAczC,MAAMgD,WAAa,KACjCP,EAAczC,MAAMiD,UAApB,qBACEX,IAAwB1M,eAAemM,WADzC,QAKJ8B,EAAQmB,EAAEE,YAIhBP,EAAsB7I,YAAU1D,OAAQ,WAAW1C,WAAU,YACA,IAAvD4M,IAAwB1M,eAAeyM,aACzCC,IAAwBxM,WAAW,CACjCuM,aAAa,IAEjB0B,EAAQ,EACRF,EAAQ,EACRC,EAAQ,EACRxB,IAAwBpI,gBAAgB,CAAE8H,YAAa,UAEzDwC,EAAyB1I,YACvB2G,EACA,cACA/M,WAAU,WACV4M,IAAwBpI,gBAAgB,CACtC+H,cAAe,aAGnBwC,EAAyB3I,YACvB2G,EACA,cACA/M,WAAU,WACN4M,IAAwB1M,eAAeoM,cAC3C+B,EAAQ,EACRF,EAAQ,EACRC,EAAQ,EACRxB,IAAwBpI,gBAAgB,CACtC8H,YAAa,KACbC,cAAe,iBAGnB2C,EAAwB9I,YAAU2G,EAAe,aAAa/M,WAC5D,SAACsP,GACCA,EAAEI,iBAEF9C,IAAwBpI,gBAAgB,CACtC8H,YAAagD,EAAEE,QACf7C,aAAa,OAInBkC,EAAgBnB,YACdX,EACAI,EACAF,GACAjN,WAAU,WACV4M,IAAwBpI,gBAAgB,CACtC6H,YAAaU,EAAcK,WAAWD,EAAMF,GAAYZ,aAE1DU,EAAczC,MAAMgD,WAAa,KACjCP,EAAczC,MAAMiD,UAApB,qBACEX,IAAwB1M,eAAemM,WADzC,UAMN,OAAO,WACLwC,GAAiBA,EAAcnQ,cAC/BoQ,GAA0BA,EAAuBpQ,cACjDqQ,GAA0BA,EAAuBrQ,cACjDuQ,GAAuBA,EAAoBvQ,cAC3CsQ,GAAyBA,EAAsBtQ,cAC/CwQ,GAAyBA,EAAsBxQ,cAC/CyQ,GAA0BA,EAAuBzQ,cACjD0Q,GAAyBA,EAAsB1Q,cAC/C2Q,GAAwBA,EAAqB3Q,gBChQvCiR,CAAsB5C,EAAe3L,EAAQ6L,GAAa,CAClE7L,EACA2L,KAIS6C,EAA4B,SAAC3C,EAAY4C,GACpD7F,oBD8PoC,SAACiD,EAAY4C,GACjD,OAAO,WACL,IAAM5F,EAAegE,cAA4BjO,WAAU,SAACuE,GAC1DqI,IAAwBxM,WAAW,CACjCoM,kBAAkB,GAAD,mBACZjI,EAAKkG,MAAM,EAAGwC,IADF,YAEZ1I,EAAKkG,MAAM,EAAGoF,UAIvB,OAAO,WAELjD,IAAwBpI,gBAAgB,CACtC+H,cAAe,aAEjBtC,GAAgBA,EAAavL,cAC7BoR,IAAO1P,WAAW,CAChB2P,eAAe,MC/QXC,CAAuB/C,EAAY4C,GAAkB,K,mCCuHjE,SAASI,EAAkBnD,GAAuC,IAA7BE,EAA4B,uDAAlB,EAAGD,EAAe,uCAC3DH,IAAwB1M,eAAeuM,kBACzCI,YAAiBC,EAAUC,EAAeC,EA7H7B,IA6HkDhN,YAGpDkQ,UA9HW,WACxB,IAAM9O,EACJwL,IAAwB1M,eAAesM,kBAAkBpL,QAAU,EACrE,EAA4D+O,mBAC1DvD,IAAwB1M,gBAD1B,mBAAOkQ,EAAP,KAA+B3B,EAA/B,KAGM4B,EAA4BtG,mBAqClC,OApCAyE,EAAyBC,GACzBG,EAAyBxN,EAVV,IAWfwO,EAXe,GACK,GAWpB5F,qBAAU,WACR,IAAMC,EAAe7D,YAAU1D,OAAQ,UACpC0B,KAAKqC,YAAa,MAClBzG,WAAU,WACT4M,IAAwBxM,WAAW,CAAEsM,YAAahK,OAAO8G,gBAEvDqF,EAAgBzI,YAAU1D,OAAQ,UACrC0B,KACCuB,aAAI,kBACFiH,IAAwBpI,gBAAgB,CACtC+H,cAAe,aAGnB9F,YAAa,MAEdzG,WAAU,WACT,IAAQsQ,EAAMD,EAA0BxJ,QAAQ0J,wBAAxCD,GACiBD,EAA0BxJ,QAA3C2J,aACYF,GAAKA,EAAI5N,OAAOc,aAEyB,aAAzDoJ,IAAwB1M,eAAeqM,eAEvCK,IAAwBpI,gBAAgB,CACtC+H,cAAe,gBAIzB,OAAO,WACLtC,EAAavL,cACbmQ,EAAcnQ,iBAEf,IAGD,6BACE2L,UAAU,2BACVD,IAAKiG,EACLI,YAAa,WAEX7D,IAAwBpI,gBAAgB,CACtC+H,cAAe,WAGnBmE,aAAc,WAEZ9D,IAAwBpI,gBAAgB,CACtC+H,cAAe,WAGnBoE,WAAY,WAEV/D,IAAwBpI,gBAAgB,CACtC+H,cAAe,cAGnBqE,cAAe,WAEbhE,IAAwBpI,gBAAgB,CACtC+H,cAAe,eAInB,yBAAKlC,UAAU,iCACb,wBAAIA,UAAU,wBACZ,kBAAC,IAAD,CACEC,MAAO,CAAEuG,eAAgB,QACzBC,GAAE,gEAFJ,mBAODV,EAAuB1D,aAAe,KACrC,uBACErC,UAAU,2DACV0G,QAAS,WACP,IAAMhE,EACJ1G,SAASqI,cAAc,sBACzBuB,EACElD,EAAcK,WAAW,GAAGjD,aAC3B,EACD4C,MAKPqD,EAAuB1D,aAAe,KACrC,uBACErC,UAAU,6DACV0G,QAAS,WACP,IAAMhE,EACJ1G,SAASqI,cAAc,sBACzBuB,EACElD,EAAcK,WAAW,GAAGjD,YAC5B,EACA4C,MAMR,kBAACtD,EAAA,QAAD,CACEE,MAAM,EACN5M,OAAO,EACPwH,KAAM6L,EAAuB5D,kBAC7B9C,QAAQ,EACR1E,SAAU","file":"static/js/10.91fa0ca2.chunk.js","sourcesContent":[null,null,null,"import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}",null,"import { BehaviorSubject } from \"rxjs\";\r\nconst initialState = {};\r\nconst behaviorSubject = new BehaviorSubject(initialState);\r\nlet state = initialState;\r\nconst cachesStore = {\r\n  subscribe: (setState) =>\r\n    behaviorSubject.subscribe((value) => setState(value)),\r\n  currentState: () => {\r\n    let ans;\r\n    behaviorSubject.subscribe((value) => {\r\n      ans = value;\r\n    });\r\n    return ans;\r\n  },\r\n  updateData: (obj) => {\r\n    state = {\r\n      ...state,\r\n      ...obj,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n};\r\n\r\nexport default cachesStore;\r\n",null,null,null,null,null,null,"/* eslint-disable no-useless-escape */\r\nexport const mobileAndTabletCheck = () => {\r\n  let check = false;\r\n  (function (a) {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\r\n        a\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n        a.substr(0, 4)\r\n      )\r\n    )\r\n      check = true;\r\n  })(navigator.userAgent || navigator.vendor || window.opera);\r\n  return check;\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport { BehaviorSubject } from \"rxjs\";\r\nconst initialState = {\r\n  genreDetailData: [],\r\n  pageOnDestroy: null,\r\n  pageIsLoaded:null,\r\n  isChangeView: false,\r\n  isStopScrollingUpdated: false,\r\n  currentPageOnDestroy: null,\r\n  query:null,\r\n  pageGenre: 1,\r\n  numberAnimeShowMore: (parseInt(window.innerHeight / 376) + 1) * 5,\r\n  width: null,\r\n  height: null,\r\n  quantityItemPerRow: 5,\r\n  widthItem: null,\r\n  heightItem: null,\r\n  rowStart: 0,\r\n  rowEnd: 0,\r\n  widthContainerList: \"100%\",\r\n  trigger:true,\r\n};\r\n\r\nconst subject = new BehaviorSubject(initialState);\r\nlet state = initialState;\r\nconst lazyLoadAnimeListStore = {\r\n  initialState,\r\n  subscribe: (setState) => subject.pipe().subscribe((v) => setState(v)),\r\n  currentState: () => {\r\n    let ans;\r\n    subject.subscribe((v) => (ans = v));\r\n    return ans || initialState;\r\n  },\r\n  init: () => {\r\n    subject.next(state);\r\n  },\r\n  updateData: (data = initialState) => {\r\n    state = {\r\n      ...state,\r\n      ...data,\r\n    };\r\n    subject.next(state);\r\n  },\r\n  updateDataQuick: (data = initialState) => {\r\n    const keys = Object.keys(data);\r\n    keys.forEach((key) => {\r\n      state[key] = data[key];\r\n    });\r\n  },\r\n};\r\n\r\nexport default lazyLoadAnimeListStore;\r\n","import { fromEvent, iif, of, timer } from \"rxjs\";\r\nimport { ajax } from \"rxjs/ajax\";\r\nimport {\r\n  catchError,\r\n  debounceTime,\r\n  filter,\r\n  mergeMap,\r\n  mergeMapTo,\r\n  pluck,\r\n  tap,\r\n  timeout,\r\n  map,\r\n} from \"rxjs/operators\";\r\nimport cachesStore from \"../store/caches\";\r\n\r\nimport lazyLoadAnimeListStore from \"../store/lazyLoadAnimeList\";\r\n\r\nexport const lazyLoadAnimeListStream = lazyLoadAnimeListStore;\r\n\r\nexport function fetchDataGenreAnimeList$(\r\n  page,\r\n  url,\r\n  idCartoonUser,\r\n  searchBy,\r\n  query\r\n) {\r\n  let obj = {\r\n    method: \"GET\",\r\n    url: url.replace(\"{page}\", page),\r\n  };\r\n  if ([\"latest\", \"box\"].includes(searchBy)) {\r\n    obj.headers = {\r\n      authorization: `Bearer ${idCartoonUser}`,\r\n    };\r\n  }\r\n  return iif(\r\n    () =>\r\n      cachesStore.currentState().genres &&\r\n      cachesStore.currentState().genres[url.replace(\"{page}\", page)],\r\n    timer(0).pipe(\r\n      map(() => cachesStore.currentState().genres[url.replace(\"{page}\", page)])\r\n    ),\r\n    timer(0).pipe(\r\n      filter(() => page === parseInt(page)),\r\n      tap(() => {\r\n        lazyLoadAnimeListStream.updateData({\r\n          pageIsLoaded: page,\r\n        });\r\n      }),\r\n      mergeMapTo(\r\n        iif(\r\n          () =>\r\n            cachesStore.currentState().genres &&\r\n            cachesStore.currentState().genres[query] &&\r\n            cachesStore.currentState().genres[query][page],\r\n          timer(0).pipe(\r\n            map(() => cachesStore.currentState().genres[query][page])\r\n          ),\r\n          timer(0).pipe(\r\n            mergeMap(() =>\r\n              ajax(obj).pipe(\r\n                timeout(5000),\r\n                pluck(\"response\"),\r\n                catchError(() => {\r\n                  return of({ error: true });\r\n                })\r\n              )\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nexport function updatePageScrollingWindow$() {\r\n  return fromEvent(window, \"scroll\").pipe(\r\n    filter(\r\n      () =>\r\n        document.body.scrollHeight - (window.scrollY + window.innerHeight) < 0\r\n    ),\r\n    debounceTime(300)\r\n  );\r\n}\r\n\r\nexport function calculateRowStartEnd(containerListRef, heightItem) {\r\n  const offsetTopContainerList = containerListRef.current.offsetTop;\r\n  const currentRow = Math.ceil(\r\n    (-offsetTopContainerList + window.scrollY + window.innerHeight) / heightItem\r\n  );\r\n  const numberRowToFillTheScreen =\r\n    Math.ceil(window.innerHeight / heightItem) +\r\n    lazyLoadAnimeListStream.currentState().quantityItemPerRow;\r\n  const rowStart =\r\n    currentRow - numberRowToFillTheScreen >= 1\r\n      ? currentRow - numberRowToFillTheScreen\r\n      : 1;\r\n  const rowEnd = currentRow + numberRowToFillTheScreen;\r\n  return { rowStart, rowEnd };\r\n}\r\n",null,null,null,null,"import \"./AnimeList.css\";\r\n\r\nimport loadable from \"@loadable/component\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { fromEvent, iif } from \"rxjs\";\r\n\r\nimport {\r\n  calculateRowStartEnd,\r\n  lazyLoadAnimeListStream,\r\n} from \"../../epics/lazyLoadAnimeList\";\r\nimport { debounceTime, takeWhile } from \"rxjs/operators\";\r\nimport { mobileAndTabletCheck } from \"../../util/checkMobileDevice\";\r\nconst responsiveObject = [\r\n  {\r\n    maxWidth: 100000,\r\n    minWidth: 1000,\r\n    quantityItemPerRow: 5,\r\n  },\r\n  {\r\n    maxWidth: 1000,\r\n    minWidth: 600,\r\n    quantityItemPerRow: 4,\r\n  },\r\n  {\r\n    maxWidth: 600,\r\n    minWidth: 500,\r\n    quantityItemPerRow: 3,\r\n  },\r\n  {\r\n    maxWidth: 500,\r\n    minWidth: 0,\r\n    quantityItemPerRow: 2,\r\n  },\r\n];\r\nconst AnimeItem = loadable(() => import(\"../AnimeItem/AnimeItem\"));\r\nconst AnimeList = ({\r\n  data,\r\n  error,\r\n  isWrap = true,\r\n  lazy = false,\r\n  empty = false,\r\n  virtual = false,\r\n  isAllowDelete = false,\r\n  searchBy,\r\n  type\r\n}) => {\r\n  const animeListRef = useRef();\r\n  const lazyLoadState = lazyLoadAnimeListStream.currentState();\r\n  useEffect(() => {\r\n    const subscription = iif(\r\n      () => mobileAndTabletCheck(),\r\n      fromEvent(window, \"scroll\").pipe(takeWhile(() => virtual)),\r\n      fromEvent(window, \"scroll\").pipe(\r\n        takeWhile(() => virtual),\r\n        debounceTime(50)\r\n      )\r\n    ).subscribe(() => {\r\n      const { rowStart, rowEnd } = calculateRowStartEnd(\r\n        animeListRef,\r\n        lazyLoadState.heightItem\r\n      );\r\n      if (\r\n        rowStart !== lazyLoadState.rowStart &&\r\n        rowEnd !== lazyLoadState.rowEnd\r\n      ) {\r\n        lazyLoadAnimeListStream.updateData({\r\n          rowStart,\r\n          rowEnd,\r\n        });\r\n      }\r\n    });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [\r\n    lazyLoadState.heightItem,\r\n    lazyLoadState.rowEnd,\r\n    lazyLoadState.rowStart,\r\n    virtual,\r\n  ]);\r\n  useEffect(() => {\r\n    handleResponsiveWidth(animeListRef, lazyLoadState);\r\n    const subscription = fromEvent(window, \"resize\")\r\n      .pipe(debounceTime(500))\r\n      .subscribe(() => {\r\n        handleResponsiveWidth(animeListRef, lazyLoadState);\r\n      });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [lazyLoadState.heightItem, lazyLoadState.rowEnd, lazyLoadState.rowStart]);\r\n  useEffect(() => {\r\n    if (!virtual) return;\r\n    const widthItem =\r\n      animeListRef.current.offsetWidth / lazyLoadState.quantityItemPerRow;\r\n    const heightItem = (widthItem * 340) / 224;\r\n    const height =\r\n      Math.ceil(\r\n        lazyLoadState.genreDetailData.length / lazyLoadState.quantityItemPerRow\r\n      ) * heightItem;\r\n    const { rowStart, rowEnd } = calculateRowStartEnd(animeListRef, heightItem);\r\n    lazyLoadAnimeListStream.updateData({\r\n      width: animeListRef.current.offsetWidth,\r\n      height,\r\n      widthItem,\r\n      heightItem,\r\n      rowStart: rowStart,\r\n      rowEnd: rowEnd,\r\n    });\r\n  }, [\r\n    lazyLoadState.heightItem,\r\n    lazyLoadState.quantityItemPerRow,\r\n    lazyLoadState.genreDetailData.length,\r\n    lazyLoadState.trigger,\r\n    virtual,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      ref={animeListRef}\r\n      className={isWrap ? \"list-anime\" : \"list-anime-nowrap\"}\r\n      style={{\r\n        position: virtual ? \"relative\" : \"static\",\r\n        height: lazyLoadState.height,\r\n        width: lazyLoadState.widthContainerList\r\n          ? lazyLoadState.widthContainerList\r\n          : 280,\r\n      }}\r\n    >\r\n      {data &&\r\n        !virtual &&\r\n        !error &&\r\n        data.map((anime, index) => {\r\n          return (\r\n            <AnimeItem\r\n              key={index}\r\n              anime={anime}\r\n              lazy={lazy}\r\n              searchBy={searchBy}\r\n              virtual={false}\r\n              isAllowDelete={isAllowDelete}\r\n              type={type}\r\n            />\r\n          );\r\n        })}\r\n      {data &&\r\n        virtual &&\r\n        !error &&\r\n        data\r\n          .slice(\r\n            (lazyLoadState.rowStart - 1) * lazyLoadState.quantityItemPerRow,\r\n            (lazyLoadState.rowEnd - 1) * lazyLoadState.quantityItemPerRow\r\n          )\r\n          .map((anime, index) => {\r\n            return (\r\n              <div\r\n                key={\r\n                  (lazyLoadState.rowStart - 1) *\r\n                    lazyLoadState.quantityItemPerRow +\r\n                  index\r\n                }\r\n                style={\r\n                  virtual\r\n                    ? {\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        height: lazyLoadState.heightItem,\r\n                        width: lazyLoadState.widthItem,\r\n                        position: \"absolute\",\r\n                        top:\r\n                          parseInt(\r\n                            ((lazyLoadState.rowStart - 1) *\r\n                              lazyLoadState.quantityItemPerRow +\r\n                              index) /\r\n                              lazyLoadState.quantityItemPerRow\r\n                          ) * lazyLoadState.heightItem,\r\n                        left:\r\n                          parseInt(\r\n                            ((lazyLoadState.rowStart - 1) *\r\n                              lazyLoadState.quantityItemPerRow +\r\n                              index) %\r\n                              lazyLoadState.quantityItemPerRow\r\n                          ) * lazyLoadState.widthItem,\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                <AnimeItem\r\n                type={type}\r\n                  anime={anime}\r\n                  lazy={lazy}\r\n                  virtual={true}\r\n                  isAllowDelete={isAllowDelete}\r\n                  styleAnimeItem={{ width: \"90%\", height: \"95%\" }}\r\n                  searchBy={searchBy}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n      {data && data.length === 0 && empty && (\r\n        <div className=\"empty\">\r\n          <CircularProgress color=\"secondary\" size=\"4rem\" />\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div\r\n          style={{\r\n            margin: \"100px auto 0 auto\",\r\n            color: \"white\",\r\n            fontSize: \"150%\",\r\n          }}\r\n        >\r\n          Anime is being updated...\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction handleResponsiveWidth(animeListRef, lazyLoadState) {\r\n  const { rowStart, rowEnd } = calculateRowStartEnd(\r\n    animeListRef,\r\n    lazyLoadState.heightItem\r\n  );\r\n  for (let i = 0; i < responsiveObject.length; i++) {\r\n    const { maxWidth, minWidth, quantityItemPerRow } = responsiveObject[i];\r\n    if (window.innerWidth < maxWidth && window.innerWidth > minWidth) {\r\n      lazyLoadAnimeListStream.updateData({\r\n        quantityItemPerRow,\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  if (rowStart !== lazyLoadState.rowStart && rowEnd !== lazyLoadState.rowEnd) {\r\n    lazyLoadAnimeListStream.updateData({\r\n      rowStart,\r\n      rowEnd,\r\n    });\r\n  }\r\n  lazyLoadAnimeListStream.updateData({\r\n    trigger: !lazyLoadAnimeListStream.currentState().trigger,\r\n  });\r\n}\r\n\r\nexport default AnimeList;\r\n",null,null,null,null,null,null,null,"import { BehaviorSubject } from \"rxjs\";\r\nconst initialState = {\r\n  offsetLeft: 0,\r\n  mouseStartX: null,\r\n  modeScrolling: \"interval\",\r\n  upcomingAnimeList: [],\r\n  shouldScrollLeft: true,\r\n  screenWidth: null,\r\n  isScrolling: false\r\n};\r\nconst behaviorSubject = new BehaviorSubject(initialState);\r\n\r\nlet state = initialState;\r\n\r\nconst upcomingAnimeListStore = {\r\n  initialState,\r\n  subscribe: (setState) => behaviorSubject.subscribe((v) => setState(v)),\r\n  currentState: () => {\r\n    let ans;\r\n    behaviorSubject.subscribe((v) => {\r\n      ans = v;\r\n    });\r\n    return ans || initialState;\r\n  },\r\n  init: () => {\r\n    behaviorSubject.next(state);\r\n  },\r\n  updateData: (data = initialState) => {\r\n    state = {\r\n      ...state,\r\n      ...data,\r\n    };\r\n    behaviorSubject.next(state);\r\n  },\r\n  updateDataQuick: (data = initialState) => {\r\n    const keys = Object.keys(data);\r\n    keys.forEach((key) => {\r\n      state[key] = data[key];\r\n    });\r\n  },\r\n};\r\n\r\n\r\nexport default upcomingAnimeListStore;\r\n","import { asyncScheduler, interval, of, timer } from \"rxjs\";\r\nimport { ajax } from \"rxjs/ajax\";\r\nimport {\r\n  catchError,\r\n  filter,\r\n  pluck,\r\n  retry,\r\n  switchMap,\r\n  takeWhile,\r\n  tap,\r\n  throttleTime,\r\n} from \"rxjs/operators\";\r\n\r\nimport upcomingAnimeListStore from \"../store/upcomingAnimeList\";\r\n\r\nexport const upcomingAnimeListStream = upcomingAnimeListStore;\r\n\r\nexport const scrollAnimeUser$ = (\r\n  distance,\r\n  elementScroll,\r\n  forward,\r\n  numberList\r\n) => {\r\n  let deltaDistance = 0;\r\n  let end = upcomingAnimeListStream.currentState().upcomingAnimeList.length - 7;\r\n  return timer(0, 2).pipe(\r\n    takeWhile(() => deltaDistance < distance),\r\n    tap(() => {\r\n      upcomingAnimeListStream.updateDataQuick({ modeScrolling: \"enter\" });\r\n      upcomingAnimeListStream.updateDataQuick({ shouldScrollLeft: false });\r\n      deltaDistance += 10;\r\n      let check = true;\r\n      const offsetLeft =\r\n        upcomingAnimeListStream.currentState().offsetLeft -\r\n        deltaDistance * forward;\r\n      if (\r\n        elementScroll.childNodes[end] &&\r\n        Math.abs(offsetLeft) >= elementScroll.childNodes[end].offsetLeft\r\n      ) {\r\n        upcomingAnimeListStream.updateDataQuick({\r\n          offsetLeft: -elementScroll.childNodes[end - numberList].offsetLeft,\r\n        });\r\n        elementScroll.style.transition = \"0s\";\r\n        elementScroll.style.transform = `translateX(${\r\n          upcomingAnimeListStream.currentState().offsetLeft\r\n        })`;\r\n        check = false;\r\n      }\r\n      if (\r\n        elementScroll.childNodes[0] &&\r\n        offsetLeft - elementScroll.childNodes[0].offsetLeft > 0\r\n      ) {\r\n        console.log(\"reset\");\r\n        // stream.updateOffsetLeft(\r\n        //   -elementScroll.childNodes[numberList].offsetLeft\r\n        // );\r\n        upcomingAnimeListStream.updateDataQuick({\r\n          offsetLeft: -elementScroll.childNodes[numberList].offsetLeft,\r\n        });\r\n        elementScroll.style.transition = \"0s\";\r\n        elementScroll.style.transform = `translateX(${\r\n          upcomingAnimeListStream.currentState().offsetLeft\r\n        })`;\r\n        check = false;\r\n      }\r\n      if (check)\r\n        elementScroll.style.transform = `translateX(${\r\n          upcomingAnimeListStream.currentState().offsetLeft -\r\n          deltaDistance * forward\r\n        }px)`;\r\n    }),\r\n    filter(() => deltaDistance >= distance),\r\n    tap(() => {\r\n      upcomingAnimeListStream.updateDataQuick({\r\n        offsetLeft:\r\n          upcomingAnimeListStream.currentState().offsetLeft -\r\n          deltaDistance * forward,\r\n      });\r\n      upcomingAnimeListStream.updateDataQuick({\r\n        shouldScrollLeft: true,\r\n        modeScrolling: \"interval\",\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\nexport const scrollAnimeInterval$ = (scrollE, end) => {\r\n  return interval(20).pipe(\r\n    filter(\r\n      () => upcomingAnimeListStream.currentState().modeScrolling === \"interval\"\r\n    ),\r\n    tap(() => {\r\n      const offsetLeft =\r\n        upcomingAnimeListStream.currentState().offsetLeft - 2.4;\r\n      upcomingAnimeListStream.updateDataQuick({ offsetLeft });\r\n      scrollE.style.transform = `translateX(${offsetLeft}px)`;\r\n    }),\r\n    filter(\r\n      () =>\r\n        scrollE.childNodes[end] &&\r\n        Math.abs(upcomingAnimeListStream.currentState().offsetLeft) >=\r\n          scrollE.childNodes[end].offsetLeft\r\n    ),\r\n    throttleTime(1000, asyncScheduler, {\r\n      leading: true,\r\n      trailing: false,\r\n    })\r\n  );\r\n};\r\n\r\nexport const upcomingAnimeListUpdated$ = () => {\r\n  return timer(0).pipe(\r\n    filter(\r\n      () =>\r\n        upcomingAnimeListStream.currentState().upcomingAnimeList.length === 0\r\n    ),\r\n    switchMap(() =>\r\n      ajax({\r\n        url: `https://api.jikan.moe/v4/anime?status=upcoming&order_by=favorites&sort=desc`,\r\n      }).pipe(\r\n        pluck(\"response\", \"data\"),\r\n        retry(),\r\n        catchError(() => of([]))\r\n      )\r\n    )\r\n  );\r\n};\r\n","import { fromEvent } from \"rxjs\";\r\n\r\nimport { stream } from \"../epics/home\";\r\nimport {\r\n  scrollAnimeInterval$,\r\n  upcomingAnimeListStream,\r\n  upcomingAnimeListUpdated$,\r\n} from \"../epics/upcomingAnimeList\";\r\n\r\nexport const initUpcomingAnimeList = (setUpcomingAnimeListState) => {\r\n  return () => {\r\n    const subscription = upcomingAnimeListStream.subscribe(\r\n      setUpcomingAnimeListState\r\n    );\r\n    upcomingAnimeListStream.init();\r\n    upcomingAnimeListStream.updateData({ screenWidth: window.innerWidth });\r\n    const elementScroll = document.querySelector(\".list-anime-nowrap\");\r\n    elementScroll.style.transform = `translateX(${\r\n      upcomingAnimeListStream.currentState().offsetLeft\r\n    }px)`;\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  };\r\n};\r\n\r\nlet posX1 = 0;\r\nlet posX2 = 0;\r\nlet delta = 0;\r\nlet isLeft = false;\r\nlet saveMovementTouchList = [];\r\nexport const keepDragMoveAnimeList = (elementScroll, length, numberList) => {\r\n  return () => {\r\n    let subscription2,\r\n      subscriptionMouseEnter,\r\n      subscriptionMouseLeave,\r\n      subscriptionMouseMove,\r\n      subscriptionMouseUp,\r\n      subscriptionMouseDown,\r\n      subscriptionTouchStart,\r\n      subscriptionTouchMove,\r\n      subscriptionTouchEnd;\r\n    if (length !== 0) {\r\n      if (elementScroll) {\r\n        const end = length - 7;\r\n        subscriptionTouchStart = fromEvent(\r\n          elementScroll,\r\n          \"touchstart\"\r\n        ).subscribe((e) => {\r\n          upcomingAnimeListStream.updateDataQuick({\r\n            mouseStartX: e.touches[0].clientX,\r\n          });\r\n        });\r\n        subscriptionTouchMove = fromEvent(elementScroll, \"touchmove\").subscribe(\r\n          (e) => {\r\n            if (saveMovementTouchList.length < 5) {\r\n              saveMovementTouchList.push(window.scrollY);\r\n              return;\r\n            }\r\n            let deltaClientY = 0;\r\n            if (saveMovementTouchList.length === 5) {\r\n              deltaClientY = Math.abs(\r\n                saveMovementTouchList[saveMovementTouchList.length - 1] -\r\n                  saveMovementTouchList[0]\r\n              );\r\n            }\r\n            if (deltaClientY > 1) return;\r\n            if (upcomingAnimeListStream.currentState().mouseStartX) {\r\n              posX2 = posX1 - e.touches[0].clientX;\r\n              if (posX2 < 0) {\r\n                if (isLeft === false) {\r\n                  delta = 0;\r\n                  posX1 = 0;\r\n                  posX2 = 0;\r\n                }\r\n                isLeft = true;\r\n              } else {\r\n                if (isLeft === true) {\r\n                  delta = 0;\r\n                  posX1 = 0;\r\n                  posX2 = 0;\r\n                }\r\n                isLeft = false;\r\n              }\r\n              if (posX1 !== 0) {\r\n                delta -= posX2;\r\n              }\r\n              posX1 = e.touches[0].clientX;\r\n              const offsetLeft =\r\n                upcomingAnimeListStream.currentState().offsetLeft + delta * 0.1;\r\n              elementScroll.style.transform = `translateX(${offsetLeft}px)`;\r\n              // stream.updateOffsetLeft(offsetLeft);\r\n              upcomingAnimeListStream.updateDataQuick({\r\n                offsetLeft,\r\n              });\r\n              if (\r\n                elementScroll.childNodes[0] &&\r\n                offsetLeft - elementScroll.childNodes[0].offsetLeft > 0\r\n              ) {\r\n                upcomingAnimeListStream.updateDataQuick({\r\n                  offsetLeft: -elementScroll.childNodes[numberList].offsetLeft,\r\n                });\r\n                elementScroll.style.transition = \"0s\";\r\n                elementScroll.style.transform = `translateX(${-elementScroll\r\n                  .childNodes[numberList].offsetLeft}px)`;\r\n              }\r\n\r\n              if (\r\n                elementScroll.childNodes[end] &&\r\n                Math.abs(offsetLeft) >= elementScroll.childNodes[end].offsetLeft\r\n              ) {\r\n                upcomingAnimeListStream.updateDataQuick({\r\n                  offsetLeft:\r\n                    -elementScroll.childNodes[end - numberList].offsetLeft,\r\n                });\r\n                elementScroll.style.transition = \"0s\";\r\n                elementScroll.style.transform = `translateX(${\r\n                  upcomingAnimeListStream.currentState().offsetLeft\r\n                }px)`;\r\n              }\r\n            }\r\n          }\r\n        );\r\n        subscriptionTouchEnd = fromEvent(elementScroll, \"touchend\").subscribe(\r\n          () => {\r\n            // stream.updateMouseStartX(null);\r\n            delta = 0;\r\n            posX1 = 0;\r\n            posX2 = 0;\r\n            saveMovementTouchList = [];\r\n            upcomingAnimeListStream.updateDataQuick({\r\n              mouseStartX: null,\r\n            });\r\n          }\r\n        );\r\n        subscriptionMouseMove = fromEvent(elementScroll, \"mousemove\").subscribe(\r\n          (e) => {\r\n            upcomingAnimeListStream.updateDataQuick({\r\n              modeScrolling: \"enter\",\r\n            });\r\n            if (upcomingAnimeListStream.currentState().mouseStartX) {\r\n              posX2 = posX1 - e.clientX;\r\n\r\n              if (posX2 < 0) {\r\n                if (isLeft === false) {\r\n                  delta = 0;\r\n                  posX1 = 0;\r\n                  posX2 = 0;\r\n                }\r\n                isLeft = true;\r\n              } else {\r\n                if (isLeft === true) {\r\n                  delta = 0;\r\n                  posX1 = 0;\r\n                  posX2 = 0;\r\n                }\r\n                isLeft = false;\r\n              }\r\n              if (posX1 !== 0) {\r\n                delta -= posX2;\r\n                if (delta !== 0) {\r\n                  upcomingAnimeListStream.updateDataQuick({\r\n                    isScrolling: true,\r\n                  });\r\n                }\r\n                const offsetLeft =\r\n                  upcomingAnimeListStream.currentState().offsetLeft +\r\n                  delta * 0.05;\r\n                upcomingAnimeListStream.updateDataQuick({ offsetLeft });\r\n                elementScroll.style.transform = `translateX(${offsetLeft}px)`;\r\n                if (\r\n                  elementScroll.childNodes[0] &&\r\n                  offsetLeft - elementScroll.childNodes[0].offsetLeft > 0\r\n                ) {\r\n                  // console.log(\"ha\")\r\n                  upcomingAnimeListStream.updateDataQuick({\r\n                    offsetLeft:\r\n                      -elementScroll.childNodes[numberList].offsetLeft,\r\n                  });\r\n                  elementScroll.style.transition = \"0s\";\r\n                  elementScroll.style.transform = `translateX(${-elementScroll\r\n                    .childNodes[numberList].offsetLeft}px)`;\r\n                }\r\n\r\n                if (\r\n                  elementScroll.childNodes[end] &&\r\n                  Math.abs(offsetLeft) >=\r\n                    elementScroll.childNodes[end].offsetLeft\r\n                ) {\r\n                  // console.log(\"ha\")\r\n                  upcomingAnimeListStream.updateDataQuick({\r\n                    offsetLeft:\r\n                      -elementScroll.childNodes[end - numberList].offsetLeft,\r\n                  });\r\n                  elementScroll.style.transition = \"0s\";\r\n                  elementScroll.style.transform = `translateX(${\r\n                    upcomingAnimeListStream.currentState().offsetLeft\r\n                  }px)`;\r\n                }\r\n              }\r\n              posX1 = e.clientX;\r\n            }\r\n          }\r\n        );\r\n        subscriptionMouseUp = fromEvent(window, \"mouseup\").subscribe(() => {\r\n          if (upcomingAnimeListStream.currentState().isScrolling === true)\r\n            upcomingAnimeListStream.updateData({\r\n              isScrolling: false,\r\n            });\r\n          delta = 0;\r\n          posX1 = 0;\r\n          posX2 = 0;\r\n          upcomingAnimeListStream.updateDataQuick({ mouseStartX: null });\r\n        });\r\n        subscriptionMouseEnter = fromEvent(\r\n          elementScroll,\r\n          \"mouseenter\"\r\n        ).subscribe(() => {\r\n          upcomingAnimeListStream.updateDataQuick({\r\n            modeScrolling: \"enter\",\r\n          });\r\n        });\r\n        subscriptionMouseLeave = fromEvent(\r\n          elementScroll,\r\n          \"mouseleave\"\r\n        ).subscribe(() => {\r\n          if (upcomingAnimeListStream.currentState().mouseStartX) return;\r\n          delta = 0;\r\n          posX1 = 0;\r\n          posX2 = 0;\r\n          upcomingAnimeListStream.updateDataQuick({\r\n            mouseStartX: null,\r\n            modeScrolling: \"interval\",\r\n          });\r\n        });\r\n        subscriptionMouseDown = fromEvent(elementScroll, \"mousedown\").subscribe(\r\n          (e) => {\r\n            e.preventDefault();\r\n            // stream.updateMouseStartX(e.clientX);\r\n            upcomingAnimeListStream.updateDataQuick({\r\n              mouseStartX: e.clientX,\r\n              isScrolling: false,\r\n            });\r\n          }\r\n        );\r\n        subscription2 = scrollAnimeInterval$(\r\n          elementScroll,\r\n          end,\r\n          numberList\r\n        ).subscribe(() => {\r\n          upcomingAnimeListStream.updateDataQuick({\r\n            offsetLeft: -elementScroll.childNodes[end - numberList].offsetLeft,\r\n          });\r\n          elementScroll.style.transition = \"0s\";\r\n          elementScroll.style.transform = `translateX(${\r\n            upcomingAnimeListStream.currentState().offsetLeft\r\n          }px)`;\r\n        });\r\n      }\r\n    }\r\n    return () => {\r\n      subscription2 && subscription2.unsubscribe();\r\n      subscriptionMouseEnter && subscriptionMouseEnter.unsubscribe();\r\n      subscriptionMouseLeave && subscriptionMouseLeave.unsubscribe();\r\n      subscriptionMouseUp && subscriptionMouseUp.unsubscribe();\r\n      subscriptionMouseMove && subscriptionMouseMove.unsubscribe();\r\n      subscriptionMouseDown && subscriptionMouseDown.unsubscribe();\r\n      subscriptionTouchStart && subscriptionTouchStart.unsubscribe();\r\n      subscriptionTouchMove && subscriptionTouchMove.unsubscribe();\r\n      subscriptionTouchEnd && subscriptionTouchEnd.unsubscribe();\r\n    };\r\n  };\r\n};\r\n\r\nexport const fetchUpcomingAnimeList = (numberList, numberCloneList) => {\r\n  return () => {\r\n    const subscription = upcomingAnimeListUpdated$().subscribe((data) => {\r\n      upcomingAnimeListStream.updateData({\r\n        upcomingAnimeList: [\r\n          ...data.slice(0, numberList),\r\n          ...data.slice(0, numberCloneList),\r\n        ],\r\n      });\r\n    });\r\n    return () => {\r\n      // updateModeScrolling(\"interval\");\r\n      upcomingAnimeListStream.updateDataQuick({\r\n        modeScrolling: \"interval\",\r\n      });\r\n      subscription && subscription.unsubscribe();\r\n      stream.updateData({\r\n        isFirstLaunch: false,\r\n      });\r\n    };\r\n  };\r\n};\r\n","import { useEffect } from \"react\";\r\nimport {\r\n  fetchUpcomingAnimeList,\r\n  keepDragMoveAnimeList,\r\n  initUpcomingAnimeList,\r\n} from \"../Functions/upcomingAnimeList\";\r\n\r\nexport const useInitUpcomingAnimeList = (setUpcomingAnimeListState) => {\r\n  useEffect(initUpcomingAnimeList(setUpcomingAnimeListState), []);\r\n};\r\n\r\nexport const useKeepDragMoveAnimeList = (length, numberList) => {\r\n  const elementScroll = document.querySelector(\".list-anime-nowrap\");\r\n  useEffect(keepDragMoveAnimeList(elementScroll, length, numberList), [\r\n    length,\r\n    elementScroll,\r\n  ]);\r\n};\r\n\r\nexport const useFetchUpcomingAnimeList = (numberList, numberCloneList) => {\r\n  useEffect(fetchUpcomingAnimeList(numberList, numberCloneList), []);\r\n};\r\n","import \"./UpcomingAnimeList.css\";\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { scrollAnimeUser$ } from \"../../epics/upcomingAnimeList\";\r\nimport { upcomingAnimeListStream } from \"../../epics/upcomingAnimeList\";\r\nimport {\r\n  useFetchUpcomingAnimeList,\r\n  useKeepDragMoveAnimeList,\r\n  useInitUpcomingAnimeList,\r\n} from \"../../Hook/upcomingAnimeList\";\r\nimport AnimeList from \"../AnimeList/AnimeList\";\r\nimport { fromEvent } from \"rxjs\";\r\nimport { debounceTime, tap } from \"rxjs/operators\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet numberList = 25;\r\nlet numberCloneList = 8;\r\nconst UpcomingAnimeList = () => {\r\n  const length =\r\n    upcomingAnimeListStream.currentState().upcomingAnimeList.length || 0;\r\n  const [upcomingAnimeListState, setUpcomingAnimeListState] = useState(\r\n    upcomingAnimeListStream.currentState()\r\n  );\r\n  const upcomingAnimeContainerRef = useRef();\r\n  useInitUpcomingAnimeList(setUpcomingAnimeListState);\r\n  useKeepDragMoveAnimeList(length, numberList);\r\n  useFetchUpcomingAnimeList(numberList, numberCloneList);\r\n  useEffect(() => {\r\n    const subscription = fromEvent(window, \"resize\")\r\n      .pipe(debounceTime(200))\r\n      .subscribe(() => {\r\n        upcomingAnimeListStream.updateData({ screenWidth: window.innerWidth });\r\n      });\r\n    const subscription2 = fromEvent(window, \"scroll\")\r\n      .pipe(\r\n        tap(() =>\r\n          upcomingAnimeListStream.updateDataQuick({\r\n            modeScrolling: \"enter\",\r\n          })\r\n        ),\r\n        debounceTime(500)\r\n      )\r\n      .subscribe(() => {\r\n        const { y } = upcomingAnimeContainerRef.current.getBoundingClientRect();\r\n        const { offsetHeight } = upcomingAnimeContainerRef.current;\r\n        if (-offsetHeight < y && y < window.innerHeight) {\r\n          if (\r\n            upcomingAnimeListStream.currentState().modeScrolling !== \"interval\"\r\n          )\r\n            upcomingAnimeListStream.updateDataQuick({\r\n              modeScrolling: \"interval\",\r\n            });\r\n        }\r\n      });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n      subscription2.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section\r\n      className=\"upcoming-anime-container\"\r\n      ref={upcomingAnimeContainerRef}\r\n      onTouchMove={() => {\r\n        // updateModeScrolling(\"enter\");\r\n        upcomingAnimeListStream.updateDataQuick({\r\n          modeScrolling: \"enter\",\r\n        });\r\n      }}\r\n      onTouchStart={() => {\r\n        // updateModeScrolling(\"enter\");\r\n        upcomingAnimeListStream.updateDataQuick({\r\n          modeScrolling: \"enter\",\r\n        });\r\n      }}\r\n      onTouchEnd={() => {\r\n        // updateModeScrolling(\"interval\");\r\n        upcomingAnimeListStream.updateDataQuick({\r\n          modeScrolling: \"interval\",\r\n        });\r\n      }}\r\n      onTouchCancel={() => {\r\n        // updateModeScrolling(\"interval\");\r\n        upcomingAnimeListStream.updateDataQuick({\r\n          modeScrolling: \"interval\",\r\n        });\r\n      }}\r\n    >\r\n      <div className=\"container-upcoming-anime-main\">\r\n        <h1 className=\"title-upcoming-anime\">\r\n          <Link\r\n            style={{ textDecoration: \"none\" }}\r\n            to={`/storage?page=1&status=upcoming&order_by=favorites&sort=desc`}\r\n          >\r\n            Upcoming anime\r\n          </Link>\r\n        </h1>\r\n        {upcomingAnimeListState.screenWidth >= 700 && (\r\n          <i\r\n            className=\"button-scrolling left fas fa-arrow-alt-circle-left fa-3x\"\r\n            onClick={() => {\r\n              const elementScroll =\r\n                document.querySelector(\".list-anime-nowrap\");\r\n              scrollByTranslate(\r\n                elementScroll.childNodes[0].offsetWidth,\r\n                -1,\r\n                elementScroll\r\n              );\r\n            }}\r\n          ></i>\r\n        )}\r\n        {upcomingAnimeListState.screenWidth >= 700 && (\r\n          <i\r\n            className=\"button-scrolling right fas fa-arrow-alt-circle-right fa-3x\"\r\n            onClick={() => {\r\n              const elementScroll =\r\n                document.querySelector(\".list-anime-nowrap\");\r\n              scrollByTranslate(\r\n                elementScroll.childNodes[0].offsetWidth,\r\n                1,\r\n                elementScroll\r\n              );\r\n            }}\r\n          ></i>\r\n        )}\r\n\r\n        <AnimeList\r\n          lazy={true}\r\n          empty={true}\r\n          data={upcomingAnimeListState.upcomingAnimeList}\r\n          isWrap={false}\r\n          searchBy={\"anime\"}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nfunction scrollByTranslate(distance, forward = 1, elementScroll) {\r\n  if (upcomingAnimeListStream.currentState().shouldScrollLeft)\r\n    scrollAnimeUser$(distance, elementScroll, forward, numberList).subscribe();\r\n}\r\n\r\nexport default UpcomingAnimeList;\r\n"],"sourceRoot":""}